{"version":3,"sources":["lib/helper_functions.js","components/Header/Header.js","constants.js","lib/Api.js","components/Authentication/Authentication.js","App.js","components/Dashboard/Dashboard.js","components/OrderEdit/OrderEdit.js","components/OrderInsert/OrderInsert.js","components/Paginatior/Paginatior.js","components/Order/Order.js","components/ProductInsert/ProductInsert.js","components/ProductEdit/ProductEdit.js","components/Product/Product.js","components/UserInsert/UserInsert.js","components/UserEdit/UserEdit.js","components/User/User.js","serviceWorker.js","AuthenticatedRoute.js","components/Revenue/Revenue.js","index.js"],"names":["addDeleteCheckers","items","i","length","formulateOrderNumber","date","dateSpliited","Date","toLocaleDateString","split","timeSpliited","toLocaleTimeString","tokenExpired","localStorage","getItem","JWT","exp","now","Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","logout","bind","assertThisInitialized","state","redirectToRevenue","redirectToDashboard","removeItem","react_default","a","createElement","className","react_router_dom","to","style","color","textDecoration","onClick","React","Component","API_URL","getHeaders","headers","x-access-token","deleteOrders","idToDelete","axios","delete","Constants","getProducts","get","deleteProducts","editProduct","editProductBody","patch","getUsers","deleteUsers","editUser","editUserBody","Authentication","handleUsername","handlePassword","submitForm","username","password","errMsg","hideAlert","event","setState","target","value","_this2","preventDefault","authBody","post","authenticateAdmin","then","res","setItem","data","catch","err","response","msg","react_router","onSubmit","role","hidden","type","placeholder","onChange","autoComplete","App","Header_Header_Header","Authentication_Authentication_Authentication","Dashboard","activeStyle","backgroundColor","aria-label","first","second","third","OrderEdit","editOrder","handleQuantity","handleCode","initOrderDetails","handleStatus","handleDiscountChange","handleDiscountAmount","handleDiscountRemove","products","orderDetails","status","checked","discountAmount","checkedDiscountRemove","console","log","discountPercentage","_this3","editedOrderDetails","order","quantity","code","editOrderBody","preOrderDetails","orderId","_id","deliveryDate","price","updateOrder","closeModal","index","id","ordersSize","newOrderDetails","newQuantity","Number","prevState","map","orderDetail","pointer","objectSpread","newCode","handleQuantityHelper","handleCodeHelper","_this4","applyDiscount","removeDiscount","htmlFor","showModal","Modal","isOpen","ModalHeader","ModalBody","key","product","ModalFooter","OrderInsert","addOrderDetail","removeSelect","handleUser","getAllProducts","getAllUsers","filterUsernames","setFilterUsernames","users","selects","selectedUser","usernames","label","instagramUsername","concat","toConsumableArray","newSelects","splice","select","selectedOption","customerId","window","setTimeout","insertOrder","getOrders","_this5","filterUsername","filter","user","includes","_this6","instagramUsernamel","showModalInsert","react_select_browser_esm","options","index_es","icon","faTimes","submitOrder","Paginatior","handlePageChange","activePage","itemsPerPage","pageNumber","indexOfLastThing","indexOfFirstThing","itemsShown","slice","handleItems","Pagination_default","innerClass","totalItemsCount","itemsCountPerPage","itemClass","activeClass","hideNavigation","linkClass","activeLinkClass","Order","changeCheckboxValue","filterOrders","getAllOrders","handleOrdersShown","checkAllDelete","setOrdersShown","sortOrders","handleFilter","handleFilterAttribute","orders","filteredOrders","orderToEdit","ordersShown","checkAll","sortType","sortingDates","placingDate","filterValue","filterAttribute","filterAttributeOptions","sortFieldFlag","field","defineProperty","sort","b","undefined","idsToDelete","push","stateOrder","e","newOrders","defaultValue","orderNumber","toLocaleString","Paginatior_Paginatior_Paginatior","OrderEdit_OrderEdit_OrderEdit","OrderInsert_OrderInsert_OrderInsert","ProductInsert","handleName","handlePrice","submitProduct","name","insertProduct","ProductEdit","handleAvailableToSell","availableToSell","closeEditModal","showModalEdit","Product","filterProducts","handleProductsShown","productToEdit","productsShown","filteredProducts","stateProduct","ProductInsert_ProductInsert","ProductEdit_ProductEdit","UserInsert","handleInstagram","handleEmail","handlePhone","handleAddress","submitUser","email","phone","match","address","insertUser","UserEdit","handleInstagramUsername","userId","User","filterUsers","handleUsersShown","userToEdit","usersShown","stateUser","filteredUsers","UserInsert_UserInsert","UserEdit_UserEdit_UserEdit","Boolean","location","hostname","AuthenticatedRoute","_ref","component","rest","objectWithoutProperties","assign","render","exact","pathname","from","Revenue","total","getRevenue","result","routing","path","src_AuthenticatedRoute","Dashboard_Dashboard_Dashboard","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.786a7829.chunk.js","sourcesContent":["import * as JWT from 'jwt-decode';\r\n\r\nexport const addDeleteCheckers = (items) => {\r\n    for (let i = 0; i < items.length; i++) {\r\n        items[i]['orderNumber'] = formulateOrderNumber(items[i]['placingDate']);\r\n        items[i]['toDelete'] = false;\r\n    }\r\n    return items;\r\n}\r\n\r\nconst formulateOrderNumber = (date) => {\r\n    const dateSpliited = new Date(date).toLocaleDateString().split('/');\r\n    const timeSpliited = new Date(date).toLocaleTimeString().split(' ')[0].split(\":\");\r\n    let orderNumber = dateSpliited[0] + dateSpliited[1] + \"-\" + dateSpliited[2] + \"-\" + timeSpliited[0] + timeSpliited[1] + timeSpliited[2];\r\n    return orderNumber;\r\n}\r\n\r\nexport const tokenExpired = () => {\r\n    if (localStorage.getItem('token') == null || localStorage.getItem('token') === '') {\r\n        return true;\r\n    }\r\n    let decoded = JWT(localStorage.getItem('token'));\r\n    if (decoded.exp * 1000 <= Date.now()) {\r\n        return true;\r\n    }\r\n    return false;\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { tokenExpired } from '../../lib/helper_functions';\r\n\r\nimport './Header.css';\r\n\r\nexport default class Header extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.logout = this.logout.bind(this);\r\n        this.state = {\r\n            redirectToRevenue: false,\r\n            redirectToDashboard: false\r\n        };\r\n    }\r\n\r\n    logout() {\r\n        localStorage.removeItem('token');\r\n    }\r\n\r\n    render() {\r\n        if (tokenExpired() || localStorage.getItem('token') === '' || localStorage.getItem('token') === null) {\r\n            return (\r\n                <div className=\"header__main\">\r\n                    <nav className=\"navbar fixed-top navbar-light bg-info\">\r\n                        {/* <span className=\"navbar-brand\" href=\"#!\" style={{ color: '#fff' }}>Jawareb</span> */}\r\n                        <div>\r\n                            <ul>\r\n                                <li>\r\n                                    <Link to=\"/dashboard/orders\" style={{ color: '#fff', textDecoration: 'none' }}>Jawareb</Link>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n                \r\n            )\r\n        } else {\r\n            return (\r\n                <div className=\"header__main\">\r\n                    <nav className=\"navbar fixed-top navbar-light bg-info\">\r\n                        <div>\r\n                            <ul>\r\n                                <li>\r\n                                    <Link to=\"/dashboard/orders\" style={{ color: '#fff', textDecoration: 'none' }}>Jawareb</Link>\r\n                                </li>\r\n                                <li>\r\n                                    <Link to=\"/dashboard/orders\" style={{ color: '#fff', textDecoration: 'none' }}>Dashboard</Link>\r\n                                </li>\r\n                                <li>\r\n                                    <Link to=\"/analytics/revenue\" style={{ color: '#fff', textDecoration: 'none' }}>Revenue</Link>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                        <div>\r\n                            <Link style={{ color: '#fff', textDecoration: 'none' }} to=\"/\" onClick={this.logout}>Logout</Link>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n                \r\n            )\r\n        }\r\n    }\r\n}","// const PORT = process.env.PORT || 3001;\r\n// export const API_URL='http://localhost:3001';\r\nexport const API_URL= 'https://jawareb.herokuapp.com';","import axios from 'axios';\r\nimport * as Constants from '../constants';\r\n\r\nconst getHeaders = () => {\r\n    const headers = {\r\n        headers: {\r\n            'x-access-token': localStorage.getItem('token')\r\n        }\r\n    };\r\n    return headers;  \r\n}\r\n\r\nexport const getOrders = () => {\r\n    const headers = getHeaders();\r\n    return axios.get(Constants.API_URL + '/order', headers);\r\n};\r\n\r\nexport const insertOrder = (order) => {\r\n    const headers = getHeaders();\r\n    return axios.post(Constants.API_URL + '/order', order, headers)\r\n};\r\n\r\nexport const deleteOrders = (idToDelete) => {\r\n    const headers = getHeaders();\r\n    return axios.delete(Constants.API_URL + '/order/' + idToDelete, headers);\r\n}\r\n\r\nexport const editOrder = (editOrderBody) => {\r\n    const headers = getHeaders();\r\n    return axios.patch(Constants.API_URL + '/order', editOrderBody, headers);\r\n}\r\n\r\nexport const getProducts = () => {\r\n    const headers = getHeaders();\r\n    return axios.get(Constants.API_URL + '/product', headers);\r\n}\r\n\r\nexport const insertProduct = (product) => {\r\n    const headers = getHeaders();\r\n    return axios.post(Constants.API_URL + '/product', product, headers)\r\n};\r\n\r\nexport const deleteProducts = (idToDelete) => {\r\n    const headers = getHeaders();\r\n    return axios.delete(Constants.API_URL + '/product/' + idToDelete, headers);\r\n}\r\n\r\nexport const editProduct = (editProductBody) => {\r\n    const headers = getHeaders();\r\n    return axios.patch(Constants.API_URL + '/product', editProductBody, headers);\r\n}\r\n\r\nexport const getUsers = () => {\r\n    const headers = getHeaders();\r\n    return axios.get(Constants.API_URL + '/user', headers);\r\n}\r\n\r\nexport const insertUser = (user) => {\r\n    const headers = getHeaders();\r\n    return axios.post(Constants.API_URL + '/user', user, headers)\r\n};\r\n\r\nexport const deleteUsers = (idToDelete) => {\r\n    const headers = getHeaders();\r\n    return axios.delete(Constants.API_URL + '/user/' + idToDelete, headers);\r\n}\r\n\r\nexport const editUser = (editUserBody) => {\r\n    const headers = getHeaders();\r\n    return axios.patch(Constants.API_URL + '/user', editUserBody, headers);\r\n}\r\n\r\nexport const getRevenue = () => {\r\n    const headers = getHeaders();\r\n    return axios.get(Constants.API_URL + '/order/revenue', headers);\r\n}\r\n\r\nexport const authenticateAdmin = (authBody) => {\r\n    return  axios.post(Constants.API_URL + '/auth', authBody);\r\n}","import React from 'react';\r\nimport { authenticateAdmin } from '../../lib/Api';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport './Authentication.css';\r\nimport { tokenExpired } from '../../lib/helper_functions';\r\n\r\nexport default class Authentication extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleUsername = this.handleUsername.bind(this);\r\n        this.handlePassword = this.handlePassword.bind(this);\r\n        this.submitForm = this.submitForm.bind(this);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            errMsg: '',\r\n            hideAlert: true,\r\n            redirectToDashboard: false\r\n        };\r\n    }\r\n\r\n    handleUsername(event) {\r\n        this.setState({ username: event.target.value });\r\n    }\r\n\r\n    handlePassword(event) {\r\n        this.setState({ password: event.target.value });\r\n    }\r\n\r\n    submitForm(event) {\r\n        event.preventDefault();\r\n        if (this.state.username !== '' && this.state.password !== '') {\r\n            let authBody = {\r\n                username: this.state.username,\r\n                password: this.state.password\r\n            }\r\n            authenticateAdmin(authBody).then(res => {\r\n                localStorage.setItem('token', res.data);\r\n                this.setState({ errMsg: '', hideAlert: true, redirectToDashboard: true });\r\n            }).catch(err => {\r\n                if (err.response) {\r\n                    if (typeof err.response.data == 'object') {\r\n                        this.setState({ errMsg: err.response.data.msg, hideAlert: false });\r\n                    } else {\r\n                        this.setState({ errMsg: err.response.data, hideAlert: false });\r\n                    }\r\n                } else {\r\n                    this.setState({ errMsg: err.response, hideAlert: false });\r\n                }\r\n            });\r\n        } else {\r\n            this.setState({ errMsg: 'username and password can\\'t be empty', hideAlert: false });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!tokenExpired() || this.state.redirectToDashboard) {\r\n            return <Redirect to=\"/dashboard\" />\r\n        }\r\n        return(\r\n            <div className=\"row auth__main-container\">\r\n                <div className=\"col-md-8 auth__left-container\"></div>\r\n                <div className=\"col-md-4 auth__right-container\">\r\n                    <div className=\"auth__login-form\">\r\n                        <form onSubmit={this.submitForm}>\r\n                            <h4>Jawareb Admin Portal</h4>\r\n                            <div className=\"alert alert-danger\" role=\"alert\" hidden={this.state.hideAlert}>\r\n                                { this.state.errMsg }\r\n                            </div>\r\n                            <div className=\"auth__login-form-control\">\r\n                                <input type=\"text\" className=\"form-control\" placeholder=\"Username\" onChange={this.handleUsername} autoComplete=\"new-password\" />\r\n                            </div>\r\n                            <div className=\"auth__login-form-control\">\r\n                                <input type=\"password\" className=\"form-control\" placeholder=\"Password\" onChange={this.handlePassword} autoComplete=\"new-password\" />\r\n                            </div>\r\n                            <div className=\"auth__login-button\">\r\n                                <input type=\"submit\" className=\"btn btn-info\" value=\"Login\" />\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport Header from './components/Header/Header';\r\nimport Authentication from './components/Authentication/Authentication';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n      <div className=\"App\">\r\n        <Header></Header>\r\n        <Authentication></Authentication>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Header from '../Header/Header';\r\n\r\nimport './Dashboard.css';\r\n\r\nexport default class Dashboard extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeStyle: { backgroundColor: '#555', color: '#fff' },\r\n            style: { backgroundColor: '#e9ecef' }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Header></Header>\r\n                <div className=\"dashboard__container\">\r\n                    <div className=\"btn-group btn-group-lg\" role=\"group\" aria-label=\"Basic example\">\r\n                        <NavLink className=\"btn\" to={this.props.first} activeStyle={ this.state.activeStyle } style={ this.state.style }>\r\n                            {this.props.first.split('/')[this.props.first.split('/').length - 1]}\r\n                        </NavLink>\r\n                        <NavLink className=\"btn\" to={this.props.second} activeStyle={this.state.activeStyle} style={ this.state.style }>\r\n                            {this.props.second.split('/')[this.props.second.split('/').length - 1]}\r\n                        </NavLink>\r\n                        <NavLink className=\"btn\" to={this.props.third} activeStyle={this.state.activeStyle} style={ this.state.style }>\r\n                            {this.props.third.split('/')[this.props.third.split('/').length - 1]}\r\n                        </NavLink>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { getProducts, editOrder } from '../../lib/Api';\r\n\r\nimport './OrderEdit.css';\r\n\r\nexport default class OrderEdit extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.editOrder = this.editOrder.bind(this);\r\n        this.handleQuantity = this.handleQuantity.bind(this);\r\n        this.handleCode = this.handleCode.bind(this);\r\n        this.initOrderDetails = this.initOrderDetails.bind(this);\r\n        this.handleStatus = this.handleStatus.bind(this);\r\n        this.handleDiscountChange = this.handleDiscountChange.bind(this);\r\n        this.handleDiscountAmount = this.handleDiscountAmount.bind(this);\r\n        this.handleDiscountRemove = this.handleDiscountRemove.bind(this);\r\n        this.state = {\r\n            products: [],\r\n            orderDetails: [],\r\n            status: '',\r\n            checked: false,\r\n            discountAmount: '0',\r\n            checkedDiscountRemove: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        getProducts().then(res => {\r\n            if (res.data != null && res.data.products.length >= 1) {\r\n                this.setState({ products: res.data.products });\r\n            }\r\n        }).catch(err => {\r\n            console.log('err: ', err);\r\n        });\r\n    }\r\n\r\n    editOrder() {\r\n        let editedOrderDetails = [];\r\n        if (this.state.orderDetails.length === 0) {\r\n            for (let i = 0; i < this.props.order.orderDetails.length; i++) {\r\n                editedOrderDetails[i] = { quantity: this.props.order.orderDetails[i].quantity, code: this.props.order.orderDetails[i].code }\r\n            }\r\n        } else {\r\n            editedOrderDetails = this.state.orderDetails;\r\n            for (let i = 0; i < editedOrderDetails.length; i++) {\r\n                if (editedOrderDetails[i].quantity === '' || editedOrderDetails[i].quantity == null) {\r\n                    editedOrderDetails[i].quantity = this.props.order.orderDetails[i].quantity;\r\n                }\r\n                if (editedOrderDetails[i].code === '' || editedOrderDetails[i].code == null) {\r\n                    editedOrderDetails[i].code = this.props.order.orderDetails[i].code;\r\n                }\r\n            }\r\n        }\r\n\r\n        let discountPercentage;\r\n        if (this.state.checkedDiscountRemove) {\r\n            discountPercentage = '0';\r\n        } else if (this.state.checked) {\r\n            discountPercentage = this.state.discountAmount;\r\n        } else {\r\n            discountPercentage = this.props.order.discountPercentage;\r\n        }\r\n\r\n\r\n        let editOrderBody = {\r\n            preOrderDetails: this.props.order.orderDetails,\r\n            orderDetails: editedOrderDetails,\r\n            status: this.state.status === ''? this.props.order.status : this.state.status,\r\n            orderId: this.props.order._id,\r\n            discountPercentage\r\n        }\r\n\r\n        if (editOrderBody['status'] === 'delivered') {\r\n            editOrderBody['deliveryDate'] = this.props.order.deliveryDate ? this.props.order.deliveryDate : Date(Date.now);\r\n        } else {\r\n            editOrderBody['deliveryDate'] = '';\r\n        }\r\n\r\n        editOrder(editOrderBody).then(res => {\r\n            editOrderBody['price'] = res.data.order.price;\r\n            this.props.updateOrder(editOrderBody);\r\n            this.props.closeModal();\r\n            this.setState({\r\n                orderDetails: [],\r\n                status: '',\r\n                checked: false,\r\n                checkedDiscountRemove: false\r\n            });\r\n        }, err => {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    initOrderDetails(index, event, id) {\r\n        let ordersSize = this.props.order.orderDetails.length;\r\n        let newOrderDetails = []\r\n        for (let i = 0; i < ordersSize; i++) {\r\n            newOrderDetails[i] = { quantity: this.props.order.orderDetails[i].quantity, code: this.props.order.orderDetails[i].code }\r\n        };\r\n        if (id === 'quantity') {\r\n            let newQuantity = Number(event.target.value);\r\n            this.setState(prevState => ({\r\n                orderDetails: newOrderDetails.map((orderDetail, pointer) => {\r\n                    return pointer === index? {...orderDetail, quantity: newQuantity} : orderDetail;\r\n                })\r\n            }));\r\n        } else {\r\n            let newCode = event.target.value;\r\n            this.setState(prevState => ({\r\n                orderDetails: newOrderDetails.map((orderDetail, pointer) => {\r\n                    return pointer === index? {...orderDetail, code: newCode} : orderDetail;\r\n                })\r\n            }));\r\n        }\r\n    }\r\n\r\n    handleQuantity(i, event) {\r\n        if (this.state.orderDetails.length === 0) {\r\n            this.initOrderDetails(i, event, 'quantity');\r\n        } else {\r\n            this.handleQuantityHelper(i, event.target.value);\r\n        }\r\n    }\r\n\r\n    handleQuantityHelper(i, newQuantity) {\r\n        this.setState(prevState => ({\r\n            orderDetails: prevState.orderDetails.map((orderDetail, index) => {\r\n                return index === i? { ...orderDetail, quantity: Number(newQuantity) } : orderDetail;\r\n            })\r\n        }));\r\n    }\r\n\r\n    handleCode(i, event) {\r\n        if (this.state.orderDetails.length === 0) {\r\n            this.initOrderDetails(i, event, 'code');\r\n        } else {\r\n            this.handleCodeHelper(i, event.target.value);\r\n        }\r\n    }\r\n\r\n    handleCodeHelper(i, newCode) {\r\n        this.setState(prevState => ({\r\n            orderDetails: prevState.orderDetails.map((orderDetail, index) => {\r\n                return index === i? { ...orderDetail, code: newCode } : orderDetail;\r\n            })\r\n        }));\r\n    }\r\n\r\n    handleStatus(event) {\r\n        if (event.target.value === 'delivered') {\r\n            this.setState({ status: event.target.value });    \r\n        } else {\r\n            this.setState({ status: event.target.value });\r\n        }\r\n    }\r\n\r\n    handleDiscountChange() {\r\n        this.setState({ checked: !this.state.checked, checkedDiscountRemove: false });\r\n    }\r\n\r\n    handleDiscountAmount(event) {\r\n        this.setState({ discountAmount: event.target.value });\r\n    }\r\n\r\n    handleDiscountRemove() {\r\n        this.setState({ checkedDiscountRemove: !this.state.checkedDiscountRemove, checked: false });\r\n    }\r\n\r\n    render() {\r\n        if (this.props.order.orderDetails) {\r\n            const applyDiscount = this.state.checked \r\n                ? <div className=\"form-group\">\r\n                    <div className=\"form-group\">\r\n                        <label>Discount:</label>\r\n                        <input type=\"number\" className=\"form-control\" id=\"discount\" placeholder=\"Discount Percentage\" onChange={this.handleDiscountAmount} />\r\n                    </div>\r\n                  </div>\r\n                : null;\r\n            const removeDiscount = this.props.order.discountPercentage !== \"0\"\r\n                ? <div className=\"form-group\">\r\n                    <div className=\"custom-control custom-checkbox\">\r\n                        <input className=\"custom-control-input\" id=\"removeDiscountCheck\" type=\"checkbox\" checked={ this.state.checkedDiscountRemove } onChange={ this.handleDiscountRemove } />\r\n                        <label className=\"custom-control-label\" htmlFor=\"removeDiscountCheck\">Remove discount</label>\r\n                    </div>\r\n                </div>\r\n                : null;\r\n            return(\r\n                <div>\r\n                    { (this.props.showModal) ? \r\n                        <Modal isOpen={this.props.showModal}>\r\n                            <ModalHeader>Existing Order</ModalHeader>\r\n                            <ModalBody>\r\n                                <form>\r\n                                    {\r\n                                        this.props.order.orderDetails.map((orderDetail, index) => {\r\n                                            return(\r\n                                                <div className=\"row\" key={index}>\r\n                                                    <div className=\"col-md-3\">Sub-order { index + 1 }:</div>\r\n                                                    <div className=\"form-group col-md-4\">\r\n                                                        <select className=\"custom-select\" value={this.state.orderDetails[index]? this.state.orderDetails[index].quantity : orderDetail.quantity} onChange={(event) => this.handleQuantity(index, event)}>\r\n                                                            <option>1</option>\r\n                                                            <option>2</option>\r\n                                                            <option>3</option>\r\n                                                            <option>4</option>\r\n                                                            <option>5</option>\r\n                                                            <option>6</option>\r\n                                                            <option>7</option>\r\n                                                            <option>8</option>\r\n                                                            <option>9</option>\r\n                                                        </select>\r\n                                                    </div>\r\n                                                    <div className=\"form-group col-md-4\">\r\n                                                        <select className=\"custom-select\" value={this.state.orderDetails[index]? this.state.orderDetails[index].code : orderDetail.code} onChange={(event) => this.handleCode(index, event)}>\r\n                                                            {\r\n                                                                this.state.products.map((product, i) => {\r\n                                                                    return <option key={i}>{product.code}</option>\r\n                                                                })\r\n                                                            }\r\n                                                        </select>\r\n                                                    </div>\r\n                                                </div>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                    <hr />\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-3\">Status:</div>\r\n                                        <div className=\"col-md-4 form-group\">\r\n                                            <select className=\"custom-select\" value={this.state.status === ''? this.props.order.status : this.state.status} onChange={(event) => this.handleStatus(event)}>\r\n                                                <option value=\"pending\">pending</option>\r\n                                                <option value=\"delivered\">delivered</option>\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                    <hr />\r\n                                    <div className=\"form-group\">\r\n                                        <div className=\"custom-control custom-checkbox\">\r\n                                            <input className=\"custom-control-input\" id=\"customCheck\" type=\"checkbox\" checked={ this.state.checked } onChange={ this.handleDiscountChange } />\r\n                                            <label className=\"custom-control-label\" htmlFor=\"customCheck\">Apply discount</label>\r\n                                        </div>\r\n                                    </div>\r\n                                    { applyDiscount }\r\n                                    <hr />\r\n                                    { removeDiscount }\r\n                                </form>\r\n                            </ModalBody>\r\n                            <ModalFooter>\r\n                                <button type=\"submit\" className=\"btn btn-info\" onClick={this.editOrder}>Edit</button>\r\n                                <button className=\"btn btn-danger\" onClick={(event) => this.props.closeModal(event)}>Cancel</button>\r\n                            </ModalFooter>\r\n                        </Modal>\r\n                    : null }\r\n                </div>\r\n            );\r\n        } else {\r\n            return null;\r\n        }\r\n       \r\n    }\r\n}","import React from 'react';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { getProducts, getUsers, insertOrder } from '../../lib/Api';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport Select from 'react-select';\r\n\r\nimport './OrderInsert.css';\r\n\r\nexport default class OrderInsert extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.addOrderDetail = this.addOrderDetail.bind(this);\r\n        this.removeSelect = this.removeSelect.bind(this);\r\n        this.handleCode = this.handleCode.bind(this);\r\n        this.handleQuantity = this.handleQuantity.bind(this);\r\n        this.handleUser = this.handleUser.bind(this);\r\n        this.getAllProducts = this.getAllProducts.bind(this);\r\n        this.getAllUsers = this.getAllUsers.bind(this);\r\n        this.filterUsernames = this.filterUsernames.bind(this);\r\n        this.setFilterUsernames = this.setFilterUsernames.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.handleDiscountChange = this.handleDiscountChange.bind(this);\r\n        this.handleDiscountAmount = this.handleDiscountAmount.bind(this);\r\n        this.state = {\r\n            users: [],\r\n            products: [],\r\n            order: {},\r\n            selects: [],\r\n            filterUsernames: [],\r\n            selectedUser: null,\r\n            errMsg: '',\r\n            hideAlert: true,\r\n            checked: false,\r\n            discountAmount: '0'\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllProducts();\r\n        this.getAllUsers();\r\n    }\r\n\r\n    getAllUsers() {\r\n        getUsers().then(res => {\r\n            if (res.data != null && res.data.users.length >= 1) {\r\n                this.setState({ users: res.data.users });\r\n                this.setState({ selectedUser: res.data.users[0] })\r\n                let usernames = [];\r\n                for (let i = 0; i < res.data.users.length; i++) {\r\n                    usernames[i] = {\r\n                        label: res.data.users[i].instagramUsername,\r\n                        value: res.data.users[i].instagramUsername\r\n                    }\r\n                }\r\n                this.setFilterUsernames(usernames);\r\n            }\r\n        }).catch(err => {\r\n            console.log('err: ', err);\r\n        });\r\n    }\r\n\r\n    setFilterUsernames(users) {\r\n        this.setState({ filterUsernames: users });\r\n    }\r\n\r\n    getAllProducts() {\r\n        getProducts().then(res => {\r\n            if (res.data != null && res.data.products.length >= 1) {\r\n                this.setState({ products: res.data.products, selects: [{ quantity: 1, code: res.data.products[0].code }] });\r\n            }\r\n        }).catch(err => {\r\n            console.log('err: ', err);\r\n        });\r\n    }\r\n\r\n    addOrderDetail(event) {\r\n        event.preventDefault();\r\n        this.setState({ selects: [...this.state.selects, { quantity: 1, code: this.state.products[0].code }] });\r\n    }\r\n\r\n    removeSelect(event, index) {\r\n        event.preventDefault();\r\n        let newSelects = [...this.state.selects];\r\n        newSelects.splice(index, 1);\r\n        this.setState({ selects: newSelects });\r\n    }\r\n\r\n    handleQuantity(index, event) {\r\n        let newQuantity = event.target.value;\r\n        if (this.state.selects[index]) {\r\n            this.setState(prevState => ({\r\n                selects: prevState.selects.map((select, i) => {\r\n                    return index === i? { ...select, quantity: Number(newQuantity) } : select;\r\n                })\r\n            }));\r\n        } else {\r\n            this.setState({ selects: [...this.state.selects, { quantity: Number(newQuantity) } ] });\r\n        }\r\n    }\r\n\r\n    handleCode(index, event) {\r\n        let newCode = event.target.value;\r\n        if (this.state.selects[index]) {\r\n            this.setState(prevState => ({\r\n                selects: prevState.selects.map((select, i) => {\r\n                    return index === i? { ...select, code: newCode } : select;\r\n                })\r\n            }));\r\n        } else {\r\n            this.setState({ selects: [...this.state.selects, { code: newCode } ] });\r\n        }\r\n    }\r\n\r\n    handleUser(selectedOption) {\r\n        this.setState({ order: { customerId: selectedOption.value }, selectedUser: selectedOption.value });\r\n    }\r\n\r\n    submitOrder() {\r\n        let order = this.state.order;\r\n        order['deliveryDate'] = '';\r\n        order['orderDetails'] = this.state.selects;\r\n        order['discountPercentage'] = this.state.discountAmount;\r\n        if (order.customerId === '' || order.customerId == null) {\r\n            this.setState({ errMsg: 'no Instagram username is supplied', hideAlert: false }, () => {\r\n                window.setTimeout(()=>{\r\n                  this.setState({ errMsg: '', hideAlert: true })\r\n                }, 4000)\r\n            });\r\n        } else {\r\n            insertOrder(order).then(res => {\r\n                this.setState({ discountAmount: '0', checked: false });\r\n                this.props.getOrders();\r\n                this.props.closeModal();\r\n            }, err => {\r\n                this.setState({ errMsg: err.response.data.msg, hideAlert: false }, () => {\r\n                    window.setTimeout(()=>{\r\n                      this.setState({ errMsg: '', hideAlert: true })\r\n                    }, 4000)\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({ errMsg: '', hideAlert: true });\r\n        this.props.closeModal();\r\n    }\r\n\r\n    filterUsernames(event) {\r\n        const filterUsername = event.target.value;\r\n        this.setState(prevState => ({\r\n            filterUsernames: this.state.users.filter((user, i) => {\r\n                return user.instagramUsername.includes(filterUsername);\r\n            })\r\n        }));\r\n    }\r\n\r\n    handleDiscountChange() {\r\n        this.setState({ checked: !this.state.checked })\r\n    }\r\n\r\n    handleDiscountAmount(event) {\r\n        this.setState({ discountAmount: event.target.value });\r\n    }\r\n\r\n    render() {\r\n        let { selectedUser } = this.state;\r\n        if (selectedUser !== null) {\r\n            selectedUser = selectedUser.instagramUsernamel;\r\n        }\r\n        let applyDiscount = null;\r\n        if (this.state.checked) {\r\n            applyDiscount = <div className=\"form-group\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Discount:</label>\r\n                                    <input type=\"number\" className=\"form-control\" id=\"discount\" placeholder=\"Discount Percentage\" onChange={this.handleDiscountAmount} />\r\n                                </div>\r\n                            </div>\r\n        }\r\n        return(\r\n            <div>\r\n                <Modal isOpen={this.props.showModalInsert}>\r\n                        <ModalHeader>New Order</ModalHeader>\r\n                        <ModalBody>\r\n                        <form>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"alert alert-danger\" role=\"alert\" hidden={this.state.hideAlert}>\r\n                                    { this.state.errMsg }\r\n                                </div>\r\n                                <label>Instagram Username:</label>\r\n                                <Select\r\n                                    value={selectedUser}\r\n                                    onChange={this.handleUser}\r\n                                    options={this.state.filterUsernames}\r\n                                />\r\n                            </div>\r\n                            <hr />\r\n                            <div className=\"add-btn-container\">\r\n                                <button className=\"btn btn-info\" onClick={ (event) => this.addOrderDetail(event) }>Add Suborder</button>\r\n                            </div>\r\n\r\n                            {\r\n                                this.state.selects.map((select, index) => {\r\n                                    return(\r\n                                        <div className=\"row\" key={ index }>\r\n                                            <div className=\"col-md-3\">Sub-order {index + 1}</div>\r\n                                            <div className=\"col-md-3 form-group\">\r\n                                                <select className=\"custom-select\" value={this.state.selects[index].quantity} onChange={(event) => this.handleQuantity(index, event)}>\r\n                                                    <option>1</option>\r\n                                                    <option>2</option>\r\n                                                    <option>3</option>\r\n                                                    <option>4</option>\r\n                                                    <option>5</option>\r\n                                                    <option>6</option>\r\n                                                    <option>7</option>\r\n                                                    <option>8</option>\r\n                                                    <option>9</option>\r\n                                                </select>\r\n                                            </div>\r\n                                            <div className=\"col-md-3 form-group\">\r\n                                                <select className=\"custom-select\" value={this.state.selects[index].code} onChange={(event) => this.handleCode(index, event)}>\r\n                                                    {\r\n                                                        this.state.products.map((product, index) => {\r\n                                                            return <option key={ index }>{ product.code }</option>\r\n                                                        })\r\n                                                    }\r\n                                                </select>\r\n                                            </div>\r\n                                            <div className=\"col-md-3\">\r\n                                                <FontAwesomeIcon className=\"fa-times-delete\" hidden={ this.state.selects.length === 1 } onClick={ (event) => this.removeSelect(event, index) } icon={faTimes} />\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                })\r\n                            }\r\n                            <div className=\"form-group\">\r\n                                <div className=\"custom-control custom-checkbox\">\r\n                                    <input className=\"custom-control-input\" id=\"customCheck\" type=\"checkbox\" checked={ this.state.checked } onChange={ this.handleDiscountChange } />\r\n                                    <label className=\"custom-control-label\" htmlFor=\"customCheck\">Apply discount</label>\r\n                                </div>\r\n                            </div>\r\n                            { applyDiscount }\r\n                        </form>\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <button type=\"submit\" className=\"btn btn-info\" onClick={(event) => this.submitOrder(event)}>Add Order</button>\r\n                            <button type=\"button\" className=\"btn btn-danger\" onClick={this.closeModal}>Cancel</button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport Pagination from \"react-js-pagination\";\r\n\r\nimport './Paginatior.css';\r\n\r\nexport default class Paginatior extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handlePageChange = this.handlePageChange.bind(this);\r\n        this.state = {\r\n            activePage: 1,\r\n            itemsPerPage: this.props.itemsPerPage,\r\n            items: this.props.items\r\n        }\r\n    }\r\n    \r\n    handlePageChange(pageNumber) {\r\n        this.setState({ activePage: pageNumber }, () => {\r\n            const indexOfLastThing = this.state.activePage * this.state.itemsPerPage;\r\n            const indexOfFirstThing = indexOfLastThing - this.state.itemsPerPage;\r\n            const itemsShown = this.props.items.slice(indexOfFirstThing, indexOfLastThing);\r\n            this.props.handleItems(itemsShown, pageNumber);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"pagination__container\">\r\n                <Pagination\r\n                innerClass=\"pagination-overriden\"\r\n                onChange={this.handlePageChange}\r\n                activePage={this.state.activePage}\r\n                totalItemsCount={this.props.items.length}\r\n                itemsCountPerPage={this.state.itemsPerPage}\r\n                itemClass=\"item-page\"\r\n                activeClass=\"item-active-page\"\r\n                hideNavigation={true}\r\n                linkClass=\"link-page\"\r\n                activeLinkClass=\"link-active-page\"\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport OrderEdit from '../OrderEdit/OrderEdit';\r\nimport OrderInsert from '../OrderInsert/OrderInsert';\r\nimport Paginator from '../Paginatior/Paginatior';\r\nimport Select from 'react-select';\r\n\r\nimport { getOrders, deleteOrders } from '../../lib/Api';\r\nimport { addDeleteCheckers } from '../../lib/helper_functions';\r\n\r\nimport './Order.css';\r\nimport { Switch } from 'react-router-dom';\r\n\r\nexport default class Order extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.changeCheckboxValue = this.changeCheckboxValue.bind(this);\r\n        this.deleteOrders = this.deleteOrders.bind(this);\r\n        this.filterOrders = this.filterOrders.bind(this);\r\n        this.editOrder = this.editOrder.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.insertOrder = this.insertOrder.bind(this);\r\n        this.getAllOrders = this.getAllOrders.bind(this);\r\n        this.handleOrdersShown = this.handleOrdersShown.bind(this);\r\n        this.updateOrder = this.updateOrder.bind(this);\r\n        this.checkAllDelete = this.checkAllDelete.bind(this);\r\n        this.setOrdersShown = this.setOrdersShown.bind(this);\r\n        this.sortOrders = this.sortOrders.bind(this);\r\n        this.handleFilter = this.handleFilter.bind(this);\r\n        this.handleFilterAttribute = this.handleFilterAttribute.bind(this);\r\n        this.state = {\r\n            orders: [],\r\n            filteredOrders: [],\r\n            showModal: false,\r\n            showModalInsert: false,\r\n            orderToEdit: {},\r\n            itemsPerPage: 7,\r\n            activePage: 1,\r\n            ordersShown: [],\r\n            checkAll: false,\r\n            sortType: false,\r\n            hideAlert: true,\r\n            errMsg: '',\r\n            sortingDates: {\r\n                placingDate: false,\r\n                deliveryDate: false\r\n            },\r\n            filterValue: '',\r\n            filterAttribute: 'price',\r\n            filterAttributeOptions: [\r\n                { label: 'Price', value: 'price' },\r\n                { label: 'Status', value: 'status' },\r\n                { label: 'Discount', value: 'discountPercentage' },\r\n                { label: 'Customer', value: 'customerId' }\r\n            ]\r\n        }\r\n    }\r\n\r\n    getAllOrders() {\r\n        getOrders().then(res => {\r\n            if (res.data != null && res.data.orders.length >= 1) {\r\n                this.setState({ orders: addDeleteCheckers(res.data.orders), filterOrders: addDeleteCheckers(res.data.orders) });\r\n                this.setOrdersShown();\r\n            }\r\n        }).catch(err => {\r\n            console.log('err: ', err);\r\n        });\r\n    }\r\n\r\n    sortOrders(orders, sortFieldFlag, field) {\r\n        this.setState(prevState => ({\r\n            sortingDates: {\r\n                ...prevState.sortingDates,\r\n                [field]: sortFieldFlag\r\n            }\r\n        }));\r\n        orders.sort(function(a,b){\r\n            return sortFieldFlag? new Date(b[field]) - new Date(a[field]) : new Date(a[field]) - new Date(b[field]);\r\n        });\r\n        this.setState({ orders });\r\n        this.setOrdersShown();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllOrders();\r\n    }\r\n\r\n    setOrdersShown(orders) {\r\n        const indexOfLastThing = this.state.activePage * this.state.itemsPerPage;\r\n        const indexOfFirstThing = indexOfLastThing - this.state.itemsPerPage;\r\n        if (orders === undefined) {\r\n            this.setState({ ordersShown: this.state.orders.slice(indexOfFirstThing, indexOfLastThing) });\r\n        } else {\r\n            this.setState({ ordersShown: orders.slice(indexOfFirstThing, indexOfLastThing) });\r\n        }\r\n    }\r\n\r\n    filterOrders() {\r\n        let orders = this.state.orders;\r\n        let filteredOrders = orders.filter(order => {\r\n            return !order['toDelete'];\r\n        });\r\n        const indexOfLastThing = this.state.activePage * this.state.itemsPerPage;\r\n        const indexOfFirstThing = indexOfLastThing - this.state.itemsPerPage;\r\n        this.setState({ orders: filteredOrders, ordersShown: filteredOrders.slice(indexOfFirstThing, indexOfLastThing) });\r\n    }\r\n\r\n    insertOrder() {\r\n        this.setState({ showModalInsert: true });\r\n    }\r\n\r\n    deleteOrders() {\r\n        const idsToDelete = [];\r\n        this.state.orders.map((order) => {\r\n            if (order['toDelete']) { \r\n                idsToDelete.push(order._id);\r\n            }\r\n        });\r\n        for (let i = 0; i < idsToDelete.length; i++) {\r\n            deleteOrders(idsToDelete[i]).then(res => {\r\n                this.setState({ errMsg: `the order(s) selected are deleted successfully`, hideAlert: false }, () => {\r\n                    window.setTimeout(()=>{\r\n                      this.setState({ errMsg: '', hideAlert: true })\r\n                    }, 4000)\r\n                });\r\n                this.filterOrders();\r\n            }).catch(err => {\r\n                console.log(err);\r\n            });\r\n        }\r\n    }\r\n\r\n    editOrder(order) {\r\n        this.setState({ orderToEdit: order, showModal: true});\r\n    }\r\n\r\n    updateOrder(order) {\r\n        this.setState(prevState => ({\r\n            orders: prevState.orders.map((stateOrder) => {\r\n                return order.orderId === stateOrder._id? {...stateOrder, orderDetails: order.orderDetails, price: order.price, status: order.status, deliveryDate: order.deliveryDate, discountPercentage: order.discountPercentage} : stateOrder;\r\n            })\r\n        }), () => {\r\n            this.setOrdersShown()\r\n        });\r\n    }\r\n\r\n    changeCheckboxValue(index, event) {\r\n        if (index === -1) {\r\n            this.setState(prevState => ({\r\n                orders: prevState.orders.map((stateOrder) => {\r\n                    stateOrder['toDelete'] = prevState.checkAll? false : true;\r\n                    return stateOrder;\r\n                }), checkAll: !prevState.checkAll\r\n            }));\r\n            \r\n            return;\r\n        } else if (this.state.activePage > 1) {\r\n            index += ((this.state.activePage - 1) * this.state.itemsPerPage);\r\n        }\r\n        let orders = this.state.orders;\r\n        orders[index]['toDelete'] = event.target.checked;\r\n        this.setState({ orders });\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({ showModal: false, showModalInsert: false });\r\n    }\r\n\r\n    handleOrdersShown(orders, activePage) {\r\n        this.setState({ ordersShown: orders, activePage });\r\n    }\r\n\r\n    checkAllDelete() {\r\n        let orders = this.state.orders;\r\n        for (let i = 0; i < orders; i++) {\r\n            if (!orders[i]['toDelete']) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    handleFilter(e) {\r\n        this.setState({ filterValue: e.target.value });\r\n        let newOrders = [];\r\n        switch(this.state.filterAttribute) {\r\n            case 'price':\r\n            case 'discountPercentage':\r\n                newOrders = this.state.orders.filter((order, index) => {\r\n                    return order[this.state.filterAttribute] > e.target.value;\r\n                });\r\n                break;\r\n            case 'customerId':\r\n            case 'status':\r\n                newOrders = this.state.orders.filter(order => {\r\n                    return order[this.state.filterAttribute].includes(e.target.value);\r\n                });\r\n                break;\r\n        }\r\n        this.setState({ filteredOrders: newOrders });\r\n        this.setOrdersShown(newOrders);\r\n    }\r\n\r\n    handleFilterAttribute(e) {\r\n        this.setState({ filterAttribute: e.value, filterValue: ''});\r\n        this.handleFilter({ target: { value: '' } });\r\n        this.setOrdersShown();\r\n    } \r\n\r\n    render() {\r\n        let { filterAttribute } = this.state;\r\n        filterAttribute = filterAttribute.label;\r\n        return(\r\n            <div className=\"row orders__container\">\r\n                <div className=\"col-md-10 offset-md-1\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-6\">\r\n                            <div className=\"orders__filters-container\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-lg-5\">\r\n                                        <Select\r\n                                            defaultValue={filterAttribute}\r\n                                            value={filterAttribute}\r\n                                            onChange={this.handleFilterAttribute}\r\n                                            options={this.state.filterAttributeOptions}\r\n                                            placeholder={`Select filter ...`}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"col-lg-5\">\r\n                                        <input type=\"text\" className=\"form-control\" id=\"filter\" placeholder={`Filter by ${this.state.filterAttribute}`} onChange={this.handleFilter} value={this.state.filterValue} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-6\">\r\n                            <div className=\"orders__btn-container\">\r\n                                <button className=\"btn btn-info orders__btn\" onClick={this.insertOrder}>Insert</button>\r\n                                <button className=\"btn btn-danger orders__btn\" onClick={this.deleteOrders}>Delete</button>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"alert alert-danger\" role=\"alert\" hidden={this.state.hideAlert}>\r\n                        { this.state.errMsg }\r\n                    </div>\r\n                    <table className=\"table table-bordered\">\r\n                        <thead className=\"thead-light\">\r\n                            <tr>\r\n                                <th>\r\n                                    <div className=\"form-group\">\r\n                                        <div className=\"custom-control custom-checkbox\">\r\n                                            <input className=\"custom-control-input\" id={ \"customCheckAll\" } type=\"checkbox\" checked={this.state.checkAll} onChange={(event) => this.changeCheckboxValue(-1, event)} />\r\n                                            <label className=\"custom-control-label\" htmlFor={ \"customCheckAll\" }></label>\r\n                                        </div>\r\n                                    </div>\r\n                                </th>\r\n                                <th>Customer</th>\r\n                                <th>Order #</th>\r\n                                <th>Order</th>\r\n                                <th>Price</th>\r\n                                <th className='sorting-columns' onClick={() => this.sortOrders(this.state.orders, !this.state.sortingDates.placingDate, 'placingDate')}>Placement Date</th>\r\n                                <th className='sorting-columns' onClick={() => this.sortOrders(this.state.orders, !this.state.sortingDates.deliveryDate, 'deliveryDate')}>Delivery Date</th>\r\n                                <th>Status</th>\r\n                                <th>Edit</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                this.state.ordersShown.map((order, index) => {\r\n                                    return(\r\n                                        <tr key={ index } style={{ backgroundColor:  Number(order.discountPercentage) !== 0? `rgb(${Number(order.discountPercentage) + 155}, 10, 0)` : \"#fff\", color: Number(order.discountPercentage) !== 0? '#fff' : '#000' }}>\r\n                                            <td>\r\n                                                <div className=\"form-group\">\r\n                                                    <div className=\"custom-control custom-checkbox\">\r\n                                                        <input className=\"custom-control-input\" id={ \"customCheck\" + index } type=\"checkbox\" checked={order['toDelete']} onChange={(event) => this.changeCheckboxValue(index, event)} />\r\n                                                        <label className=\"custom-control-label\" htmlFor={ \"customCheck\" + index }></label>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </td>\r\n                                            <td>{ order.customerId }</td>\r\n                                            <td>{ order.orderNumber }</td>\r\n                                            <td>\r\n                                                {\r\n                                                    order.orderDetails.map((orderDetail, i) => {\r\n                                                        return(\r\n                                                            <div key={ i }>{ orderDetail.quantity } x { orderDetail.code }</div>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </td>\r\n                                            <td>{ order.price } { Number(order.discountPercentage) !== 0? '(' + (order.discountPercentage) + '%)' : '' }</td>\r\n                                            <td>{ new Date(order.placingDate).toLocaleString() }</td>\r\n                                            <td>{ order.deliveryDate === null || order.deliveryDate === ''? '' : new Date(order.deliveryDate).toLocaleString() }</td>\r\n                                            <td>{ order.status }</td>\r\n                                            <td>\r\n                                                <button className=\"btn btn-info\"  onClick={() => this.editOrder(order)}>Edit</button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                }) \r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                    {/* <button >Placement Date</button> */}\r\n                    <Paginator items={this.state.filteredOrders.length > 0? this.state.filteredOrders : this.state.orders} itemsPerPage={this.state.itemsPerPage} handleItems={this.handleOrdersShown} />\r\n                    <OrderEdit showModal={this.state.showModal} order={this.state.orderToEdit} closeModal={this.closeModal} updateOrder={this.updateOrder}></OrderEdit>\r\n                    <OrderInsert showModalInsert={this.state.showModalInsert} closeModal={this.closeModal} getOrders={this.getAllOrders}></OrderInsert>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { insertProduct } from '../../lib/Api';\r\n\r\nexport default class ProductInsert extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleName = this.handleName.bind(this);\r\n        this.handleCode = this.handleCode.bind(this);\r\n        this.handlePrice = this.handlePrice.bind(this);\r\n        this.handleQuantity = this.handleQuantity.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.submitProduct = this.submitProduct.bind(this);\r\n        this.state = {\r\n            product: {},\r\n            errMsg: '',\r\n            hideAlert: true\r\n        }\r\n    }\r\n\r\n    handleName(event) {\r\n        const name = event.target.value;\r\n        this.setState(prevState => ({\r\n            product: {\r\n                ...prevState.product,\r\n                name   \r\n            }\r\n        }));\r\n    }\r\n\r\n    handleCode(event) {\r\n        const code = event.target.value;\r\n        this.setState(prevState => ({\r\n            product: {\r\n                ...prevState.product,\r\n                code  \r\n            }\r\n        }));\r\n    }\r\n\r\n    handlePrice(event) {\r\n        const price = event.target.value;\r\n        if (price > 0) {\r\n            this.setState(prevState => ({\r\n                product: {\r\n                    ...prevState.product,\r\n                    price\r\n                }\r\n            }));\r\n        }\r\n    }\r\n\r\n    handleQuantity(event) {\r\n        const quantity = event.target.value;\r\n        if (quantity > 0) {\r\n            this.setState(prevState => ({\r\n                product: {\r\n                    ...prevState.product,\r\n                    quantity\r\n                }\r\n            }));\r\n        }\r\n    }\r\n\r\n    submitProduct() {\r\n        let product = this.state.product;\r\n        if (product.name == null || product.code == null || product.price == null || product.quantity == null) {\r\n            this.setState({ errMsg: 'please fill all fields with valid values', hideAlert: false }, () => {\r\n                window.setTimeout(()=>{\r\n                  this.setState({ errMsg: '', hideAlert: true })\r\n                }, 4000)\r\n            });\r\n        } else {\r\n            insertProduct(product).then(res => {\r\n                this.props.getProducts();\r\n                this.props.closeModal();\r\n            }, err => {\r\n                if (err.response.data && !err.response.data.msg) {\r\n                    this.setState({ errMsg: 'The code should be in the form of one capital letter, one number, a dot then a series of numbers (A1.1)', hideAlert: false }, () => {\r\n                        window.setTimeout(()=>{\r\n                          this.setState({ errMsg: '', hideAlert: true })\r\n                        }, 7000)\r\n                    });\r\n                } else {\r\n                    this.setState({ errMsg: err.response.data.msg, hideAlert: false }, () => {\r\n                        window.setTimeout(()=>{\r\n                          this.setState({ errMsg: '', hideAlert: true })\r\n                        }, 4000)\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({ errMsg: '', hideAlert: true });\r\n        this.props.closeModal();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Modal isOpen={this.props.showModalInsert}>\r\n                        <ModalHeader>New Product</ModalHeader>\r\n                        <ModalBody>\r\n                        <div className=\"alert alert-danger\" role=\"alert\" hidden={this.state.hideAlert}>\r\n                            { this.state.errMsg }\r\n                        </div>\r\n                        <form>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Name:</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"productName\" placeholder=\"Name\" onChange={this.handleName} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Code:</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"productCode\" placeholder=\"Code\" onChange={this.handleCode} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Price:</label>\r\n                                    <input type=\"number\" className=\"form-control\" id=\"productPrice\" placeholder=\"Price\" onChange={this.handlePrice} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Quantity:</label>\r\n                                    <input type=\"number\" className=\"form-control\" id=\"productQuantity\" placeholder=\"Quantity\" onChange={this.handleQuantity} />\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <button type=\"submit\" className=\"btn btn-info\" onClick={(event) => this.submitProduct(event)}>Add Product</button>\r\n                            <button type=\"button\" className=\"btn btn-danger\" onClick={this.closeModal}>Cancel</button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { editProduct } from '../../lib/Api';\r\n\r\nexport default class ProductEdit extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: 'default',\r\n            price: 'default',\r\n            quantity: 'default',\r\n            availableToSell: 'default',\r\n            hideAlert: true\r\n        }\r\n    }\r\n\r\n    handleName = (e) => {\r\n        this.setState({ name: e.target.value });\r\n    }\r\n\r\n    handlePrice = (e) => {\r\n        this.setState({ price: e.target.value });\r\n    }\r\n\r\n    handleQuantity = (e) => {\r\n        this.setState({ quantity: e.target.value });\r\n    }\r\n\r\n    handleAvailableToSell = (e) => {\r\n        this.setState({ availableToSell: e.target.value });\r\n    }\r\n\r\n    editProduct = () => {\r\n        if (this.state.name === '' || this.state.price === '' || this.state.quantity === '' || this.state.availableToSell === '') {\r\n            this.setState({ errMsg: 'all fields should be filled', hideAlert: false }, () => {\r\n                window.setTimeout(()=>{\r\n                  this.setState({ errMsg: '', hideAlert: true })\r\n                }, 4000)\r\n            });\r\n        } else {\r\n            const editProductBody = {\r\n                code: this.props.product.code,\r\n                name: this.state.name === 'default'? this.props.product.name : this.state.name,\r\n                price: this.state.price === 'default'? this.props.product.price : this.state.price,\r\n                quantity: this.state.quantity === 'default'? this.props.product.quantity : this.state.quantity,\r\n                availableToSell: this.state.availableToSell === 'default'? this.props.product.availableToSell : this.state.availableToSell,\r\n            }\r\n            editProduct(editProductBody).then(res => {\r\n                this.props.getProducts();\r\n                this.props.closeEditModal();\r\n            }).catch(err => {\r\n                this.setState({ errMsg: err.response.data, hideAlert: false }, () => {\r\n                    window.setTimeout(()=>{\r\n                      this.setState({ errMsg: '', hideAlert: true })\r\n                    }, 4000)\r\n                });\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n                <Modal isOpen={this.props.showModalEdit}>\r\n                    <ModalHeader>Existing Product</ModalHeader>\r\n                    <ModalBody>\r\n                        <div className=\"alert alert-danger\" role=\"alert\" hidden={this.state.hideAlert}>\r\n                            { this.state.errMsg }\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <div className=\"form-group\">\r\n                                <label>Name:</label>\r\n                                <input type=\"text\" className=\"form-control\" id=\"name\" placeholder=\"Enter Your Name\" onChange={this.handleName} value={this.state.name === 'default'? this.props.product.name : this.state.name} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <div className=\"form-group\">\r\n                                <label>Price:</label>\r\n                                <input type=\"number\" className=\"form-control\" id=\"price\" placeholder=\"Enter Your Price\" onChange={this.handlePrice} value={this.state.price === 'default'? this.props.product.price : this.state.price} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <div className=\"form-group\">\r\n                                <label>Quantity:</label>\r\n                                <input type=\"number\" className=\"form-control\" id=\"quantity\" placeholder=\"Enter Your Quantity\" onChange={this.handleQuantity} value={this.state.quantity === 'default'? this.props.product.quantity : this.state.quantity} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <div className=\"form-group\">\r\n                                <label>Available To Sell:</label>\r\n                                <input type=\"number\" className=\"form-control\" id=\"availableToSell\" placeholder=\"Enter Your Available To Sell\" onChange={this.handleAvailableToSell} value={this.state.availableToSell === 'default'? this.props.product.availableToSell : this.state.availableToSell} />\r\n                            </div>\r\n                        </div>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <button type=\"submit\" className=\"btn btn-info\" onClick={this.editProduct}>Edit</button>\r\n                        <button className=\"btn btn-danger\" onClick={(event) => this.props.closeEditModal(event)}>Cancel</button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n        );\r\n    }\r\n\r\n}","import React from 'react';\r\nimport ProductInsert from '../ProductInsert/ProductInsert';\r\nimport Paginator from '../Paginatior/Paginatior';\r\n\r\nimport { getProducts, deleteProducts } from '../../lib/Api';\r\nimport { addDeleteCheckers } from '../../lib/helper_functions';\r\nimport './Product.css';\r\nimport ProductEdit from '../ProductEdit/ProductEdit';\r\n\r\nexport default class Product extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.changeCheckboxValue = this.changeCheckboxValue.bind(this);\r\n        this.deleteProducts = this.deleteProducts.bind(this);\r\n        this.filterProducts = this.filterProducts.bind(this);\r\n        this.closeEditModal = this.closeEditModal.bind(this);\r\n        this.editProduct = this.editProduct.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.insertProduct = this.insertProduct.bind(this);\r\n        this.getAllProducts = this.getAllProducts.bind(this);\r\n        this.handleProductsShown = this.handleProductsShown.bind(this);\r\n        this.state = {\r\n            products: [],\r\n            showModal: false,\r\n            showModalInsert: false,\r\n            showModalEdit: false,\r\n            productToEdit: {},\r\n            productsShown: [],\r\n            itemsPerPage: 7,\r\n            activePage: 1,\r\n            checkAll: false,\r\n            hideAlert: true,\r\n            errMsg: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllProducts();\r\n    }\r\n\r\n    insertProduct() {\r\n        this.setState({ showModalInsert: true });\r\n    }\r\n\r\n    editProduct(product) {\r\n        this.setState({ showModalEdit: true, productToEdit: product });\r\n    }\r\n\r\n    closeEditModal() {\r\n        this.setState({ showModalEdit: false });\r\n    }\r\n\r\n    getAllProducts() {\r\n        getProducts().then(res => {\r\n            if (res.data != null && res.data.products.length >= 1) {\r\n                this.setState({ products: addDeleteCheckers(res.data.products) });\r\n                const indexOfLastThing = this.state.activePage * this.state.itemsPerPage;\r\n                const indexOfFirstThing = indexOfLastThing - this.state.itemsPerPage;\r\n                this.setState({ productsShown: this.state.products.slice(indexOfFirstThing, indexOfLastThing) });\r\n            }\r\n        }).catch(err => {\r\n            console.log('err: ', err);\r\n        });\r\n    }\r\n\r\n    deleteProducts() {\r\n        const idsToDelete = [];\r\n        this.state.products.map((product) => {\r\n            if (product['toDelete']) { \r\n                idsToDelete.push(product.code);\r\n            }\r\n        });\r\n        for (let i = 0; i < idsToDelete.length; i++) {\r\n            deleteProducts(idsToDelete[i]).then(res => {\r\n                this.setState({ errMsg: `the product(s) selected are deleted successfully`, hideAlert: false }, () => {\r\n                    window.setTimeout(()=>{\r\n                      this.setState({ errMsg: '', hideAlert: true })\r\n                    }, 4000)\r\n                });\r\n                this.filterProducts();\r\n            }).catch(err => {\r\n                if(err.response.status === 403) {\r\n                    this.setState({ errMsg: 'this product is already associated with an order', hideAlert: false }, () => {\r\n                        window.setTimeout(()=>{\r\n                          this.setState({ errMsg: '', hideAlert: true })\r\n                        }, 4000)\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    filterProducts() {\r\n        let products = this.state.products;\r\n        let filteredProducts = products.filter(product => {\r\n            return !product['toDelete'];\r\n        });\r\n        const indexOfLastThing = this.state.activePage * this.state.itemsPerPage;\r\n        const indexOfFirstThing = indexOfLastThing - this.state.itemsPerPage;\r\n        this.setState({ products: filteredProducts, productsShown: filteredProducts.slice(indexOfFirstThing, indexOfLastThing) });\r\n    }\r\n\r\n    changeCheckboxValue(index, event) {\r\n        if (index === -1) {\r\n            this.setState(prevState => ({\r\n                products: prevState.products.map((stateProduct) => {\r\n                    stateProduct['toDelete'] = prevState.checkAll? false : true;\r\n                    return stateProduct;\r\n                }), checkAll: !prevState.checkAll\r\n            }));\r\n            \r\n            return;\r\n        } else if (this.state.activePage > 1) {\r\n            index += ((this.state.activePage - 1) * this.state.itemsPerPage);\r\n        }\r\n        let products = this.state.products;\r\n        products[index]['toDelete'] = event.target.checked;\r\n        this.setState({ products });\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({ showModal: false, showModalInsert: false });\r\n    }\r\n\r\n    handleProductsShown(products, activePage) {\r\n        this.setState({ productsShown: products, activePage });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"row products__container\">\r\n                <div className=\"col-md-10 offset-md-1\">\r\n                    <div className=\"products__btn-container\">\r\n                        <button className=\"btn btn-info products__btn\" onClick={this.insertProduct}>Insert</button>\r\n                        <button className=\"btn btn-danger products__btn\" onClick={this.deleteProducts}>Delete</button>\r\n                    </div>\r\n                    <div className=\"alert alert-danger\" role=\"alert\" hidden={this.state.hideAlert}>\r\n                        { this.state.errMsg }\r\n                    </div>\r\n                    <div>\r\n                        <table className=\"table table-bordered\">\r\n                            <thead className=\"thead-light\">\r\n                                <tr>\r\n                                    <th>\r\n                                        <div className=\"form-group\">\r\n                                            <div className=\"custom-control custom-checkbox\">\r\n                                                <input className=\"custom-control-input\" id={ \"customCheckAll\" } type=\"checkbox\" checked={this.state.checkAll} onChange={(event) => this.changeCheckboxValue(-1, event)} />\r\n                                                <label className=\"custom-control-label\" htmlFor={ \"customCheckAll\" }></label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </th>\r\n                                    <th>Name</th>\r\n                                    <th>Code</th>\r\n                                    <th>Price</th>\r\n                                    <th>Quantity</th>\r\n                                    <th>Edit</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    this.state.productsShown.map((product, index) => {\r\n                                        return(\r\n                                            <tr key={ index }>\r\n                                                <td>\r\n                                                    <div className=\"form-group\">\r\n                                                        <div className=\"custom-control custom-checkbox\">\r\n                                                            <input className=\"custom-control-input\" id={ \"customCheck\" + index } type=\"checkbox\" checked={product['toDelete']} onChange={(event) => this.changeCheckboxValue(index, event)} />\r\n                                                            <label className=\"custom-control-label\" htmlFor={ \"customCheck\" + index }></label>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </td>\r\n                                                <td>{ product.name }</td>\r\n                                                <td>{ product.code }</td>\r\n                                                <td>{ product.price }</td>\r\n                                                <td>{ product.availableToSell + ' / ' + product.quantity }</td>\r\n                                                <td>\r\n                                                    <button className=\"btn btn-info products__btn\" onClick={() => this.editProduct(product)}>Edit</button>\r\n                                                </td>\r\n                                            </tr>\r\n                                        )\r\n                                    }) \r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n\r\n                    <Paginator items={this.state.products} itemsPerPage={this.state.itemsPerPage} handleItems={this.handleProductsShown} />\r\n                    <ProductInsert showModalInsert={this.state.showModalInsert} closeModal={this.closeModal} getProducts={this.getAllProducts}></ProductInsert>\r\n                    <ProductEdit showModalEdit={this.state.showModalEdit} closeEditModal={this.closeEditModal} product={this.state.productToEdit} getProducts={this.getAllProducts}></ProductEdit>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { insertUser } from '../../lib/Api';\r\n\r\nexport default class UserInsert extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleName = this.handleName.bind(this);\r\n        this.handleInstagram = this.handleInstagram.bind(this);\r\n        this.handleEmail = this.handleEmail.bind(this);\r\n        this.handlePhone = this.handlePhone.bind(this);\r\n        this.handleAddress = this.handleAddress.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.submitUser = this.submitUser.bind(this);\r\n        this.state = {\r\n            user: {},\r\n            errMsg: '',\r\n            hideAlert: true\r\n        }\r\n    }\r\n\r\n    handleName(event) {\r\n        const name = event.target.value;\r\n        this.setState(prevState => ({\r\n            user: {\r\n                ...prevState.user,\r\n                name   \r\n            }\r\n        }));\r\n    }\r\n\r\n    handleInstagram(event) {\r\n        const instagramUsername = event.target.value;\r\n        this.setState(prevState => ({\r\n            user: {\r\n                ...prevState.user,\r\n                instagramUsername  \r\n            }\r\n        }));\r\n    }\r\n\r\n    handleEmail(event) {\r\n        const email = event.target.value;\r\n        this.setState(prevState => ({\r\n            user: {\r\n                ...prevState.user,\r\n                email\r\n            }\r\n        }));\r\n    }\r\n\r\n    handlePhone(event) {\r\n        const phone = event.target.value;\r\n        if (phone.match(/^\\+[0-9]{12,13}$/g) != null) {\r\n            this.setState(prevState => ({\r\n                user: {\r\n                    ...prevState.user,\r\n                    phone\r\n                }\r\n            }));\r\n        } else {\r\n            this.setState({ errMsg: 'phone number must start with \"+\", followed by 12-13 digits', hideAlert: false }, () => {\r\n                window.setTimeout(()=>{\r\n                  this.setState({ errMsg: '', hideAlert: true })\r\n                }, 4000)\r\n            });\r\n        }\r\n    }\r\n\r\n    handleAddress(event) {\r\n        const address = event.target.value;\r\n        this.setState(prevState => ({\r\n            user: {\r\n                ...prevState.user,\r\n                address\r\n            }\r\n        }));\r\n    }\r\n\r\n    submitUser() {\r\n        let user = this.state.user;\r\n        if (this.state.hideAlert === true) {\r\n            insertUser(user).then(res => {\r\n                this.props.getUsers();\r\n                this.props.closeModal();\r\n            }, err => {\r\n                if (typeof err.response.data == 'object') {\r\n                    this.setState({ errMsg: err.response.data.msg, hideAlert: false }, () => {\r\n                        window.setTimeout(()=>{\r\n                          this.setState({ errMsg: '', hideAlert: true })\r\n                        }, 4000)\r\n                    });\r\n                    \r\n                } else {\r\n                    this.setState({ errMsg: err.response.data, hideAlert: false }, () => {\r\n                        window.setTimeout(()=>{\r\n                          this.setState({ errMsg: '', hideAlert: true })\r\n                        }, 4000)\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({ errMsg: '', hideAlert: true });\r\n        this.props.closeModal();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Modal isOpen={this.props.showModalInsert}>\r\n                        <ModalHeader>New User</ModalHeader>\r\n                        <ModalBody>\r\n                        <div className=\"alert alert-danger\" role=\"alert\" hidden={this.state.hideAlert}>\r\n                            { this.state.errMsg }\r\n                        </div>\r\n                        <form>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Name:</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"userName\" placeholder=\"Enter Your Name\" onChange={this.handleName} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Instagram Username:</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"userInstagram\" placeholder=\"Enter Your Instagram Username\" onChange={this.handleInstagram} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Email:</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"userEmail\" placeholder=\"Enter Your Email\" onChange={this.handleEmail} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Phone:</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"userPhone\" placeholder=\"Enter Your Phone\" onChange={this.handlePhone} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Address:</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"userAddress\" placeholder=\"Enter Your Address\" onChange={this.handleAddress} />\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <button type=\"submit\" className=\"btn btn-info\" onClick={(event) => this.submitUser(event)}>Add User</button>\r\n                            <button type=\"button\" className=\"btn btn-danger\" onClick={this.closeModal}>Cancel</button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { editUser } from '../../lib/Api';\r\n\r\nimport './UserEdit.css';\r\n\r\nexport default class UserEdit extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: 'default',\r\n            email: 'default',\r\n            instagramUsername: 'default',\r\n            phone: 'default',\r\n            address: 'default',\r\n            errMsg: '',\r\n            hideAlert: true\r\n        }\r\n    }\r\n\r\n    handleName = (e) => {\r\n        this.setState({ name: e.target.value });\r\n    }\r\n\r\n    handleInstagramUsername = (e) => {\r\n        this.setState({ instagramUsername: e.target.value });\r\n    }\r\n\r\n    handleEmail = (e) => {\r\n        this.setState({ email: e.target.value });\r\n    }\r\n\r\n    handlePhone = (e) => {\r\n        this.setState({ phone: e.target.value });\r\n    }\r\n\r\n    handleAddress = (e) => {\r\n        this.setState({ address: e.target.value });\r\n    }\r\n\r\n    editUser = () => {\r\n        if (this.state.name === '' || this.state.email === '' || this.state.instagramUsername === '' || this.state.phone === '' || this.state.address === '') {\r\n            this.setState({ errMsg: 'all fields should be filled', hideAlert: false }, () => {\r\n                window.setTimeout(()=>{\r\n                  this.setState({ errMsg: '', hideAlert: true })\r\n                }, 4000)\r\n            });\r\n        } else if (!this.state.phone.match(/^\\+[0-9]{12,13}$/g)) {\r\n            this.setState({ errMsg: 'phone number must start with \"+\", followed by 12-13 digits', hideAlert: false }, () => {\r\n                window.setTimeout(()=>{\r\n                  this.setState({ errMsg: '', hideAlert: true })\r\n                }, 4000)\r\n            });\r\n        } else {\r\n            const editUserBody = {\r\n                userId: this.props.user._id,\r\n                name: this.state.name === 'default'? this.props.user.name : this.state.name,\r\n                email: this.state.email === 'default'? this.props.user.email : this.state.email,\r\n                instagramUsername: this.state.instagramUsername === 'default'? this.props.user.instagramUsername : this.state.instagramUsername,\r\n                phone: this.state.phone === 'default'? this.props.user.phone : this.state.phone,\r\n                address: this.state.address === 'default'? this.props.user.address : this.state.address\r\n            }\r\n            editUser(editUserBody).then(res => {\r\n                this.props.getUsers();\r\n                this.props.closeEditModal();\r\n            }).catch(err => {\r\n                this.setState({ errMsg: err.response.data, hideAlert: false }, () => {\r\n                    window.setTimeout(()=>{\r\n                      this.setState({ errMsg: '', hideAlert: true })\r\n                    }, 4000)\r\n                });\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n                <Modal isOpen={this.props.showModalEdit}>\r\n                    <ModalHeader>Existing User</ModalHeader>\r\n                    <ModalBody>\r\n                        <div className=\"alert alert-danger\" role=\"alert\" hidden={this.state.hideAlert}>\r\n                            { this.state.errMsg }\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <div className=\"form-group\">\r\n                                <label>Name:</label>\r\n                                <input type=\"text\" className=\"form-control\" id=\"name\" placeholder=\"Enter Your Name\" onChange={this.handleName} value={this.state.name === 'default'? this.props.user.name : this.state.name} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <div className=\"form-group\">\r\n                                <label>Instagram Username:</label>\r\n                                <input type=\"text\" className=\"form-control\" id=\"instagramUsername\" placeholder=\"Enter Your Instagram Username\" onChange={this.handleInstagramUsername} value={this.state.instagramUsername === 'default'? this.props.user.instagramUsername : this.state.instagramUsername} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <div className=\"form-group\">\r\n                                <label>Email:</label>\r\n                                <input type=\"text\" className=\"form-control\" id=\"email\" placeholder=\"Enter Your Email\" onChange={this.handleEmail} value={this.state.email === 'default'? this.props.user.email : this.state.email} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <div className=\"form-group\">\r\n                                <label>Phone:</label>\r\n                                <input type=\"text\" className=\"form-control\" id=\"phone\" placeholder=\"Enter Your Phone\" onChange={this.handlePhone} value={this.state.phone === 'default'? this.props.user.phone : this.state.phone} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <div className=\"form-group\">\r\n                                <label>Address:</label>\r\n                                <input type=\"text\" className=\"form-control\" id=\"address\" placeholder=\"Enter Your Address\" onChange={this.handleAddress} value={this.state.address === 'default'? this.props.user.address : this.state.address} />\r\n                            </div>\r\n                        </div>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <button type=\"submit\" className=\"btn btn-info\" onClick={this.editUser}>Edit</button>\r\n                        <button className=\"btn btn-danger\" onClick={(event) => this.props.closeEditModal(event)}>Cancel</button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n        );\r\n    }\r\n\r\n}","import React from 'react';\r\nimport UserInsert from '../UserInsert/UserInsert';\r\nimport Paginator from '../Paginatior/Paginatior';\r\n\r\nimport { getUsers, deleteUsers } from '../../lib/Api';\r\nimport { addDeleteCheckers } from '../../lib/helper_functions';\r\n\r\nimport './User.css';\r\nimport UserEdit from '../UserEdit/UserEdit';\r\n\r\nexport default class User extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.changeCheckboxValue = this.changeCheckboxValue.bind(this);\r\n        this.deleteUsers = this.deleteUsers.bind(this);\r\n        this.filterUsers = this.filterUsers.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.closeEditModal = this.closeEditModal.bind(this);\r\n        this.editUser = this.editUser.bind(this);\r\n        this.insertUser = this.insertUser.bind(this);\r\n        this.getAllUsers = this.getAllUsers.bind(this);\r\n        this.handleUsersShown = this.handleUsersShown.bind(this);\r\n        this.state = {\r\n            users: [],\r\n            showModalInsert: false,\r\n            showModalEdit: false,\r\n            userToEdit: {},\r\n            itemsPerPage: 7,\r\n            activePage: 1,\r\n            usersShown: [],\r\n            checkAll: false,\r\n            hideAlert: true,\r\n            errMsg: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllUsers();\r\n    }\r\n\r\n    getAllUsers() {\r\n        getUsers().then(res => {\r\n            if (res.data != null && res.data.users.length >= 1) {\r\n                this.setState({ users: addDeleteCheckers(res.data.users) });\r\n                const indexOfLastThing = this.state.activePage * this.state.itemsPerPage;\r\n                const indexOfFirstThing = indexOfLastThing - this.state.itemsPerPage;\r\n                this.setState({ usersShown: this.state.users.slice(indexOfFirstThing, indexOfLastThing) });\r\n            }\r\n        }).catch(err => {\r\n            console.log('err: ', err);\r\n        });\r\n    }\r\n\r\n    changeCheckboxValue(index, event) {\r\n        if (index === -1) {\r\n            this.setState(prevState => ({\r\n                users: prevState.users.map((stateUser) => {\r\n                    stateUser['toDelete'] = prevState.checkAll? false : true;\r\n                    return stateUser;\r\n                }), checkAll: !prevState.checkAll\r\n            }));\r\n            \r\n            return;\r\n        } else if (this.state.activePage > 1) {\r\n            index += ((this.state.activePage - 1) * this.state.itemsPerPage);\r\n        }\r\n        let users = this.state.users;\r\n        users[index]['toDelete'] = event.target.checked;\r\n        this.setState({ users });\r\n    }\r\n\r\n    deleteUsers() {\r\n        const idsToDelete = [];\r\n        this.state.users.map((user) => {\r\n            if (user['toDelete']) { \r\n                idsToDelete.push(user.instagramUsername);\r\n            }\r\n        });\r\n        for (let i = 0; i < idsToDelete.length; i++) {\r\n            deleteUsers(idsToDelete[i]).then(res => {\r\n                this.setState({ errMsg: `the user(s) selected are deleted successfully`, hideAlert: false }, () => {\r\n                    window.setTimeout(()=>{\r\n                      this.setState({ errMsg: '', hideAlert: true })\r\n                    }, 4000)\r\n                });\r\n                this.filterUsers();\r\n            }).catch(err => {\r\n                if(err.response.status === 403) {\r\n                    this.setState({ errMsg: 'this user is already associated with an order', hideAlert: false }, () => {\r\n                        window.setTimeout(()=>{\r\n                          this.setState({ errMsg: '', hideAlert: true })\r\n                        }, 4000)\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    filterUsers() {\r\n        let users = this.state.users;\r\n        let filteredUsers = users.filter(user => {\r\n            return !user['toDelete'];\r\n        });\r\n        const indexOfLastThing = this.state.activePage * this.state.itemsPerPage;\r\n        const indexOfFirstThing = indexOfLastThing - this.state.itemsPerPage;\r\n        this.setState({ users: filteredUsers, usersShown: filteredUsers.slice(indexOfFirstThing, indexOfLastThing) });\r\n    }\r\n\r\n    insertUser() {\r\n        this.setState({ showModalInsert: true });\r\n    }\r\n\r\n    editUser(user) {\r\n        this.setState({ showModalEdit: true, userToEdit: user });\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({ showModalInsert: false });\r\n    }\r\n\r\n    closeEditModal() {\r\n        this.setState({ showModalEdit: false });\r\n    }\r\n\r\n    handleUsersShown(users, activePage) {\r\n        this.setState({ usersShown: users, activePage });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"row users__container\">\r\n                <div className=\"col-md-10 offset-md-1\">\r\n                    <div className=\"users__btn-container\">\r\n                        <button className=\"btn btn-info users__btn\" onClick={this.insertUser}>Insert</button>\r\n                        <button className=\"btn btn-danger users__btn\" onClick={this.deleteUsers}>Delete</button>\r\n                    </div>\r\n                    <div className=\"alert alert-danger\" role=\"alert\" hidden={this.state.hideAlert}>\r\n                        { this.state.errMsg }\r\n                    </div>\r\n                    <div>\r\n                        <table className=\"table table-bordered\">\r\n                            <thead className=\"thead-light\">\r\n                                <tr>\r\n                                    <th>\r\n                                        <div className=\"form-group\">\r\n                                            <div className=\"custom-control custom-checkbox\">\r\n                                                <input className=\"custom-control-input\" id={ \"customCheckAll\" } type=\"checkbox\" checked={this.state.checkAll} onChange={(event) => this.changeCheckboxValue(-1, event)} />\r\n                                                <label className=\"custom-control-label\" htmlFor={ \"customCheckAll\" }></label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </th>\r\n                                    <th>Name</th>\r\n                                    <th>Instagram Username</th>\r\n                                    <th>Email</th>\r\n                                    <th>Phone</th>\r\n                                    <th>Address</th>\r\n                                    <th>Edit</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    this.state.usersShown.map((user, index) => {\r\n                                        return(\r\n                                            <tr key={ index }>\r\n                                                <td>\r\n                                                    <div className=\"form-group\">\r\n                                                        <div className=\"custom-control custom-checkbox\">\r\n                                                            <input className=\"custom-control-input\" id={ \"customCheck\" + index } type=\"checkbox\" checked={user['toDelete']} onChange={(event) => this.changeCheckboxValue(index, event)} />\r\n                                                            <label className=\"custom-control-label\" htmlFor={ \"customCheck\" + index }></label>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </td>\r\n                                                <td>{ user.name }</td>\r\n                                                <td>{ user.instagramUsername }</td>\r\n                                                <td>{ user.email }</td>\r\n                                                <td>{ user.phone }</td>\r\n                                                <td>{ user.address }</td>\r\n                                                <td>\r\n                                                    <button className=\"btn btn-info users__btn\" onClick={() => this.editUser(user)}>Edit</button>\r\n                                                </td>\r\n                                            </tr>\r\n                                        )\r\n                                    }) \r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <Paginator items={this.state.users} itemsPerPage={this.state.itemsPerPage} handleItems={this.handleUsersShown} />\r\n                    <UserInsert showModalInsert={this.state.showModalInsert} closeModal={this.closeModal} getUsers={this.getAllUsers}></UserInsert>\r\n                    <UserEdit showModalEdit={this.state.showModalEdit} closeEditModal={this.closeEditModal} user={this.state.userToEdit} getUsers={this.getAllUsers}></UserEdit>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { tokenExpired } from './lib/helper_functions';\r\n\r\nconst AuthenticatedRoute = ({ component: Component, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={props => \r\n            localStorage.getItem('token') && !tokenExpired()? (\r\n                <Component {...props} />\r\n            ) : (\r\n                <Redirect exact \r\n                    to={{\r\n                        pathname: '/',\r\n                        state: { from: props.location }\r\n                    }}\r\n                />\r\n            )\r\n        }\r\n    />\r\n);\r\n\r\nexport default AuthenticatedRoute;","import React from 'react';\r\nimport { getRevenue } from '../../lib/Api';\r\nimport Header from '../Header/Header';\r\n\r\nimport './Revenue.css';\r\n\r\nexport default class Revenue extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            total: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        getRevenue().then(res => {\r\n            this.setState({ total: res.data.result[0].total });\r\n        }).catch(err => {\r\n            console.log('err: ', err);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Header></Header>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-4 offset-md-4 revenue__container\">\r\n                        <div className=\"revenue__content\">\r\n                            Revenue <br/ >\r\n                            {this.state.total} L.E.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport Dashboard from './components/Dashboard/Dashboard';\r\nimport Order from './components/Order/Order';\r\nimport Product from './components/Product/Product';\r\nimport User from './components/User/User';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport AuthenticatedRoute from './AuthenticatedRoute';\r\nimport Revenue from './components/Revenue/Revenue';\r\n\r\nimport { Route, BrowserRouter as Router } from 'react-router-dom';\r\n\r\n\r\nconst routing = (\r\n    <div>\r\n        <Router>\r\n            <div>\r\n                <Route exact path=\"/\" component={App} />\r\n                <AuthenticatedRoute path=\"/dashboard\" component={() => <Dashboard first=\"/dashboard/orders\" second=\"/dashboard/products\" third=\"/dashboard/users\" />} />\r\n                <AuthenticatedRoute path=\"/dashboard/orders\" component={Order} />\r\n                <AuthenticatedRoute path=\"/dashboard/products\" component={Product} />\r\n                <AuthenticatedRoute path=\"/dashboard/users\" component={User} />\r\n                {/* <AuthenticatedRoute path=\"/analytics\" component={() => <Dashboard first=\"/analytics/revenue\" second=\"/\" third=\"/\" />} /> */}\r\n                <AuthenticatedRoute path=\"/analytics/revenue\" component={Revenue} />\r\n            </div>\r\n        </Router>\r\n    </div>\r\n)\r\n\r\nReactDOM.render(routing, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}