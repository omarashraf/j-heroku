{"version":3,"sources":["components/Header/Header.js","constants.js","lib/Api.js","components/Authentication/Authentication.js","App.js","components/Dashboard/Dashboard.js","components/OrderEdit/OrderEdit.js","components/OrderInsert/OrderInsert.js","components/Paginatior/Paginatior.js","lib/helper_functions.js","components/Order/Order.js","components/ProductInsert/ProductInsert.js","components/Product/Product.js","components/UserInsert/UserInsert.js","components/User/User.js","serviceWorker.js","AuthenticatedRoute.js","index.js"],"names":["Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","logout","bind","assertThisInitialized","state","localStorage","removeItem","getItem","react_default","a","createElement","className","href","style","color","react_router_dom","textDecoration","to","onClick","React","Component","API_URL","process","PORT","getHeaders","headers","x-access-token","deleteOrders","idToDelete","axios","delete","Constants","getProducts","get","deleteProducts","getUsers","deleteUsers","Authentication","handleUsername","handlePassword","submitForm","username","password","errMsg","hideAlert","redirectToDashboard","event","setState","target","value","_this2","preventDefault","authBody","post","authenticateAdmin","then","res","setItem","data","catch","err","response","msg","react_router","onSubmit","role","hidden","type","placeholder","onChange","autoComplete","App","Header_Header_Header","Authentication_Authentication_Authentication","Dashboard","activeStyle","backgroundColor","aria-label","OrderEdit","editOrder","handleQuantity","handleCode","initOrderDetails","handleStatus","products","orderDetails","status","deliveryDate","length","console","log","_this3","editedOrderDetails","i","order","quantity","code","editOrderBody","orderId","_id","patch","price","updateOrder","closeModal","index","id","ordersSize","newOrderDetails","newQuantity","Number","prevState","map","orderDetail","pointer","objectSpread","newCode","handleQuantityHelper","handleCodeHelper","Date","now","_this4","showModal","Modal","isOpen","ModalHeader","ModalBody","key","product","ModalFooter","OrderInsert","addOrderDetail","removeSelect","handleUser","getAllProducts","getAllUsers","filterUsernames","setFilterUsernames","users","selects","selectedUser","usernames","label","instagramUsername","concat","toConsumableArray","newSelects","splice","select","selectedOption","customerId","insertOrder","getOrders","_this5","filterUsername","filter","user","includes","_this6","instagramUsernamel","showModalInsert","react_select_browser_esm","options","index_es","icon","faTimes","submitOrder","Paginatior","handlePageChange","activePage","itemsPerPage","items","pageNumber","indexOfLastThing","indexOfFirstThing","itemsShown","slice","handleItems","Pagination_default","innerClass","totalItemsCount","itemsCountPerPage","itemClass","activeClass","hideNavigation","linkClass","activeLinkClass","addDeleteCheckers","Order","changeCheckboxValue","filterOrders","getAllOrders","handleOrdersShown","checkAllDelete","setOrdersShown","orders","orderToEdit","ordersShown","checkAll","filteredOrders","idsToDelete","push","stateOrder","checked","htmlFor","placingDate","toLocaleString","Paginatior_Paginatior_Paginatior","OrderEdit_OrderEdit_OrderEdit","OrderInsert_OrderInsert_OrderInsert","ProductInsert","handleName","handlePrice","submitProduct","name","insertProduct","Product","filterProducts","handleProductsShown","productsShown","filteredProducts","stateProduct","ProductInsert_ProductInsert","UserInsert","handleInstagram","handleEmail","handlePhone","handleAddress","submitUser","email","phone","address","insertUser","User","filterUsers","handleUsersShown","usersShown","stateUser","filteredUsers","UserInsert_UserInsert","Boolean","window","location","hostname","match","AuthenticatedRoute","_ref","component","rest","objectWithoutProperties","assign","render","pathname","from","routing","exact","path","src_AuthenticatedRoute","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b65b26fe.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Header.css';\r\n\r\nexport default class Header extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.logout = this.logout.bind(this);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    logout() {\r\n        localStorage.removeItem('token');\r\n    }\r\n\r\n    render() {\r\n        if (localStorage.getItem('token') === '' || localStorage.getItem('token') === null) {\r\n            return (\r\n                <div className=\"header__main\">\r\n                    <nav className=\"navbar fixed-top navbar-light bg-info\">\r\n                        <a className=\"navbar-brand\" href=\"#!\" style={{ color: '#fff' }}>Jawareb</a>\r\n                    </nav>\r\n                </div>\r\n                \r\n            )\r\n        } else {\r\n            return (\r\n                <div className=\"header__main\">\r\n                    <nav className=\"navbar fixed-top navbar-light bg-info\">\r\n                        <a className=\"navbar-brand\" href=\"#!\" style={{ color: '#fff' }}>Jawareb</a>\r\n                        <Link style={{ color: '#fff', textDecoration: 'none' }} to=\"/\" onClick={this.logout} >\r\n                            Logout\r\n                        </Link>\r\n                    </nav>\r\n                </div>\r\n                \r\n            )\r\n        }\r\n    }\r\n}","const PORT = process.env.PORT || 3001;\r\nexport const API_URL='http://localhost:' + PORT;","import axios from 'axios';\r\nimport * as Constants from '../constants';\r\n\r\nconst getHeaders = () => {\r\n    const headers = {\r\n        headers: {\r\n            'x-access-token': localStorage.getItem('token')\r\n        }\r\n    };\r\n    return headers;\r\n}\r\n\r\nexport const getOrders = () => {\r\n    const headers = getHeaders();\r\n    return axios.get(Constants.API_URL + '/order', headers);\r\n};\r\n\r\nexport const insertOrder = (order) => {\r\n    const headers = getHeaders();\r\n    return axios.post(Constants.API_URL + '/order', order, headers)\r\n};\r\n\r\nexport const deleteOrders = (idToDelete) => {\r\n    const headers = getHeaders();\r\n    return axios.delete(Constants.API_URL + '/order/' + idToDelete, headers);\r\n}\r\n\r\nexport const editOrder = (editOrderBody) => {\r\n    const headers = getHeaders();\r\n    return axios.patch(Constants.API_URL + '/order', editOrderBody, headers);\r\n}\r\n\r\nexport const getProducts = () => {\r\n    const headers = getHeaders();\r\n    return axios.get(Constants.API_URL + '/product', headers);\r\n}\r\n\r\nexport const insertProduct = (product) => {\r\n    const headers = getHeaders();\r\n    return axios.post(Constants.API_URL + '/product', product, headers)\r\n};\r\n\r\nexport const deleteProducts = (idToDelete) => {\r\n    const headers = getHeaders();\r\n    return axios.delete(Constants.API_URL + '/product/' + idToDelete, headers);\r\n}\r\n\r\nexport const getUsers = () => {\r\n    const headers = getHeaders();\r\n    return axios.get(Constants.API_URL + '/user', headers);\r\n}\r\n\r\nexport const insertUser = (user) => {\r\n    const headers = getHeaders();\r\n    return axios.post(Constants.API_URL + '/user', user, headers)\r\n};\r\n\r\nexport const deleteUsers = (idToDelete) => {\r\n    const headers = getHeaders();\r\n    return axios.delete(Constants.API_URL + '/user/' + idToDelete, headers);\r\n}\r\n\r\nexport const authenticateAdmin = (authBody) => {\r\n    return  axios.post(Constants.API_URL + '/auth', authBody);\r\n}","import React from 'react';\r\nimport { authenticateAdmin } from '../../lib/Api';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport './Authentication.css';\r\n\r\nexport default class Authentication extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleUsername = this.handleUsername.bind(this);\r\n        this.handlePassword = this.handlePassword.bind(this);\r\n        this.submitForm = this.submitForm.bind(this);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            errMsg: '',\r\n            hideAlert: true,\r\n            redirectToDashboard: false\r\n        };\r\n    }\r\n\r\n    handleUsername(event) {\r\n        this.setState({ username: event.target.value });\r\n    }\r\n\r\n    handlePassword(event) {\r\n        this.setState({ password: event.target.value });\r\n    }\r\n\r\n    submitForm(event) {\r\n        event.preventDefault();\r\n        if (this.state.username !== '' && this.state.password !== '') {\r\n            let authBody = {\r\n                username: this.state.username,\r\n                password: this.state.password\r\n            }\r\n            authenticateAdmin(authBody).then(res => {\r\n                localStorage.setItem('token', res.data);\r\n                this.setState({ errMsg: '', hideAlert: true, redirectToDashboard: true });\r\n            }).catch(err => {\r\n                if (typeof err.response.data == 'object') {\r\n                    this.setState({ errMsg: err.response.data.msg, hideAlert: false });\r\n                } else {\r\n                    this.setState({ errMsg: err.response.data, hideAlert: false });\r\n                }\r\n            });\r\n        } else {\r\n            this.setState({ errMsg: 'username and password can\\'t be empty', hideAlert: false });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.redirectToDashboard) {\r\n            return <Redirect to=\"/dashboard\" />\r\n        }\r\n        return(\r\n            <div className=\"row auth__main-container\">\r\n                <div className=\"col-md-8 auth__left-container\"></div>\r\n                <div className=\"col-md-4 auth__right-container\">\r\n                    <div className=\"auth__login-form\">\r\n                        <form onSubmit={this.submitForm}>\r\n                            <div className=\"alert alert-danger\" role=\"alert\" hidden={this.state.hideAlert}>\r\n                                { this.state.errMsg }\r\n                            </div>\r\n                            <div className=\"auth__login-form-control\">\r\n                                <input type=\"text\" className=\"form-control\" placeholder=\"Username\" onChange={this.handleUsername} autoComplete=\"new-password\" />\r\n                            </div>\r\n                            <div className=\"auth__login-form-control\">\r\n                                <input type=\"password\" className=\"form-control\" placeholder=\"Password\" onChange={this.handlePassword} autoComplete=\"new-password\" />\r\n                            </div>\r\n                            <div className=\"auth__login-button\">\r\n                                <input type=\"submit\" className=\"btn btn-info\" value=\"Login\" />\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport Authentication from './components/Authentication/Authentication';\nimport { Redirect } from 'react-router-dom';\n\nfunction App() {\n\n  return (\n    localStorage.getItem('token')?\n      <Redirect to=\"/dashboard\" />\n      :\n      <div className=\"App\">\n        <Header></Header>\n        <Authentication></Authentication>\n      </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Header from '../Header/Header';\r\n\r\nimport './Dashboard.css';\r\n\r\nexport default class Dashboard extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeStyle: { backgroundColor: '#555', color: '#fff' },\r\n            style: { backgroundColor: '#e9ecef' }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Header></Header>\r\n                <div className=\"dashboard__container\">\r\n                    <div className=\"btn-group btn-group-lg\" role=\"group\" aria-label=\"Basic example\">\r\n                        <NavLink className=\"btn\" to=\"/dashboard/orders\" activeStyle={ this.state.activeStyle } style={ this.state.style }>\r\n                            Orders\r\n                        </NavLink>\r\n                        <NavLink className=\"btn\" to=\"/dashboard/products\" activeStyle={this.state.activeStyle} style={ this.state.style }>\r\n                            Products\r\n                        </NavLink>\r\n                        <NavLink className=\"btn\" to=\"/dashboard/users\" activeStyle={this.state.activeStyle} style={ this.state.style }>\r\n                            Users\r\n                        </NavLink>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { getProducts, editOrder } from '../../lib/Api';\r\n\r\nimport './OrderEdit.css';\r\n\r\nexport default class OrderEdit extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.editOrder = this.editOrder.bind(this);\r\n        this.handleQuantity = this.handleQuantity.bind(this);\r\n        this.handleCode = this.handleCode.bind(this);\r\n        this.initOrderDetails = this.initOrderDetails.bind(this);\r\n        this.handleStatus = this.handleStatus.bind(this);\r\n        this.state = {\r\n            products: [],\r\n            orderDetails: [],\r\n            status: '',\r\n            deliveryDate: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        getProducts().then(res => {\r\n            if (res.data != null && res.data.products.length >= 1) {\r\n                this.setState({ products: res.data.products });\r\n            }\r\n        }).catch(err => {\r\n            console.log('err: ', err);\r\n        });\r\n    }\r\n\r\n    editOrder() {\r\n        let editedOrderDetails = [];\r\n        if (this.state.orderDetails.length === 0) {\r\n            for (let i = 0; i < this.props.order.orderDetails.length; i++) {\r\n                editedOrderDetails[i] = { quantity: this.props.order.orderDetails[i].quantity, code: this.props.order.orderDetails[i].code }\r\n            }\r\n        } else {\r\n            editedOrderDetails = this.state.orderDetails;\r\n            for (let i = 0; i < editedOrderDetails.length; i++) {\r\n                if (editedOrderDetails[i].quantity === '' || editedOrderDetails[i].quantity == null) {\r\n                    editedOrderDetails[i].quantity = this.props.order.orderDetails[i].quantity;\r\n                }\r\n                if (editedOrderDetails[i].code === '' || editedOrderDetails[i].code == null) {\r\n                    editedOrderDetails[i].code = this.props.order.orderDetails[i].code;\r\n                }\r\n            }\r\n        }\r\n        \r\n        let editOrderBody = {\r\n            orderDetails: editedOrderDetails,\r\n            status: this.state.status === ''? this.props.order.status : this.state.status,\r\n            orderId: this.props.order._id,\r\n            deliveryDate: this.state.deliveryDate\r\n        }\r\n        editOrder(editOrderBody).then(res => {\r\n            editOrderBody['price'] = res.data.order.price;\r\n            this.props.updateOrder(editOrderBody);\r\n            this.props.closeModal();\r\n            this.setState({\r\n                orderDetails: [],\r\n                status: '',\r\n                deliveryDate: ''\r\n            });\r\n        }, err => {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    initOrderDetails(index, event, id) {\r\n        let ordersSize = this.props.order.orderDetails.length;\r\n        let newOrderDetails = []\r\n        for (let i = 0; i < ordersSize; i++) {\r\n            newOrderDetails[i] = { quantity: this.props.order.orderDetails[i].quantity, code: this.props.order.orderDetails[i].code }\r\n        };\r\n        if (id === 'quantity') {\r\n            let newQuantity = Number(event.target.value);\r\n            this.setState(prevState => ({\r\n                orderDetails: newOrderDetails.map((orderDetail, pointer) => {\r\n                    return pointer === index? {...orderDetail, quantity: newQuantity} : orderDetail;\r\n                })\r\n            }));\r\n        } else {\r\n            let newCode = event.target.value;\r\n            this.setState(prevState => ({\r\n                orderDetails: newOrderDetails.map((orderDetail, pointer) => {\r\n                    return pointer === index? {...orderDetail, code: newCode} : orderDetail;\r\n                })\r\n            }));\r\n        }\r\n    }\r\n\r\n    handleQuantity(i, event) {\r\n        if (this.state.orderDetails.length === 0) {\r\n            this.initOrderDetails(i, event, 'quantity');\r\n        } else {\r\n            this.handleQuantityHelper(i, event.target.value);\r\n        }\r\n    }\r\n\r\n    handleQuantityHelper(i, newQuantity) {\r\n        this.setState(prevState => ({\r\n            orderDetails: prevState.orderDetails.map((orderDetail, index) => {\r\n                return index === i? { ...orderDetail, quantity: Number(newQuantity) } : orderDetail;\r\n            })\r\n        }));\r\n    }\r\n\r\n    handleCode(i, event) {\r\n        if (this.state.orderDetails.length === 0) {\r\n            this.initOrderDetails(i, event, 'code');\r\n        } else {\r\n            this.handleCodeHelper(i, event.target.value);\r\n        }\r\n    }\r\n\r\n    handleCodeHelper(i, newCode) {\r\n        this.setState(prevState => ({\r\n            orderDetails: prevState.orderDetails.map((orderDetail, index) => {\r\n                return index === i? { ...orderDetail, code: newCode } : orderDetail;\r\n            })\r\n        }));\r\n    }\r\n\r\n    handleStatus(event) {\r\n        if (this.state.status === 'pending' && event.target.value === 'done') {\r\n            this.setState({ status: event.target.value, deliveryDate: Date(Date.now) });\r\n        } else if (this.state.status === '' && this.props.order.status === 'pending' && event.target.value === 'done') {\r\n            this.setState({ status: event.target.value, deliveryDate: Date(Date.now) });\r\n        } else {\r\n            this.setState({ status: event.target.value });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.props.order.orderDetails) {\r\n            return(\r\n                <div>\r\n                    { (this.props.showModal) ? \r\n                        <Modal isOpen={this.props.showModal}>\r\n                            <ModalHeader>Existing Order</ModalHeader>\r\n                            <ModalBody>\r\n                                <form>\r\n                                    {\r\n                                        this.props.order.orderDetails.map((orderDetail, index) => {\r\n                                            return(\r\n                                                <div className=\"row\" key={index}>\r\n                                                    <div className=\"col-md-3\">Sub-order { index + 1 }:</div>\r\n                                                    <div className=\"form-group col-md-4\">\r\n                                                        <select className=\"custom-select\" value={this.state.orderDetails[index]? this.state.orderDetails[index].quantity : orderDetail.quantity} onChange={(event) => this.handleQuantity(index, event)}>\r\n                                                            <option>1</option>\r\n                                                            <option>2</option>\r\n                                                            <option>3</option>\r\n                                                            <option>4</option>\r\n                                                            <option>5</option>\r\n                                                        </select>\r\n                                                    </div>\r\n                                                    <div className=\"form-group col-md-4\">\r\n                                                        <select className=\"custom-select\" value={this.state.orderDetails[index]? this.state.orderDetails[index].code : orderDetail.code} onChange={(event) => this.handleCode(index, event)}>\r\n                                                            {\r\n                                                                this.state.products.map((product, i) => {\r\n                                                                    return <option key={i}>{product.code}</option>\r\n                                                                })\r\n                                                            }\r\n                                                        </select>\r\n                                                    </div>\r\n                                                </div>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                    <hr />\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-3\">Status:</div>\r\n                                        <div className=\"col-md-4 form-group\">\r\n                                            <select className=\"custom-select\" value={this.state.status === ''? this.props.order.status : this.state.status} onChange={(event) => this.handleStatus(event)}>\r\n                                                <option value=\"pending\">pending</option>\r\n                                                <option value=\"done\">done</option>\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </ModalBody>\r\n                            <ModalFooter>\r\n                                <button type=\"submit\" className=\"btn btn-info\" onClick={this.editOrder}>Edit</button>\r\n                                <button className=\"btn btn-danger\" onClick={(event) => this.props.closeModal(event)}>Cancel</button>\r\n                            </ModalFooter>\r\n                        </Modal>\r\n                    : null }\r\n                </div>\r\n            );\r\n        } else {\r\n            return null;\r\n        }\r\n       \r\n    }\r\n}","import React from 'react';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { getProducts, getUsers, insertOrder } from '../../lib/Api';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport Select from 'react-select';\r\n\r\nimport './OrderInsert.css';\r\n\r\nexport default class OrderInsert extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.addOrderDetail = this.addOrderDetail.bind(this);\r\n        this.removeSelect = this.removeSelect.bind(this);\r\n        this.handleCode = this.handleCode.bind(this);\r\n        this.handleQuantity = this.handleQuantity.bind(this);\r\n        this.handleUser = this.handleUser.bind(this);\r\n        this.getAllProducts = this.getAllProducts.bind(this);\r\n        this.getAllUsers = this.getAllUsers.bind(this);\r\n        this.filterUsernames = this.filterUsernames.bind(this);\r\n        this.setFilterUsernames = this.setFilterUsernames.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.state = {\r\n            users: [],\r\n            products: [],\r\n            order: {},\r\n            selects: [],\r\n            filterUsernames: [],\r\n            selectedUser: null,\r\n            errMsg: '',\r\n            hideAlert: true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllProducts();\r\n        this.getAllUsers();\r\n    }\r\n\r\n    getAllUsers() {\r\n        getUsers().then(res => {\r\n            if (res.data != null && res.data.users.length >= 1) {\r\n                this.setState({ users: res.data.users });\r\n                this.setState({ selectedUser: res.data.users[0] })\r\n                let usernames = [];\r\n                for (let i = 0; i < res.data.users.length; i++) {\r\n                    usernames[i] = {\r\n                        label: res.data.users[i].instagramUsername,\r\n                        value: res.data.users[i].instagramUsername\r\n                    }\r\n                }\r\n                this.setFilterUsernames(usernames);\r\n            }\r\n        }).catch(err => {\r\n            console.log('err: ', err);\r\n        });\r\n    }\r\n\r\n    setFilterUsernames(users) {\r\n        this.setState({ filterUsernames: users });\r\n    }\r\n\r\n    getAllProducts() {\r\n        getProducts().then(res => {\r\n            if (res.data != null && res.data.products.length >= 1) {\r\n                this.setState({ products: res.data.products, selects: [{ quantity: 1, code: res.data.products[0].code }] });\r\n            }\r\n        }).catch(err => {\r\n            console.log('err: ', err);\r\n        });\r\n    }\r\n\r\n    addOrderDetail(event) {\r\n        event.preventDefault();\r\n        this.setState({ selects: [...this.state.selects, { quantity: 1, code: this.state.products[0].code }] });\r\n    }\r\n\r\n    removeSelect(event, index) {\r\n        event.preventDefault();\r\n        let newSelects = [...this.state.selects];\r\n        newSelects.splice(index, 1);\r\n        this.setState({ selects: newSelects });\r\n    }\r\n\r\n    handleQuantity(index, event) {\r\n        let newQuantity = event.target.value;\r\n        if (this.state.selects[index]) {\r\n            this.setState(prevState => ({\r\n                selects: prevState.selects.map((select, i) => {\r\n                    return index === i? { ...select, quantity: Number(newQuantity) } : select;\r\n                })\r\n            }));\r\n        } else {\r\n            this.setState({ selects: [...this.state.selects, { quantity: Number(newQuantity) } ] });\r\n        }\r\n    }\r\n\r\n    handleCode(index, event) {\r\n        let newCode = event.target.value;\r\n        if (this.state.selects[index]) {\r\n            this.setState(prevState => ({\r\n                selects: prevState.selects.map((select, i) => {\r\n                    return index === i? { ...select, code: newCode } : select;\r\n                })\r\n            }));\r\n        } else {\r\n            this.setState({ selects: [...this.state.selects, { code: newCode } ] });\r\n        }\r\n    }\r\n\r\n    handleUser(selectedOption) {\r\n        this.setState({ order: { customerId: selectedOption.value }, selectedUser: selectedOption.value });\r\n    }\r\n\r\n    submitOrder() {\r\n        let order = this.state.order;\r\n        order['deliveryDate'] = '';\r\n        order['orderDetails'] = this.state.selects;\r\n        if (order.customerId === '' || order.customerId == null) {\r\n            this.setState({ errMsg: 'no Instagram username is supplied', hideAlert: false });\r\n        } else {\r\n            insertOrder(order).then(res => {\r\n                this.setState({ errMsg: '', hideAlert: true });\r\n                this.props.getOrders();\r\n                this.props.closeModal();\r\n            }, err => {\r\n                this.setState({ errMsg: err.response.data.msg, hideAlert: false });\r\n            });\r\n        }\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({ errMsg: '', hideAlert: true });\r\n        this.props.closeModal();\r\n    }\r\n\r\n    filterUsernames(event) {\r\n        const filterUsername = event.target.value;\r\n        this.setState(prevState => ({\r\n            filterUsernames: this.state.users.filter((user, i) => {\r\n                return user.instagramUsername.includes(filterUsername);\r\n            })\r\n        }));\r\n    }\r\n\r\n    render() {\r\n        let { selectedUser } = this.state;\r\n        if (selectedUser !== null) {\r\n            selectedUser = selectedUser.instagramUsernamel;\r\n        }\r\n        return(\r\n            <div>\r\n                <Modal isOpen={this.props.showModalInsert}>\r\n                        <ModalHeader>New Order</ModalHeader>\r\n                        <ModalBody>\r\n                        <form>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"alert alert-danger\" role=\"alert\" hidden={this.state.hideAlert}>\r\n                                    { this.state.errMsg }\r\n                                </div>\r\n                                <label>Instagram Username:</label>\r\n                                <Select\r\n                                    value={selectedUser}\r\n                                    onChange={this.handleUser}\r\n                                    options={this.state.filterUsernames}\r\n                                />\r\n                            </div>\r\n                            <hr />\r\n                            <div className=\"add-btn-container\">\r\n                                <button className=\"btn btn-info\" onClick={ (event) => this.addOrderDetail(event) }>Add Suborder</button>\r\n                            </div>\r\n\r\n                            {\r\n                                this.state.selects.map((select, index) => {\r\n                                    return(\r\n                                        <div className=\"row\" key={ index }>\r\n                                            <div className=\"col-md-3\">Sub-order {index + 1}</div>\r\n                                            <div className=\"col-md-3 form-group\">\r\n                                                <select className=\"custom-select\" value={this.state.selects[index].quantity} onChange={(event) => this.handleQuantity(index, event)}>\r\n                                                    <option>1</option>\r\n                                                    <option>2</option>\r\n                                                    <option>3</option>\r\n                                                    <option>4</option>\r\n                                                    <option>5</option>\r\n                                                </select>\r\n                                            </div>\r\n                                            <div className=\"col-md-3 form-group\">\r\n                                                <select className=\"custom-select\" value={this.state.selects[index].code} onChange={(event) => this.handleCode(index, event)}>\r\n                                                    {\r\n                                                        this.state.products.map((product, index) => {\r\n                                                            return <option key={ index }>{ product.code }</option>\r\n                                                        })\r\n                                                    }\r\n                                                </select>\r\n                                            </div>\r\n                                            <div className=\"col-md-3\">\r\n                                                <FontAwesomeIcon className=\"fa-times-delete\" hidden={ this.state.selects.length === 1 } onClick={ (event) => this.removeSelect(event, index) } icon={faTimes} />\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </form>\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <button type=\"submit\" className=\"btn btn-info\" onClick={(event) => this.submitOrder(event)}>Add Order</button>\r\n                            <button type=\"button\" className=\"btn btn-danger\" onClick={this.closeModal}>Cancel</button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport Pagination from \"react-js-pagination\";\r\n\r\nimport './Paginatior.css';\r\n\r\nexport default class Paginatior extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handlePageChange = this.handlePageChange.bind(this);\r\n        this.state = {\r\n            activePage: 1,\r\n            itemsPerPage: this.props.itemsPerPage,\r\n            items: this.props.items\r\n        }\r\n    }\r\n    \r\n    handlePageChange(pageNumber) {\r\n        this.setState({ activePage: pageNumber }, () => {\r\n            const indexOfLastThing = this.state.activePage * this.state.itemsPerPage;\r\n            const indexOfFirstThing = indexOfLastThing - this.state.itemsPerPage;\r\n            const itemsShown = this.props.items.slice(indexOfFirstThing, indexOfLastThing);\r\n            this.props.handleItems(itemsShown, pageNumber);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"pagination__container\">\r\n                <Pagination\r\n                innerClass=\"pagination-overriden\"\r\n                onChange={this.handlePageChange}\r\n                activePage={this.state.activePage}\r\n                totalItemsCount={this.props.items.length}\r\n                itemsCountPerPage={this.state.itemsPerPage}\r\n                itemClass=\"item-page\"\r\n                activeClass=\"item-active-page\"\r\n                hideNavigation={true}\r\n                linkClass=\"link-page\"\r\n                activeLinkClass=\"link-active-page\"\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}","export const addDeleteCheckers = (items) => {\r\n    for (let i = 0; i < items.length; i++) {\r\n        items[i]['toDelete'] = false;\r\n    }\r\n    return items;\r\n}","import React from 'react';\r\nimport OrderEdit from '../OrderEdit/OrderEdit';\r\nimport OrderInsert from '../OrderInsert/OrderInsert';\r\nimport Paginator from '../Paginatior/Paginatior';\r\n\r\nimport { getOrders, deleteOrders } from '../../lib/Api';\r\nimport { addDeleteCheckers } from '../../lib/helper_functions';\r\n\r\nimport './Order.css';\r\n\r\nexport default class Order extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.changeCheckboxValue = this.changeCheckboxValue.bind(this);\r\n        this.deleteOrders = this.deleteOrders.bind(this);\r\n        this.filterOrders = this.filterOrders.bind(this);\r\n        this.editOrder = this.editOrder.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.insertOrder = this.insertOrder.bind(this);\r\n        this.getAllOrders = this.getAllOrders.bind(this);\r\n        this.handleOrdersShown = this.handleOrdersShown.bind(this);\r\n        this.updateOrder = this.updateOrder.bind(this);\r\n        this.checkAllDelete = this.checkAllDelete.bind(this);\r\n        this.setOrdersShown = this.setOrdersShown.bind(this);\r\n        this.state = {\r\n            orders: [],\r\n            showModal: false,\r\n            showModalInsert: false,\r\n            orderToEdit: {},\r\n            itemsPerPage: 3,\r\n            activePage: 1,\r\n            ordersShown: [],\r\n            checkAll: false\r\n        }\r\n    }\r\n\r\n    getAllOrders() {\r\n        getOrders().then(res => {\r\n            if (res.data != null && res.data.orders.length >= 1) {\r\n                this.setState({ orders: addDeleteCheckers(res.data.orders) });\r\n                this.setOrdersShown();\r\n            }\r\n        }).catch(err => {\r\n            console.log('err: ', err);\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllOrders();\r\n    }\r\n\r\n    setOrdersShown() {\r\n        const indexOfLastThing = this.state.activePage * this.state.itemsPerPage;\r\n        const indexOfFirstThing = indexOfLastThing - this.state.itemsPerPage;\r\n        this.setState({ ordersShown: this.state.orders.slice(indexOfFirstThing, indexOfLastThing) });\r\n    }\r\n\r\n    filterOrders() {\r\n        let orders = this.state.orders;\r\n        let filteredOrders = orders.filter(order => {\r\n            return !order['toDelete'];\r\n        });\r\n        const indexOfLastThing = this.state.activePage * this.state.itemsPerPage;\r\n        const indexOfFirstThing = indexOfLastThing - this.state.itemsPerPage;\r\n        this.setState({ orders: filteredOrders, ordersShown: filteredOrders.slice(indexOfFirstThing, indexOfLastThing) });\r\n    }\r\n\r\n    insertOrder() {\r\n        this.setState({ showModalInsert: true });\r\n    }\r\n\r\n    deleteOrders() {\r\n        const idsToDelete = [];\r\n        this.state.orders.map((order) => {\r\n            if (order['toDelete']) { \r\n                idsToDelete.push(order._id);\r\n            }\r\n        });\r\n        for (let i = 0; i < idsToDelete.length; i++) {\r\n            deleteOrders(idsToDelete[i]).then(res => {\r\n                this.filterOrders();\r\n            }).catch(err => {\r\n                console.log(err);\r\n            });\r\n        }\r\n    }\r\n\r\n    editOrder(order) {\r\n        this.setState({ orderToEdit: order, showModal: true});\r\n    }\r\n\r\n    updateOrder(order) {\r\n        this.setState(prevState => ({\r\n            orders: prevState.orders.map((stateOrder) => {\r\n                return order.orderId === stateOrder._id? {...stateOrder, orderDetails: order.orderDetails, price: order.price, status: order.status, deliveryDate: order.deliveryDate} : stateOrder;\r\n            })\r\n        }), () => {\r\n            this.setOrdersShown()\r\n        });\r\n    }\r\n\r\n    changeCheckboxValue(index, event) {\r\n        if (index === -1) {\r\n            this.setState(prevState => ({\r\n                orders: prevState.orders.map((stateOrder) => {\r\n                    stateOrder['toDelete'] = prevState.checkAll? false : true;\r\n                    return stateOrder;\r\n                }), checkAll: !prevState.checkAll\r\n            }));\r\n            \r\n            return;\r\n        } else if (this.state.activePage > 1) {\r\n            index += ((this.state.activePage - 1) * this.state.itemsPerPage);\r\n        }\r\n        let orders = this.state.orders;\r\n        orders[index]['toDelete'] = event.target.checked;\r\n        this.setState({ orders });\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({ showModal: false, showModalInsert: false });\r\n    }\r\n\r\n    handleOrdersShown(orders, activePage) {\r\n        this.setState({ ordersShown: orders, activePage });\r\n    }\r\n\r\n    checkAllDelete() {\r\n        let orders = this.state.orders;\r\n        for (let i = 0; i < orders; i++) {\r\n            if (!orders[i]['toDelete']) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"row orders__container\">\r\n                <div className=\"col-md-10 offset-md-1\">\r\n                    <div className=\"orders__btn-container\">\r\n                        <button className=\"btn btn-info orders__btn\" onClick={this.insertOrder}>Insert</button>\r\n                        <button className=\"btn btn-danger orders__btn\" onClick={this.deleteOrders}>Delete</button>\r\n                    </div>\r\n                    <table className=\"table table-bordered\">\r\n                        <thead className=\"thead-light\">\r\n                            <tr>\r\n                                <th>\r\n                                    <div className=\"form-group\">\r\n                                        <div className=\"custom-control custom-checkbox\">\r\n                                            <input className=\"custom-control-input\" id={ \"customCheckAll\" } type=\"checkbox\" checked={this.state.checkAll} onChange={(event) => this.changeCheckboxValue(-1, event)} />\r\n                                            <label className=\"custom-control-label\" htmlFor={ \"customCheckAll\" }></label>\r\n                                        </div>\r\n                                    </div>\r\n                                </th>\r\n                                <th>Customer</th>\r\n                                <th>Order</th>\r\n                                <th>Price</th>\r\n                                <th>Placement Date</th>\r\n                                <th>Delivery Date</th>\r\n                                <th>Status</th>\r\n                                <th>Edit</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                this.state.ordersShown.map((order, index) => {\r\n                                    return(\r\n                                        <tr key={ index }>\r\n                                            <td>\r\n                                                <div className=\"form-group\">\r\n                                                    <div className=\"custom-control custom-checkbox\">\r\n                                                        <input className=\"custom-control-input\" id={ \"customCheck\" + index } type=\"checkbox\" checked={order['toDelete']} onChange={(event) => this.changeCheckboxValue(index, event)} />\r\n                                                        <label className=\"custom-control-label\" htmlFor={ \"customCheck\" + index }></label>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </td>\r\n                                            <td>{ order.customerId }</td>\r\n                                            <td>\r\n                                                {\r\n                                                    order.orderDetails.map((orderDetail, i) => {\r\n                                                        return(\r\n                                                            <div key={ i }>{ orderDetail.quantity } x { orderDetail.code }</div>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </td>\r\n                                            <td>{ order.price }</td>\r\n                                            <td>{ new Date(order.placingDate).toLocaleString() }</td>\r\n                                            <td>{ order.deliveryDate === null || order.deliveryDate === ''? '' : new Date(order.deliveryDate).toLocaleString() }</td>\r\n                                            <td>{ order.status }</td>\r\n                                            <td>\r\n                                                <button className=\"btn btn-info\"  onClick={() => this.editOrder(order)}>Edit</button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                }) \r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                    <Paginator items={this.state.orders} itemsPerPage={this.state.itemsPerPage} handleItems={this.handleOrdersShown} />\r\n                    <OrderEdit showModal={this.state.showModal} order={this.state.orderToEdit} closeModal={this.closeModal} updateOrder={this.updateOrder}></OrderEdit>\r\n                    <OrderInsert showModalInsert={this.state.showModalInsert} closeModal={this.closeModal} getOrders={this.getAllOrders}></OrderInsert>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { insertProduct } from '../../lib/Api';\r\n\r\nexport default class ProductInsert extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleName = this.handleName.bind(this);\r\n        this.handleCode = this.handleCode.bind(this);\r\n        this.handlePrice = this.handlePrice.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.submitProduct = this.submitProduct.bind(this);\r\n        this.state = {\r\n            product: {},\r\n            errMsg: '',\r\n            hideAlert: true\r\n        }\r\n    }\r\n\r\n    handleName(event) {\r\n        const name = event.target.value;\r\n        this.setState(prevState => ({\r\n            product: {\r\n                ...prevState.product,\r\n                name   \r\n            }\r\n        }));\r\n    }\r\n\r\n    handleCode(event) {\r\n        const code = event.target.value;\r\n        this.setState(prevState => ({\r\n            product: {\r\n                ...prevState.product,\r\n                code  \r\n            }\r\n        }));\r\n    }\r\n\r\n    handlePrice(event) {\r\n        const price = event.target.value;\r\n        this.setState(prevState => ({\r\n            product: {\r\n                ...prevState.product,\r\n                price\r\n            }\r\n        }));\r\n    }\r\n\r\n    submitProduct() {\r\n        let product = this.state.product;\r\n        if (product.name == null || product.code == null || product.price == null) {\r\n            this.setState({ errMsg: 'please fill all fields', hideAlert: false });\r\n        } else {\r\n            insertProduct(product).then(res => {\r\n                this.setState({ errMsg: 'please fill all fields', hideAlert: true });\r\n                this.props.getProducts();\r\n                this.props.closeModal();\r\n            }, err => {\r\n                this.setState({ errMsg: err.response.data.msg, hideAlert: false });\r\n            });\r\n        }\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({ errMsg: '', hideAlert: true });\r\n        this.props.closeModal();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Modal isOpen={this.props.showModalInsert}>\r\n                        <ModalHeader>New Product</ModalHeader>\r\n                        <ModalBody>\r\n                        <div className=\"alert alert-danger\" role=\"alert\" hidden={this.state.hideAlert}>\r\n                            { this.state.errMsg }\r\n                        </div>\r\n                        <form>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Name:</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"productName\" placeholder=\"Name\" onChange={this.handleName} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Code:</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"productCode\" placeholder=\"Code\" onChange={this.handleCode} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Price:</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"productPrice\" placeholder=\"Price\" onChange={this.handlePrice} />\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <button type=\"submit\" className=\"btn btn-info\" onClick={(event) => this.submitProduct(event)}>Add Product</button>\r\n                            <button type=\"button\" className=\"btn btn-danger\" onClick={this.closeModal}>Cancel</button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport ProductInsert from '../ProductInsert/ProductInsert';\r\nimport Paginator from '../Paginatior/Paginatior';\r\n\r\nimport { getProducts, deleteProducts } from '../../lib/Api';\r\nimport { addDeleteCheckers } from '../../lib/helper_functions';\r\nimport './Product.css';\r\n\r\nexport default class Product extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.changeCheckboxValue = this.changeCheckboxValue.bind(this);\r\n        this.deleteProducts = this.deleteProducts.bind(this);\r\n        this.filterProducts = this.filterProducts.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.insertProduct = this.insertProduct.bind(this);\r\n        this.getAllProducts = this.getAllProducts.bind(this);\r\n        this.handleProductsShown = this.handleProductsShown.bind(this);\r\n        this.state = {\r\n            products: [],\r\n            showModal: false,\r\n            showModalInsert: false,\r\n            productsShown: [],\r\n            itemsPerPage: 2,\r\n            activePage: 1,\r\n            checkAll: false,\r\n            hideAlert: true,\r\n            errMsg: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllProducts();\r\n    }\r\n\r\n    insertProduct() {\r\n        this.setState({ showModalInsert: true });\r\n    }\r\n\r\n    getAllProducts() {\r\n        getProducts().then(res => {\r\n            if (res.data != null && res.data.products.length >= 1) {\r\n                this.setState({ products: addDeleteCheckers(res.data.products) });\r\n                const indexOfLastThing = this.state.activePage * this.state.itemsPerPage;\r\n                const indexOfFirstThing = indexOfLastThing - this.state.itemsPerPage;\r\n                this.setState({ productsShown: this.state.products.slice(indexOfFirstThing, indexOfLastThing) });\r\n            }\r\n        }).catch(err => {\r\n            console.log('err: ', err);\r\n        });\r\n    }\r\n\r\n    deleteProducts() {\r\n        const idsToDelete = [];\r\n        this.state.products.map((product) => {\r\n            if (product['toDelete']) { \r\n                idsToDelete.push(product.code);\r\n            }\r\n        });\r\n        for (let i = 0; i < idsToDelete.length; i++) {\r\n            deleteProducts(idsToDelete[i]).then(res => {\r\n                this.setState({ errMsg: '', hideAlert: true });\r\n                this.filterProducts();\r\n            }).catch(err => {\r\n                if(err.response.status === 403) {\r\n                    this.setState({ errMsg: 'this product is already associated with an order', hideAlert: false });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    filterProducts() {\r\n        let products = this.state.products;\r\n        let filteredProducts = products.filter(product => {\r\n            return !product['toDelete'];\r\n        });\r\n        const indexOfLastThing = this.state.activePage * this.state.itemsPerPage;\r\n        const indexOfFirstThing = indexOfLastThing - this.state.itemsPerPage;\r\n        this.setState({ products: filteredProducts, productsShown: filteredProducts.slice(indexOfFirstThing, indexOfLastThing) });\r\n    }\r\n\r\n    changeCheckboxValue(index, event) {\r\n        if (index === -1) {\r\n            this.setState(prevState => ({\r\n                products: prevState.products.map((stateProduct) => {\r\n                    stateProduct['toDelete'] = prevState.checkAll? false : true;\r\n                    return stateProduct;\r\n                }), checkAll: !prevState.checkAll\r\n            }));\r\n            \r\n            return;\r\n        } else if (this.state.activePage > 1) {\r\n            index += ((this.state.activePage - 1) * this.state.itemsPerPage);\r\n        }\r\n        let products = this.state.products;\r\n        products[index]['toDelete'] = event.target.checked;\r\n        this.setState({ products });\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({ showModal: false, showModalInsert: false });\r\n    }\r\n\r\n    handleProductsShown(products, activePage) {\r\n        this.setState({ productsShown: products, activePage });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"row products__container\">\r\n                <div className=\"col-md-10 offset-md-1\">\r\n                    <div className=\"products__btn-container\">\r\n                        <button className=\"btn btn-info products__btn\" onClick={this.insertProduct}>Insert</button>\r\n                        <button className=\"btn btn-danger products__btn\" onClick={this.deleteProducts}>Delete</button>\r\n                    </div>\r\n                    <div className=\"alert alert-danger\" role=\"alert\" hidden={this.state.hideAlert}>\r\n                        { this.state.errMsg }\r\n                    </div>\r\n                    <div>\r\n                        <table className=\"table table-bordered\">\r\n                            <thead className=\"thead-light\">\r\n                                <tr>\r\n                                    <th>\r\n                                        <div className=\"form-group\">\r\n                                            <div className=\"custom-control custom-checkbox\">\r\n                                                <input className=\"custom-control-input\" id={ \"customCheckAll\" } type=\"checkbox\" checked={this.state.checkAll} onChange={(event) => this.changeCheckboxValue(-1, event)} />\r\n                                                <label className=\"custom-control-label\" htmlFor={ \"customCheckAll\" }></label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </th>\r\n                                    <th>Name</th>\r\n                                    <th>Code</th>\r\n                                    <th>Price</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    this.state.productsShown.map((product, index) => {\r\n                                        return(\r\n                                            <tr key={ index }>\r\n                                                <td>\r\n                                                    <div className=\"form-group\">\r\n                                                        <div className=\"custom-control custom-checkbox\">\r\n                                                            <input className=\"custom-control-input\" id={ \"customCheck\" + index } type=\"checkbox\" checked={product['toDelete']} onChange={(event) => this.changeCheckboxValue(index, event)} />\r\n                                                            <label className=\"custom-control-label\" htmlFor={ \"customCheck\" + index }></label>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </td>\r\n                                                <td>{ product.name }</td>\r\n                                                <td>{ product.code }</td>\r\n                                                <td>{ product.price }</td>\r\n                                            </tr>\r\n                                        )\r\n                                    }) \r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n\r\n                    <Paginator items={this.state.products} itemsPerPage={this.state.itemsPerPage} handleItems={this.handleProductsShown} />\r\n\r\n                    <ProductInsert showModalInsert={this.state.showModalInsert} closeModal={this.closeModal} getProducts={this.getAllProducts}></ProductInsert>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { insertUser } from '../../lib/Api';\r\n\r\nexport default class UserInsert extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleName = this.handleName.bind(this);\r\n        this.handleInstagram = this.handleInstagram.bind(this);\r\n        this.handleEmail = this.handleEmail.bind(this);\r\n        this.handlePhone = this.handlePhone.bind(this);\r\n        this.handleAddress = this.handleAddress.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.submitUser = this.submitUser.bind(this);\r\n        this.state = {\r\n            user: {},\r\n            errMsg: '',\r\n            hideAlert: true\r\n        }\r\n    }\r\n\r\n    handleName(event) {\r\n        const name = event.target.value;\r\n        this.setState(prevState => ({\r\n            user: {\r\n                ...prevState.user,\r\n                name   \r\n            }\r\n        }));\r\n    }\r\n\r\n    handleInstagram(event) {\r\n        const instagramUsername = event.target.value;\r\n        this.setState(prevState => ({\r\n            user: {\r\n                ...prevState.user,\r\n                instagramUsername  \r\n            }\r\n        }));\r\n    }\r\n\r\n    handleEmail(event) {\r\n        const email = event.target.value;\r\n        this.setState(prevState => ({\r\n            user: {\r\n                ...prevState.user,\r\n                email\r\n            }\r\n        }));\r\n    }\r\n\r\n    handlePhone(event) {\r\n        const phone = event.target.value;\r\n        this.setState(prevState => ({\r\n            user: {\r\n                ...prevState.user,\r\n                phone\r\n            }\r\n        }));\r\n    }\r\n\r\n    handleAddress(event) {\r\n        const address = event.target.value;\r\n        this.setState(prevState => ({\r\n            user: {\r\n                ...prevState.user,\r\n                address\r\n            }\r\n        }));\r\n    }\r\n\r\n    submitUser() {\r\n        let user = this.state.user;\r\n        insertUser(user).then(res => {\r\n            this.setState({ errMsg: '', hideAlert: true });\r\n            this.props.getUsers();\r\n            this.props.closeModal();\r\n        }, err => {\r\n            if (typeof err.response.data == 'object') {\r\n                this.setState({ errMsg: err.response.data.msg, hideAlert: false });\r\n            } else {\r\n                this.setState({ errMsg: err.response.data, hideAlert: false });\r\n            }\r\n        })\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({ errMsg: '', hideAlert: true });\r\n        this.props.closeModal();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Modal isOpen={this.props.showModalInsert}>\r\n                        <ModalHeader>New User</ModalHeader>\r\n                        <ModalBody>\r\n                        <div className=\"alert alert-danger\" role=\"alert\" hidden={this.state.hideAlert}>\r\n                            { this.state.errMsg }\r\n                        </div>\r\n                        <form>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Name:</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"userName\" placeholder=\"Enter Your Name\" onChange={this.handleName} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Instagram Username:</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"userInstagram\" placeholder=\"Enter Your Instagram Username\" onChange={this.handleInstagram} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Email:</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"userEmail\" placeholder=\"Enter Your Email\" onChange={this.handleEmail} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Phone:</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"userPhone\" placeholder=\"Enter Your Phone\" onChange={this.handlePhone} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Address:</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"userAddress\" placeholder=\"Enter Your Address\" onChange={this.handleAddress} />\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <button type=\"submit\" className=\"btn btn-info\" onClick={(event) => this.submitUser(event)}>Add User</button>\r\n                            <button type=\"button\" className=\"btn btn-danger\" onClick={this.closeModal}>Cancel</button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport UserInsert from '../UserInsert/UserInsert';\r\nimport Paginator from '../Paginatior/Paginatior';\r\n\r\nimport { getUsers, deleteUsers } from '../../lib/Api';\r\nimport { addDeleteCheckers } from '../../lib/helper_functions';\r\n\r\nimport './User.css';\r\n\r\nexport default class User extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.changeCheckboxValue = this.changeCheckboxValue.bind(this);\r\n        this.deleteUsers = this.deleteUsers.bind(this);\r\n        this.filterUsers = this.filterUsers.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.insertUser = this.insertUser.bind(this);\r\n        this.getAllUsers = this.getAllUsers.bind(this);\r\n        this.handleUsersShown = this.handleUsersShown.bind(this);\r\n        this.state = {\r\n            users: [],\r\n            showModalInsert: false,\r\n            itemsPerPage: 1,\r\n            activePage: 1,\r\n            usersShown: [],\r\n            checkAll: false,\r\n            hideAlert: true,\r\n            errMsg: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllUsers();\r\n    }\r\n\r\n    getAllUsers() {\r\n        getUsers().then(res => {\r\n            if (res.data != null && res.data.users.length >= 1) {\r\n                this.setState({ users: addDeleteCheckers(res.data.users) });\r\n                const indexOfLastThing = this.state.activePage * this.state.itemsPerPage;\r\n                const indexOfFirstThing = indexOfLastThing - this.state.itemsPerPage;\r\n                this.setState({ usersShown: this.state.users.slice(indexOfFirstThing, indexOfLastThing) });\r\n            }\r\n        }).catch(err => {\r\n            console.log('err: ', err);\r\n        });\r\n    }\r\n\r\n    changeCheckboxValue(index, event) {\r\n        if (index === -1) {\r\n            this.setState(prevState => ({\r\n                users: prevState.users.map((stateUser) => {\r\n                    stateUser['toDelete'] = prevState.checkAll? false : true;\r\n                    return stateUser;\r\n                }), checkAll: !prevState.checkAll\r\n            }));\r\n            \r\n            return;\r\n        } else if (this.state.activePage > 1) {\r\n            index += ((this.state.activePage - 1) * this.state.itemsPerPage);\r\n        }\r\n        let users = this.state.users;\r\n        users[index]['toDelete'] = event.target.checked;\r\n        this.setState({ users });\r\n    }\r\n\r\n    deleteUsers() {\r\n        const idsToDelete = [];\r\n        this.state.users.map((user) => {\r\n            if (user['toDelete']) { \r\n                idsToDelete.push(user.instagramUsername);\r\n            }\r\n        });\r\n        for (let i = 0; i < idsToDelete.length; i++) {\r\n            deleteUsers(idsToDelete[i]).then(res => {\r\n                this.setState({ errMsg: '', hideAlert: true });\r\n                this.filterUsers();\r\n            }).catch(err => {\r\n                if(err.response.status === 403) {\r\n                    this.setState({ errMsg: 'this user is already associated with an order', hideAlert: false });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    filterUsers() {\r\n        let users = this.state.users;\r\n        let filteredUsers = users.filter(user => {\r\n            return !user['toDelete'];\r\n        });\r\n        const indexOfLastThing = this.state.activePage * this.state.itemsPerPage;\r\n        const indexOfFirstThing = indexOfLastThing - this.state.itemsPerPage;\r\n        this.setState({ users: filteredUsers, usersShown: filteredUsers.slice(indexOfFirstThing, indexOfLastThing) });\r\n    }\r\n\r\n    insertUser() {\r\n        this.setState({ showModalInsert: true });\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({ showModalInsert: false });\r\n    }\r\n\r\n    handleUsersShown(users, activePage) {\r\n        this.setState({ usersShown: users, activePage });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"row users__container\">\r\n                <div className=\"col-md-10 offset-md-1\">\r\n                    <div className=\"users__btn-container\">\r\n                        <button className=\"btn btn-info users__btn\" onClick={this.insertUser}>Insert</button>\r\n                        <button className=\"btn btn-danger users__btn\" onClick={this.deleteUsers}>Delete</button>\r\n                    </div>\r\n                    <div className=\"alert alert-danger\" role=\"alert\" hidden={this.state.hideAlert}>\r\n                        { this.state.errMsg }\r\n                    </div>\r\n                    <div>\r\n                        <table className=\"table table-bordered\">\r\n                            <thead className=\"thead-light\">\r\n                                <tr>\r\n                                    <th>\r\n                                        <div className=\"form-group\">\r\n                                            <div className=\"custom-control custom-checkbox\">\r\n                                                <input className=\"custom-control-input\" id={ \"customCheckAll\" } type=\"checkbox\" checked={this.state.checkAll} onChange={(event) => this.changeCheckboxValue(-1, event)} />\r\n                                                <label className=\"custom-control-label\" htmlFor={ \"customCheckAll\" }></label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </th>\r\n                                    <th>Name</th>\r\n                                    <th>Instagram Username</th>\r\n                                    <th>Email</th>\r\n                                    <th>Phone</th>\r\n                                    <th>Address</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    this.state.usersShown.map((user, index) => {\r\n                                        return(\r\n                                            <tr key={ index }>\r\n                                                <td>\r\n                                                    <div className=\"form-group\">\r\n                                                        <div className=\"custom-control custom-checkbox\">\r\n                                                            <input className=\"custom-control-input\" id={ \"customCheck\" + index } type=\"checkbox\" checked={user['toDelete']} onChange={(event) => this.changeCheckboxValue(index, event)} />\r\n                                                            <label className=\"custom-control-label\" htmlFor={ \"customCheck\" + index }></label>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </td>\r\n                                                <td>{ user.name }</td>\r\n                                                <td>{ user.instagramUsername }</td>\r\n                                                <td>{ user.email }</td>\r\n                                                <td>{ user.phone }</td>\r\n                                                <td>{ user.address }</td>\r\n                                            </tr>\r\n                                        )\r\n                                    }) \r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <Paginator items={this.state.users} itemsPerPage={this.state.itemsPerPage} handleItems={this.handleUsersShown} />\r\n                    <UserInsert showModalInsert={this.state.showModalInsert} closeModal={this.closeModal} getUsers={this.getAllUsers}></UserInsert>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst AuthenticatedRoute = ({ component: Component, ...rest }) => (\r\n    <Route \r\n        {...rest}\r\n        render={props => \r\n            localStorage.getItem('token') ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                <Redirect \r\n                    to={{\r\n                        pathname: '/',\r\n                        state: { from: props.location }\r\n                    }}\r\n                />\r\n            )\r\n        }\r\n    />\r\n);\r\n\r\nexport default AuthenticatedRoute;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Dashboard from './components/Dashboard/Dashboard';\nimport Order from './components/Order/Order';\nimport Product from './components/Product/Product';\nimport User from './components/User/User';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport AuthenticatedRoute from './AuthenticatedRoute';\n\nimport { Route, BrowserRouter as Router } from 'react-router-dom';\n\n\nconst routing = (\n    <div>\n        <Router>\n            <div>\n                <Route exact path=\"/\" component={App} />\n                <AuthenticatedRoute path=\"/dashboard\" component={Dashboard} />\n                <AuthenticatedRoute path=\"/dashboard/orders\" component={Order} />\n                <AuthenticatedRoute path=\"/dashboard/products\" component={Product} />\n                <AuthenticatedRoute path=\"/dashboard/users\" component={User} />\n            </div>\n        </Router>\n    </div>\n)\n\nReactDOM.render(routing, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}