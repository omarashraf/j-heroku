{"version":3,"sources":["lib/helper_functions.js","components/Header/Header.js","constants.js","lib/Api.js","components/Authentication/Authentication.js","App.js","components/Dashboard/Dashboard.js","components/OrderEdit/OrderEdit.js","components/OrderInsert/OrderInsert.js","components/Paginatior/Paginatior.js","components/Order/Order.js","components/ProductInsert/ProductInsert.js","components/Product/Product.js","components/UserInsert/UserInsert.js","components/User/User.js","serviceWorker.js","AuthenticatedRoute.js","components/Revenue/Revenue.js","index.js"],"names":["addDeleteCheckers","items","i","length","formulateOrderNumber","date","dateSpliited","Date","toLocaleDateString","split","timeSpliited","toLocaleTimeString","tokenExpired","localStorage","getItem","JWT","exp","now","Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","logout","bind","assertThisInitialized","state","redirectToRevenue","redirectToDashboard","removeItem","react_default","a","createElement","className","react_router_dom","to","style","color","textDecoration","onClick","React","Component","API_URL","getHeaders","headers","x-access-token","deleteOrders","idToDelete","axios","delete","Constants","getProducts","get","deleteProducts","getUsers","deleteUsers","Authentication","handleUsername","handlePassword","submitForm","username","password","errMsg","hideAlert","event","setState","target","value","_this2","preventDefault","authBody","post","authenticateAdmin","then","res","setItem","data","catch","err","response","msg","react_router","onSubmit","role","hidden","type","placeholder","onChange","autoComplete","App","Header_Header_Header","Authentication_Authentication_Authentication","Dashboard","activeStyle","backgroundColor","aria-label","first","second","third","OrderEdit","editOrder","handleQuantity","handleCode","initOrderDetails","handleStatus","handleDiscountChange","handleDiscountAmount","handleDiscountRemove","products","orderDetails","status","deliveryDate","dispatchingDate","checked","discountAmount","checkedDiscountRemove","console","log","discountPercentage","_this3","editedOrderDetails","order","quantity","code","editOrderBody","preOrderDetails","orderId","_id","patch","price","updateOrder","closeModal","index","id","ordersSize","newOrderDetails","newQuantity","Number","prevState","map","orderDetail","pointer","objectSpread","newCode","handleQuantityHelper","handleCodeHelper","_this4","applyDiscount","removeDiscount","htmlFor","showModal","Modal","isOpen","ModalHeader","ModalBody","key","product","ModalFooter","OrderInsert","addOrderDetail","removeSelect","handleUser","getAllProducts","getAllUsers","filterUsernames","setFilterUsernames","users","selects","selectedUser","usernames","label","instagramUsername","concat","toConsumableArray","newSelects","splice","select","selectedOption","customerId","window","setTimeout","insertOrder","getOrders","_this5","filterUsername","filter","user","includes","_this6","instagramUsernamel","showModalInsert","react_select_browser_esm","options","index_es","icon","faTimes","submitOrder","Paginatior","handlePageChange","activePage","itemsPerPage","pageNumber","indexOfLastThing","indexOfFirstThing","itemsShown","slice","handleItems","Pagination_default","innerClass","totalItemsCount","itemsCountPerPage","itemClass","activeClass","hideNavigation","linkClass","activeLinkClass","Order","changeCheckboxValue","filterOrders","getAllOrders","handleOrdersShown","checkAllDelete","setOrdersShown","sortOrders","orders","orderToEdit","ordersShown","checkAll","sortType","sortingDates","placingDate","sortFieldFlag","field","defineProperty","sort","b","filteredOrders","idsToDelete","push","stateOrder","orderNumber","toLocaleString","Paginatior_Paginatior_Paginatior","OrderEdit_OrderEdit_OrderEdit","OrderInsert_OrderInsert_OrderInsert","ProductInsert","handleName","handlePrice","submitProduct","name","insertProduct","Product","filterProducts","handleProductsShown","productsShown","filteredProducts","stateProduct","availableToSell","ProductInsert_ProductInsert","UserInsert","handleInstagram","handleEmail","handlePhone","handleAddress","submitUser","email","phone","match","address","insertUser","User","filterUsers","handleUsersShown","usersShown","stateUser","filteredUsers","UserInsert_UserInsert","Boolean","location","hostname","AuthenticatedRoute","_ref","component","rest","objectWithoutProperties","assign","render","exact","pathname","from","Revenue","total","getRevenue","result","routing","path","src_AuthenticatedRoute","Dashboard_Dashboard_Dashboard","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.54a7e839.chunk.js","sourcesContent":["import * as JWT from 'jwt-decode';\r\n\r\nexport const addDeleteCheckers = (items) => {\r\n    for (let i = 0; i < items.length; i++) {\r\n        items[i]['orderNumber'] = formulateOrderNumber(items[i]['placingDate']);\r\n        items[i]['toDelete'] = false;\r\n    }\r\n    return items;\r\n}\r\n\r\nconst formulateOrderNumber = (date) => {\r\n    const dateSpliited = new Date(date).toLocaleDateString().split('/');\r\n    const timeSpliited = new Date(date).toLocaleTimeString().split(' ')[0].split(\":\");\r\n    let orderNumber = dateSpliited[0] + dateSpliited[1] + \"-\" + dateSpliited[2] + \"-\" + timeSpliited[0] + timeSpliited[1] + timeSpliited[2];\r\n    return orderNumber;\r\n}\r\n\r\nexport const tokenExpired = () => {\r\n    if (localStorage.getItem('token') == null || localStorage.getItem('token') == '') {\r\n        return true;\r\n    }\r\n    let decoded = JWT(localStorage.getItem('token'));\r\n    if (decoded.exp * 1000 <= Date.now()) {\r\n        return true;\r\n    }\r\n    return false;\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { tokenExpired } from '../../lib/helper_functions';\r\n\r\nimport './Header.css';\r\n\r\nexport default class Header extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.logout = this.logout.bind(this);\r\n        this.state = {\r\n            redirectToRevenue: false,\r\n            redirectToDashboard: false\r\n        };\r\n    }\r\n\r\n    logout() {\r\n        localStorage.removeItem('token');\r\n    }\r\n\r\n    render() {\r\n        if (tokenExpired() || localStorage.getItem('token') === '' || localStorage.getItem('token') === null) {\r\n            return (\r\n                <div className=\"header__main\">\r\n                    <nav className=\"navbar fixed-top navbar-light bg-info\">\r\n                        {/* <span className=\"navbar-brand\" href=\"#!\" style={{ color: '#fff' }}>Jawareb</span> */}\r\n                        <div>\r\n                            <ul>\r\n                                <li>\r\n                                    <Link to=\"/dashboard/orders\" style={{ color: '#fff', textDecoration: 'none' }}>Jawareb</Link>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n                \r\n            )\r\n        } else {\r\n            return (\r\n                <div className=\"header__main\">\r\n                    <nav className=\"navbar fixed-top navbar-light bg-info\">\r\n                        <div>\r\n                            <ul>\r\n                                <li>\r\n                                    <Link to=\"/dashboard/orders\" style={{ color: '#fff', textDecoration: 'none' }}>Jawareb</Link>\r\n                                </li>\r\n                                <li>\r\n                                    <Link to=\"/dashboard/orders\" style={{ color: '#fff', textDecoration: 'none' }}>Dashboard</Link>\r\n                                </li>\r\n                                <li>\r\n                                    <Link to=\"/analytics/revenue\" style={{ color: '#fff', textDecoration: 'none' }}>Revenue</Link>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                        <div>\r\n                            <Link style={{ color: '#fff', textDecoration: 'none' }} to=\"/\" onClick={this.logout}>Logout</Link>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n                \r\n            )\r\n        }\r\n    }\r\n}","// const PORT = process.env.PORT || 3001;\r\n// export const API_URL='http://localhost:3001';\r\nexport const API_URL= 'https://jawareb.herokuapp.com';","import axios from 'axios';\r\nimport * as Constants from '../constants';\r\n\r\nconst getHeaders = () => {\r\n    const headers = {\r\n        headers: {\r\n            'x-access-token': localStorage.getItem('token')\r\n        }\r\n    };\r\n    return headers;  \r\n}\r\n\r\nexport const getOrders = () => {\r\n    const headers = getHeaders();\r\n    return axios.get(Constants.API_URL + '/order', headers);\r\n};\r\n\r\nexport const insertOrder = (order) => {\r\n    const headers = getHeaders();\r\n    return axios.post(Constants.API_URL + '/order', order, headers)\r\n};\r\n\r\nexport const deleteOrders = (idToDelete) => {\r\n    const headers = getHeaders();\r\n    return axios.delete(Constants.API_URL + '/order/' + idToDelete, headers);\r\n}\r\n\r\nexport const editOrder = (editOrderBody) => {\r\n    const headers = getHeaders();\r\n    return axios.patch(Constants.API_URL + '/order', editOrderBody, headers);\r\n}\r\n\r\nexport const getProducts = () => {\r\n    const headers = getHeaders();\r\n    return axios.get(Constants.API_URL + '/product', headers);\r\n}\r\n\r\nexport const insertProduct = (product) => {\r\n    const headers = getHeaders();\r\n    return axios.post(Constants.API_URL + '/product', product, headers)\r\n};\r\n\r\nexport const deleteProducts = (idToDelete) => {\r\n    const headers = getHeaders();\r\n    return axios.delete(Constants.API_URL + '/product/' + idToDelete, headers);\r\n}\r\n\r\nexport const getUsers = () => {\r\n    const headers = getHeaders();\r\n    return axios.get(Constants.API_URL + '/user', headers);\r\n}\r\n\r\nexport const insertUser = (user) => {\r\n    const headers = getHeaders();\r\n    return axios.post(Constants.API_URL + '/user', user, headers)\r\n};\r\n\r\nexport const deleteUsers = (idToDelete) => {\r\n    const headers = getHeaders();\r\n    return axios.delete(Constants.API_URL + '/user/' + idToDelete, headers);\r\n}\r\n\r\nexport const getRevenue = () => {\r\n    const headers = getHeaders();\r\n    return axios.get(Constants.API_URL + '/order/revenue', headers);\r\n}\r\n\r\nexport const authenticateAdmin = (authBody) => {\r\n    return  axios.post(Constants.API_URL + '/auth', authBody);\r\n}","import React from 'react';\r\nimport { authenticateAdmin } from '../../lib/Api';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport './Authentication.css';\r\nimport { tokenExpired } from '../../lib/helper_functions';\r\n\r\nexport default class Authentication extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleUsername = this.handleUsername.bind(this);\r\n        this.handlePassword = this.handlePassword.bind(this);\r\n        this.submitForm = this.submitForm.bind(this);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            errMsg: '',\r\n            hideAlert: true,\r\n            redirectToDashboard: false\r\n        };\r\n    }\r\n\r\n    handleUsername(event) {\r\n        this.setState({ username: event.target.value });\r\n    }\r\n\r\n    handlePassword(event) {\r\n        this.setState({ password: event.target.value });\r\n    }\r\n\r\n    submitForm(event) {\r\n        event.preventDefault();\r\n        if (this.state.username !== '' && this.state.password !== '') {\r\n            let authBody = {\r\n                username: this.state.username,\r\n                password: this.state.password\r\n            }\r\n            authenticateAdmin(authBody).then(res => {\r\n                localStorage.setItem('token', res.data);\r\n                this.setState({ errMsg: '', hideAlert: true, redirectToDashboard: true });\r\n            }).catch(err => {\r\n                if (err.response) {\r\n                    if (typeof err.response.data == 'object') {\r\n                        this.setState({ errMsg: err.response.data.msg, hideAlert: false });\r\n                    } else {\r\n                        this.setState({ errMsg: err.response.data, hideAlert: false });\r\n                    }\r\n                } else {\r\n                    this.setState({ errMsg: err.response, hideAlert: false });\r\n                }\r\n            });\r\n        } else {\r\n            this.setState({ errMsg: 'username and password can\\'t be empty', hideAlert: false });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!tokenExpired() || this.state.redirectToDashboard) {\r\n            return <Redirect to=\"/dashboard\" />\r\n        }\r\n        return(\r\n            <div className=\"row auth__main-container\">\r\n                <div className=\"col-md-8 auth__left-container\"></div>\r\n                <div className=\"col-md-4 auth__right-container\">\r\n                    <div className=\"auth__login-form\">\r\n                        <form onSubmit={this.submitForm}>\r\n                            <h4>Jawareb Admin Portal</h4>\r\n                            <div className=\"alert alert-danger\" role=\"alert\" hidden={this.state.hideAlert}>\r\n                                { this.state.errMsg }\r\n                            </div>\r\n                            <div className=\"auth__login-form-control\">\r\n                                <input type=\"text\" className=\"form-control\" placeholder=\"Username\" onChange={this.handleUsername} autoComplete=\"new-password\" />\r\n                            </div>\r\n                            <div className=\"auth__login-form-control\">\r\n                                <input type=\"password\" className=\"form-control\" placeholder=\"Password\" onChange={this.handlePassword} autoComplete=\"new-password\" />\r\n                            </div>\r\n                            <div className=\"auth__login-button\">\r\n                                <input type=\"submit\" className=\"btn btn-info\" value=\"Login\" />\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport Authentication from './components/Authentication/Authentication';\n\nfunction App() {\n\n  return (\n      <div className=\"App\">\n        <Header></Header>\n        <Authentication></Authentication>\n      </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Header from '../Header/Header';\r\n\r\nimport './Dashboard.css';\r\n\r\nexport default class Dashboard extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeStyle: { backgroundColor: '#555', color: '#fff' },\r\n            style: { backgroundColor: '#e9ecef' }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Header></Header>\r\n                <div className=\"dashboard__container\">\r\n                    <div className=\"btn-group btn-group-lg\" role=\"group\" aria-label=\"Basic example\">\r\n                        <NavLink className=\"btn\" to={this.props.first} activeStyle={ this.state.activeStyle } style={ this.state.style }>\r\n                            {this.props.first.split('/')[this.props.first.split('/').length - 1]}\r\n                        </NavLink>\r\n                        <NavLink className=\"btn\" to={this.props.second} activeStyle={this.state.activeStyle} style={ this.state.style }>\r\n                            {this.props.second.split('/')[this.props.second.split('/').length - 1]}\r\n                        </NavLink>\r\n                        <NavLink className=\"btn\" to={this.props.third} activeStyle={this.state.activeStyle} style={ this.state.style }>\r\n                            {this.props.third.split('/')[this.props.third.split('/').length - 1]}\r\n                        </NavLink>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { getProducts, editOrder } from '../../lib/Api';\r\n\r\nimport './OrderEdit.css';\r\n\r\nexport default class OrderEdit extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.editOrder = this.editOrder.bind(this);\r\n        this.handleQuantity = this.handleQuantity.bind(this);\r\n        this.handleCode = this.handleCode.bind(this);\r\n        this.initOrderDetails = this.initOrderDetails.bind(this);\r\n        this.handleStatus = this.handleStatus.bind(this);\r\n        this.handleDiscountChange = this.handleDiscountChange.bind(this);\r\n        this.handleDiscountAmount = this.handleDiscountAmount.bind(this);\r\n        this.handleDiscountRemove = this.handleDiscountRemove.bind(this);\r\n        this.state = {\r\n            products: [],\r\n            orderDetails: [],\r\n            status: '',\r\n            deliveryDate: '',\r\n            dispatchingDate: '',\r\n            checked: false,\r\n            discountAmount: '0',\r\n            checkedDiscountRemove: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        getProducts().then(res => {\r\n            if (res.data != null && res.data.products.length >= 1) {\r\n                this.setState({ products: res.data.products });\r\n            }\r\n        }).catch(err => {\r\n            console.log('err: ', err);\r\n        });\r\n    }\r\n\r\n    editOrder() {\r\n        let editedOrderDetails = [];\r\n        if (this.state.orderDetails.length === 0) {\r\n            for (let i = 0; i < this.props.order.orderDetails.length; i++) {\r\n                editedOrderDetails[i] = { quantity: this.props.order.orderDetails[i].quantity, code: this.props.order.orderDetails[i].code }\r\n            }\r\n        } else {\r\n            editedOrderDetails = this.state.orderDetails;\r\n            for (let i = 0; i < editedOrderDetails.length; i++) {\r\n                if (editedOrderDetails[i].quantity === '' || editedOrderDetails[i].quantity == null) {\r\n                    editedOrderDetails[i].quantity = this.props.order.orderDetails[i].quantity;\r\n                }\r\n                if (editedOrderDetails[i].code === '' || editedOrderDetails[i].code == null) {\r\n                    editedOrderDetails[i].code = this.props.order.orderDetails[i].code;\r\n                }\r\n            }\r\n        }\r\n\r\n        let discountPercentage;\r\n        if (this.state.checkedDiscountRemove) {\r\n            discountPercentage = '0';\r\n        } else if (this.state.checked) {\r\n            discountPercentage = this.state.discountAmount;\r\n        } else {\r\n            discountPercentage = this.props.order.discountPercentage;\r\n        }\r\n\r\n        let editOrderBody = {\r\n            preOrderDetails: this.props.order.orderDetails,\r\n            orderDetails: editedOrderDetails,\r\n            status: this.state.status === ''? this.props.order.status : this.state.status,\r\n            orderId: this.props.order._id,\r\n            deliveryDate: this.state.deliveryDate,\r\n            dispatchingDate: this.state.dispatchingDate,\r\n            discountPercentage\r\n        }\r\n\r\n        editOrder(editOrderBody).then(res => {\r\n            editOrderBody['price'] = res.data.order.price;\r\n            this.props.updateOrder(editOrderBody);\r\n            this.props.closeModal();\r\n            this.setState({\r\n                orderDetails: [],\r\n                status: '',\r\n                checked: false,\r\n                checkedDiscountRemove: false\r\n            });\r\n        }, err => {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    initOrderDetails(index, event, id) {\r\n        let ordersSize = this.props.order.orderDetails.length;\r\n        let newOrderDetails = []\r\n        for (let i = 0; i < ordersSize; i++) {\r\n            newOrderDetails[i] = { quantity: this.props.order.orderDetails[i].quantity, code: this.props.order.orderDetails[i].code }\r\n        };\r\n        if (id === 'quantity') {\r\n            let newQuantity = Number(event.target.value);\r\n            this.setState(prevState => ({\r\n                orderDetails: newOrderDetails.map((orderDetail, pointer) => {\r\n                    return pointer === index? {...orderDetail, quantity: newQuantity} : orderDetail;\r\n                })\r\n            }));\r\n        } else {\r\n            let newCode = event.target.value;\r\n            this.setState(prevState => ({\r\n                orderDetails: newOrderDetails.map((orderDetail, pointer) => {\r\n                    return pointer === index? {...orderDetail, code: newCode} : orderDetail;\r\n                })\r\n            }));\r\n        }\r\n    }\r\n\r\n    handleQuantity(i, event) {\r\n        if (this.state.orderDetails.length === 0) {\r\n            this.initOrderDetails(i, event, 'quantity');\r\n        } else {\r\n            this.handleQuantityHelper(i, event.target.value);\r\n        }\r\n    }\r\n\r\n    handleQuantityHelper(i, newQuantity) {\r\n        this.setState(prevState => ({\r\n            orderDetails: prevState.orderDetails.map((orderDetail, index) => {\r\n                return index === i? { ...orderDetail, quantity: Number(newQuantity) } : orderDetail;\r\n            })\r\n        }));\r\n    }\r\n\r\n    handleCode(i, event) {\r\n        if (this.state.orderDetails.length === 0) {\r\n            this.initOrderDetails(i, event, 'code');\r\n        } else {\r\n            this.handleCodeHelper(i, event.target.value);\r\n        }\r\n    }\r\n\r\n    handleCodeHelper(i, newCode) {\r\n        this.setState(prevState => ({\r\n            orderDetails: prevState.orderDetails.map((orderDetail, index) => {\r\n                return index === i? { ...orderDetail, code: newCode } : orderDetail;\r\n            })\r\n        }));\r\n    }\r\n\r\n    handleStatus(event) {\r\n        if (event.target.value === 'delivered') {\r\n            this.setState({ status: event.target.value, deliveryDate: Date(Date.now) });\r\n        } else if (event.target.value === 'dispatched') {\r\n            this.setState({ status: event.target.value, dispatchingDate: Date(Date.now), deliveryDate: '' });\r\n        } else {\r\n            this.setState({ status: event.target.value, dispatchingDate: '', deliveryDate: '' });\r\n        }\r\n    }\r\n\r\n    handleDiscountChange() {\r\n        this.setState({ checked: !this.state.checked, checkedDiscountRemove: false });\r\n    }\r\n\r\n    handleDiscountAmount(event) {\r\n        this.setState({ discountAmount: event.target.value });\r\n    }\r\n\r\n    handleDiscountRemove() {\r\n        this.setState({ checkedDiscountRemove: !this.state.checkedDiscountRemove, checked: false });\r\n    }\r\n\r\n    render() {\r\n        if (this.props.order.orderDetails) {\r\n            const applyDiscount = this.state.checked \r\n                ? <div className=\"form-group\">\r\n                    <div className=\"form-group\">\r\n                        <label>Discount:</label>\r\n                        <input type=\"number\" className=\"form-control\" id=\"discount\" placeholder=\"Discount Percentage\" onChange={this.handleDiscountAmount} />\r\n                    </div>\r\n                  </div>\r\n                : null;\r\n            const removeDiscount = this.props.order.discountPercentage !== \"0\"\r\n                ? <div className=\"form-group\">\r\n                    <div className=\"custom-control custom-checkbox\">\r\n                        <input className=\"custom-control-input\" id=\"removeDiscountCheck\" type=\"checkbox\" checked={ this.state.checkedDiscountRemove } onChange={ this.handleDiscountRemove } />\r\n                        <label className=\"custom-control-label\" htmlFor=\"removeDiscountCheck\">Remove discount</label>\r\n                    </div>\r\n                </div>\r\n                : null;\r\n            return(\r\n                <div>\r\n                    { (this.props.showModal) ? \r\n                        <Modal isOpen={this.props.showModal}>\r\n                            <ModalHeader>Existing Order</ModalHeader>\r\n                            <ModalBody>\r\n                                <form>\r\n                                    {\r\n                                        this.props.order.orderDetails.map((orderDetail, index) => {\r\n                                            return(\r\n                                                <div className=\"row\" key={index}>\r\n                                                    <div className=\"col-md-3\">Sub-order { index + 1 }:</div>\r\n                                                    <div className=\"form-group col-md-4\">\r\n                                                        <select className=\"custom-select\" value={this.state.orderDetails[index]? this.state.orderDetails[index].quantity : orderDetail.quantity} onChange={(event) => this.handleQuantity(index, event)}>\r\n                                                            <option>1</option>\r\n                                                            <option>2</option>\r\n                                                            <option>3</option>\r\n                                                            <option>4</option>\r\n                                                            <option>5</option>\r\n                                                            <option>6</option>\r\n                                                            <option>7</option>\r\n                                                            <option>8</option>\r\n                                                            <option>9</option>\r\n                                                        </select>\r\n                                                    </div>\r\n                                                    <div className=\"form-group col-md-4\">\r\n                                                        <select className=\"custom-select\" value={this.state.orderDetails[index]? this.state.orderDetails[index].code : orderDetail.code} onChange={(event) => this.handleCode(index, event)}>\r\n                                                            {\r\n                                                                this.state.products.map((product, i) => {\r\n                                                                    return <option key={i}>{product.code}</option>\r\n                                                                })\r\n                                                            }\r\n                                                        </select>\r\n                                                    </div>\r\n                                                </div>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                    <hr />\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-3\">Status:</div>\r\n                                        <div className=\"col-md-4 form-group\">\r\n                                            <select className=\"custom-select\" value={this.state.status === ''? this.props.order.status : this.state.status} onChange={(event) => this.handleStatus(event)}>\r\n                                                <option value=\"pending\">pending</option>\r\n                                                <option value=\"dispatched\">dispatched</option>\r\n                                                <option value=\"delivered\">delivered</option>\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                    <hr />\r\n                                    <div className=\"form-group\">\r\n                                        <div className=\"custom-control custom-checkbox\">\r\n                                            <input className=\"custom-control-input\" id=\"customCheck\" type=\"checkbox\" checked={ this.state.checked } onChange={ this.handleDiscountChange } />\r\n                                            <label className=\"custom-control-label\" htmlFor=\"customCheck\">Apply discount</label>\r\n                                        </div>\r\n                                    </div>\r\n                                    { applyDiscount }\r\n                                    <hr />\r\n                                    { removeDiscount }\r\n                                </form>\r\n                            </ModalBody>\r\n                            <ModalFooter>\r\n                                <button type=\"submit\" className=\"btn btn-info\" onClick={this.editOrder}>Edit</button>\r\n                                <button className=\"btn btn-danger\" onClick={(event) => this.props.closeModal(event)}>Cancel</button>\r\n                            </ModalFooter>\r\n                        </Modal>\r\n                    : null }\r\n                </div>\r\n            );\r\n        } else {\r\n            return null;\r\n        }\r\n       \r\n    }\r\n}","import React from 'react';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { getProducts, getUsers, insertOrder } from '../../lib/Api';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport Select from 'react-select';\r\n\r\nimport './OrderInsert.css';\r\n\r\nexport default class OrderInsert extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.addOrderDetail = this.addOrderDetail.bind(this);\r\n        this.removeSelect = this.removeSelect.bind(this);\r\n        this.handleCode = this.handleCode.bind(this);\r\n        this.handleQuantity = this.handleQuantity.bind(this);\r\n        this.handleUser = this.handleUser.bind(this);\r\n        this.getAllProducts = this.getAllProducts.bind(this);\r\n        this.getAllUsers = this.getAllUsers.bind(this);\r\n        this.filterUsernames = this.filterUsernames.bind(this);\r\n        this.setFilterUsernames = this.setFilterUsernames.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.handleDiscountChange = this.handleDiscountChange.bind(this);\r\n        this.handleDiscountAmount = this.handleDiscountAmount.bind(this);\r\n        this.state = {\r\n            users: [],\r\n            products: [],\r\n            order: {},\r\n            selects: [],\r\n            filterUsernames: [],\r\n            selectedUser: null,\r\n            errMsg: '',\r\n            hideAlert: true,\r\n            checked: false,\r\n            discountAmount: '0'\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllProducts();\r\n        this.getAllUsers();\r\n    }\r\n\r\n    getAllUsers() {\r\n        getUsers().then(res => {\r\n            if (res.data != null && res.data.users.length >= 1) {\r\n                this.setState({ users: res.data.users });\r\n                this.setState({ selectedUser: res.data.users[0] })\r\n                let usernames = [];\r\n                for (let i = 0; i < res.data.users.length; i++) {\r\n                    usernames[i] = {\r\n                        label: res.data.users[i].instagramUsername,\r\n                        value: res.data.users[i].instagramUsername\r\n                    }\r\n                }\r\n                this.setFilterUsernames(usernames);\r\n            }\r\n        }).catch(err => {\r\n            console.log('err: ', err);\r\n        });\r\n    }\r\n\r\n    setFilterUsernames(users) {\r\n        this.setState({ filterUsernames: users });\r\n    }\r\n\r\n    getAllProducts() {\r\n        getProducts().then(res => {\r\n            if (res.data != null && res.data.products.length >= 1) {\r\n                this.setState({ products: res.data.products, selects: [{ quantity: 1, code: res.data.products[0].code }] });\r\n            }\r\n        }).catch(err => {\r\n            console.log('err: ', err);\r\n        });\r\n    }\r\n\r\n    addOrderDetail(event) {\r\n        event.preventDefault();\r\n        this.setState({ selects: [...this.state.selects, { quantity: 1, code: this.state.products[0].code }] });\r\n    }\r\n\r\n    removeSelect(event, index) {\r\n        event.preventDefault();\r\n        let newSelects = [...this.state.selects];\r\n        newSelects.splice(index, 1);\r\n        this.setState({ selects: newSelects });\r\n    }\r\n\r\n    handleQuantity(index, event) {\r\n        let newQuantity = event.target.value;\r\n        if (this.state.selects[index]) {\r\n            this.setState(prevState => ({\r\n                selects: prevState.selects.map((select, i) => {\r\n                    return index === i? { ...select, quantity: Number(newQuantity) } : select;\r\n                })\r\n            }));\r\n        } else {\r\n            this.setState({ selects: [...this.state.selects, { quantity: Number(newQuantity) } ] });\r\n        }\r\n    }\r\n\r\n    handleCode(index, event) {\r\n        let newCode = event.target.value;\r\n        if (this.state.selects[index]) {\r\n            this.setState(prevState => ({\r\n                selects: prevState.selects.map((select, i) => {\r\n                    return index === i? { ...select, code: newCode } : select;\r\n                })\r\n            }));\r\n        } else {\r\n            this.setState({ selects: [...this.state.selects, { code: newCode } ] });\r\n        }\r\n    }\r\n\r\n    handleUser(selectedOption) {\r\n        this.setState({ order: { customerId: selectedOption.value }, selectedUser: selectedOption.value });\r\n    }\r\n\r\n    submitOrder() {\r\n        let order = this.state.order;\r\n        order['deliveryDate'] = '';\r\n        order['dispatchingDate'] = '';\r\n        order['orderDetails'] = this.state.selects;\r\n        order['discountPercentage'] = this.state.discountAmount;\r\n        if (order.customerId === '' || order.customerId == null) {\r\n            this.setState({ errMsg: 'no Instagram username is supplied', hideAlert: false }, () => {\r\n                window.setTimeout(()=>{\r\n                  this.setState({ errMsg: '', hideAlert: true })\r\n                }, 4000)\r\n            });\r\n        } else {\r\n            insertOrder(order).then(res => {\r\n                this.setState({ discountAmount: '0', checked: false });\r\n                this.props.getOrders();\r\n                this.props.closeModal();\r\n            }, err => {\r\n                this.setState({ errMsg: err.response.data.msg, hideAlert: false }, () => {\r\n                    window.setTimeout(()=>{\r\n                      this.setState({ errMsg: '', hideAlert: true })\r\n                    }, 4000)\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({ errMsg: '', hideAlert: true });\r\n        this.props.closeModal();\r\n    }\r\n\r\n    filterUsernames(event) {\r\n        const filterUsername = event.target.value;\r\n        this.setState(prevState => ({\r\n            filterUsernames: this.state.users.filter((user, i) => {\r\n                return user.instagramUsername.includes(filterUsername);\r\n            })\r\n        }));\r\n    }\r\n\r\n    handleDiscountChange() {\r\n        this.setState({ checked: !this.state.checked })\r\n    }\r\n\r\n    handleDiscountAmount(event) {\r\n        this.setState({ discountAmount: event.target.value });\r\n    }\r\n\r\n    render() {\r\n        let { selectedUser } = this.state;\r\n        if (selectedUser !== null) {\r\n            selectedUser = selectedUser.instagramUsernamel;\r\n        }\r\n        let applyDiscount = null;\r\n        if (this.state.checked) {\r\n            applyDiscount = <div className=\"form-group\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Discount:</label>\r\n                                    <input type=\"number\" className=\"form-control\" id=\"discount\" placeholder=\"Discount Percentage\" onChange={this.handleDiscountAmount} />\r\n                                </div>\r\n                            </div>\r\n        }\r\n        return(\r\n            <div>\r\n                <Modal isOpen={this.props.showModalInsert}>\r\n                        <ModalHeader>New Order</ModalHeader>\r\n                        <ModalBody>\r\n                        <form>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"alert alert-danger\" role=\"alert\" hidden={this.state.hideAlert}>\r\n                                    { this.state.errMsg }\r\n                                </div>\r\n                                <label>Instagram Username:</label>\r\n                                <Select\r\n                                    value={selectedUser}\r\n                                    onChange={this.handleUser}\r\n                                    options={this.state.filterUsernames}\r\n                                />\r\n                            </div>\r\n                            <hr />\r\n                            <div className=\"add-btn-container\">\r\n                                <button className=\"btn btn-info\" onClick={ (event) => this.addOrderDetail(event) }>Add Suborder</button>\r\n                            </div>\r\n\r\n                            {\r\n                                this.state.selects.map((select, index) => {\r\n                                    return(\r\n                                        <div className=\"row\" key={ index }>\r\n                                            <div className=\"col-md-3\">Sub-order {index + 1}</div>\r\n                                            <div className=\"col-md-3 form-group\">\r\n                                                <select className=\"custom-select\" value={this.state.selects[index].quantity} onChange={(event) => this.handleQuantity(index, event)}>\r\n                                                    <option>1</option>\r\n                                                    <option>2</option>\r\n                                                    <option>3</option>\r\n                                                    <option>4</option>\r\n                                                    <option>5</option>\r\n                                                    <option>6</option>\r\n                                                    <option>7</option>\r\n                                                    <option>8</option>\r\n                                                    <option>9</option>\r\n                                                </select>\r\n                                            </div>\r\n                                            <div className=\"col-md-3 form-group\">\r\n                                                <select className=\"custom-select\" value={this.state.selects[index].code} onChange={(event) => this.handleCode(index, event)}>\r\n                                                    {\r\n                                                        this.state.products.map((product, index) => {\r\n                                                            return <option key={ index }>{ product.code }</option>\r\n                                                        })\r\n                                                    }\r\n                                                </select>\r\n                                            </div>\r\n                                            <div className=\"col-md-3\">\r\n                                                <FontAwesomeIcon className=\"fa-times-delete\" hidden={ this.state.selects.length === 1 } onClick={ (event) => this.removeSelect(event, index) } icon={faTimes} />\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                })\r\n                            }\r\n                            <div className=\"form-group\">\r\n                                <div className=\"custom-control custom-checkbox\">\r\n                                    <input className=\"custom-control-input\" id=\"customCheck\" type=\"checkbox\" checked={ this.state.checked } onChange={ this.handleDiscountChange } />\r\n                                    <label className=\"custom-control-label\" htmlFor=\"customCheck\">Apply discount</label>\r\n                                </div>\r\n                            </div>\r\n                            { applyDiscount }\r\n                        </form>\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <button type=\"submit\" className=\"btn btn-info\" onClick={(event) => this.submitOrder(event)}>Add Order</button>\r\n                            <button type=\"button\" className=\"btn btn-danger\" onClick={this.closeModal}>Cancel</button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport Pagination from \"react-js-pagination\";\r\n\r\nimport './Paginatior.css';\r\n\r\nexport default class Paginatior extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handlePageChange = this.handlePageChange.bind(this);\r\n        this.state = {\r\n            activePage: 1,\r\n            itemsPerPage: this.props.itemsPerPage,\r\n            items: this.props.items\r\n        }\r\n    }\r\n    \r\n    handlePageChange(pageNumber) {\r\n        this.setState({ activePage: pageNumber }, () => {\r\n            const indexOfLastThing = this.state.activePage * this.state.itemsPerPage;\r\n            const indexOfFirstThing = indexOfLastThing - this.state.itemsPerPage;\r\n            const itemsShown = this.props.items.slice(indexOfFirstThing, indexOfLastThing);\r\n            this.props.handleItems(itemsShown, pageNumber);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"pagination__container\">\r\n                <Pagination\r\n                innerClass=\"pagination-overriden\"\r\n                onChange={this.handlePageChange}\r\n                activePage={this.state.activePage}\r\n                totalItemsCount={this.props.items.length}\r\n                itemsCountPerPage={this.state.itemsPerPage}\r\n                itemClass=\"item-page\"\r\n                activeClass=\"item-active-page\"\r\n                hideNavigation={true}\r\n                linkClass=\"link-page\"\r\n                activeLinkClass=\"link-active-page\"\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport OrderEdit from '../OrderEdit/OrderEdit';\r\nimport OrderInsert from '../OrderInsert/OrderInsert';\r\nimport Paginator from '../Paginatior/Paginatior';\r\n\r\nimport { getOrders, deleteOrders } from '../../lib/Api';\r\nimport { addDeleteCheckers } from '../../lib/helper_functions';\r\n\r\nimport './Order.css';\r\n\r\nexport default class Order extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.changeCheckboxValue = this.changeCheckboxValue.bind(this);\r\n        this.deleteOrders = this.deleteOrders.bind(this);\r\n        this.filterOrders = this.filterOrders.bind(this);\r\n        this.editOrder = this.editOrder.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.insertOrder = this.insertOrder.bind(this);\r\n        this.getAllOrders = this.getAllOrders.bind(this);\r\n        this.handleOrdersShown = this.handleOrdersShown.bind(this);\r\n        this.updateOrder = this.updateOrder.bind(this);\r\n        this.checkAllDelete = this.checkAllDelete.bind(this);\r\n        this.setOrdersShown = this.setOrdersShown.bind(this);\r\n        this.sortOrders = this.sortOrders.bind(this);\r\n        this.state = {\r\n            orders: [],\r\n            showModal: false,\r\n            showModalInsert: false,\r\n            orderToEdit: {},\r\n            itemsPerPage: 7,\r\n            activePage: 1,\r\n            ordersShown: [],\r\n            checkAll: false,\r\n            sortType: false,\r\n            hideAlert: true,\r\n            errMsg: '',\r\n            sortingDates: {\r\n                placingDate: false,\r\n                dispatchingDate: false,\r\n                deliveryDate: false\r\n            }\r\n        }\r\n    }\r\n\r\n    getAllOrders() {\r\n        getOrders().then(res => {\r\n            if (res.data != null && res.data.orders.length >= 1) {\r\n                this.setState({ orders: addDeleteCheckers(res.data.orders) });\r\n                this.setOrdersShown();\r\n            }\r\n        }).catch(err => {\r\n            console.log('err: ', err);\r\n        });\r\n    }\r\n\r\n    sortOrders(orders, sortFieldFlag, field) {\r\n        this.setState(prevState => ({\r\n            sortingDates: {\r\n                ...prevState.sortingDates,\r\n                [field]: sortFieldFlag\r\n            }\r\n        }));\r\n        orders.sort(function(a,b){\r\n            return sortFieldFlag? new Date(b[field]) - new Date(a[field]) : new Date(a[field]) - new Date(b[field]);\r\n        });\r\n        this.setState({ orders });\r\n        this.setOrdersShown();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllOrders();\r\n    }\r\n\r\n    setOrdersShown() {\r\n        const indexOfLastThing = this.state.activePage * this.state.itemsPerPage;\r\n        const indexOfFirstThing = indexOfLastThing - this.state.itemsPerPage;\r\n        this.setState({ ordersShown: this.state.orders.slice(indexOfFirstThing, indexOfLastThing) });\r\n    }\r\n\r\n    filterOrders() {\r\n        let orders = this.state.orders;\r\n        let filteredOrders = orders.filter(order => {\r\n            return !order['toDelete'];\r\n        });\r\n        const indexOfLastThing = this.state.activePage * this.state.itemsPerPage;\r\n        const indexOfFirstThing = indexOfLastThing - this.state.itemsPerPage;\r\n        this.setState({ orders: filteredOrders, ordersShown: filteredOrders.slice(indexOfFirstThing, indexOfLastThing) });\r\n    }\r\n\r\n    insertOrder() {\r\n        this.setState({ showModalInsert: true });\r\n    }\r\n\r\n    deleteOrders() {\r\n        const idsToDelete = [];\r\n        this.state.orders.map((order) => {\r\n            if (order['toDelete']) { \r\n                idsToDelete.push(order._id);\r\n            }\r\n        });\r\n        for (let i = 0; i < idsToDelete.length; i++) {\r\n            deleteOrders(idsToDelete[i]).then(res => {\r\n                this.setState({ errMsg: `the order(s) selected are deleted successfully`, hideAlert: false }, () => {\r\n                    window.setTimeout(()=>{\r\n                      this.setState({ errMsg: '', hideAlert: true })\r\n                    }, 4000)\r\n                });\r\n                this.filterOrders();\r\n            }).catch(err => {\r\n                console.log(err);\r\n            });\r\n        }\r\n    }\r\n\r\n    editOrder(order) {\r\n        this.setState({ orderToEdit: order, showModal: true});\r\n    }\r\n\r\n    updateOrder(order) {\r\n        this.setState(prevState => ({\r\n            orders: prevState.orders.map((stateOrder) => {\r\n                return order.orderId === stateOrder._id? {...stateOrder, orderDetails: order.orderDetails, price: order.price, status: order.status, deliveryDate: order.deliveryDate, dispatchingDate: order.dispatchingDate, discountPercentage: order.discountPercentage} : stateOrder;\r\n            })\r\n        }), () => {\r\n            this.setOrdersShown()\r\n        });\r\n    }\r\n\r\n    changeCheckboxValue(index, event) {\r\n        if (index === -1) {\r\n            this.setState(prevState => ({\r\n                orders: prevState.orders.map((stateOrder) => {\r\n                    stateOrder['toDelete'] = prevState.checkAll? false : true;\r\n                    return stateOrder;\r\n                }), checkAll: !prevState.checkAll\r\n            }));\r\n            \r\n            return;\r\n        } else if (this.state.activePage > 1) {\r\n            index += ((this.state.activePage - 1) * this.state.itemsPerPage);\r\n        }\r\n        let orders = this.state.orders;\r\n        orders[index]['toDelete'] = event.target.checked;\r\n        this.setState({ orders });\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({ showModal: false, showModalInsert: false });\r\n    }\r\n\r\n    handleOrdersShown(orders, activePage) {\r\n        this.setState({ ordersShown: orders, activePage });\r\n    }\r\n\r\n    checkAllDelete() {\r\n        let orders = this.state.orders;\r\n        for (let i = 0; i < orders; i++) {\r\n            if (!orders[i]['toDelete']) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"row orders__container\">\r\n                <div className=\"col-md-10 offset-md-1\">\r\n                    <div className=\"orders__btn-container\">\r\n                        <button className=\"btn btn-info orders__btn\" onClick={this.insertOrder}>Insert</button>\r\n                        <button className=\"btn btn-danger orders__btn\" onClick={this.deleteOrders}>Delete</button>\r\n                    </div>\r\n                    <div className=\"alert alert-danger\" role=\"alert\" hidden={this.state.hideAlert}>\r\n                        { this.state.errMsg }\r\n                    </div>\r\n                    <table className=\"table table-bordered\">\r\n                        <thead className=\"thead-light\">\r\n                            <tr>\r\n                                <th>\r\n                                    <div className=\"form-group\">\r\n                                        <div className=\"custom-control custom-checkbox\">\r\n                                            <input className=\"custom-control-input\" id={ \"customCheckAll\" } type=\"checkbox\" checked={this.state.checkAll} onChange={(event) => this.changeCheckboxValue(-1, event)} />\r\n                                            <label className=\"custom-control-label\" htmlFor={ \"customCheckAll\" }></label>\r\n                                        </div>\r\n                                    </div>\r\n                                </th>\r\n                                <th>Customer</th>\r\n                                <th>Order #</th>\r\n                                <th>Order</th>\r\n                                <th>Price</th>\r\n                                <th className='sorting-columns' onClick={() => this.sortOrders(this.state.orders, !this.state.sortingDates.placingDate, 'placingDate')}>Placement Date</th>\r\n                                <th className='sorting-columns' onClick={() => this.sortOrders(this.state.orders, !this.state.sortingDates.dispatchingDate, 'dispatchingDate')}>Dispatching Date</th>\r\n                                <th className='sorting-columns' onClick={() => this.sortOrders(this.state.orders, !this.state.sortingDates.deliveryDate, 'deliveryDate')}>Delivery Date</th>\r\n                                <th>Status</th>\r\n                                <th>Edit</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                this.state.ordersShown.map((order, index) => {\r\n                                    return(\r\n                                        <tr key={ index } style={{ backgroundColor:  Number(order.discountPercentage) !== 0? '#dc3545' : \"#fff\", color: Number(order.discountPercentage) !== 0? '#fff' : '#000' }}>\r\n                                            <td>\r\n                                                <div className=\"form-group\">\r\n                                                    <div className=\"custom-control custom-checkbox\">\r\n                                                        <input className=\"custom-control-input\" id={ \"customCheck\" + index } type=\"checkbox\" checked={order['toDelete']} onChange={(event) => this.changeCheckboxValue(index, event)} />\r\n                                                        <label className=\"custom-control-label\" htmlFor={ \"customCheck\" + index }></label>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </td>\r\n                                            <td>{ order.customerId }</td>\r\n                                            <td>{ order.orderNumber }</td>\r\n                                            <td>\r\n                                                {\r\n                                                    order.orderDetails.map((orderDetail, i) => {\r\n                                                        return(\r\n                                                            <div key={ i }>{ orderDetail.quantity } x { orderDetail.code }</div>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </td>\r\n                                            <td>{ order.price } { Number(order.discountPercentage) !== 0? '(' + (order.discountPercentage) + '%)' : '' }</td>\r\n                                            <td>{ new Date(order.placingDate).toLocaleString() }</td>\r\n                                            <td>{ order.dispatchingDate === null || order.dispatchingDate === ''? '' : new Date(order.dispatchingDate).toLocaleString() }</td>\r\n                                            <td>{ order.deliveryDate === null || order.deliveryDate === ''? '' : new Date(order.deliveryDate).toLocaleString() }</td>\r\n                                            <td>{ order.status }</td>\r\n                                            <td>\r\n                                                <button className=\"btn btn-info\"  onClick={() => this.editOrder(order)}>Edit</button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                }) \r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                    {/* <button >Placement Date</button> */}\r\n                    <Paginator items={this.state.orders} itemsPerPage={this.state.itemsPerPage} handleItems={this.handleOrdersShown} />\r\n                    <OrderEdit showModal={this.state.showModal} order={this.state.orderToEdit} closeModal={this.closeModal} updateOrder={this.updateOrder}></OrderEdit>\r\n                    <OrderInsert showModalInsert={this.state.showModalInsert} closeModal={this.closeModal} getOrders={this.getAllOrders}></OrderInsert>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { insertProduct } from '../../lib/Api';\r\n\r\nexport default class ProductInsert extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleName = this.handleName.bind(this);\r\n        this.handleCode = this.handleCode.bind(this);\r\n        this.handlePrice = this.handlePrice.bind(this);\r\n        this.handleQuantity = this.handleQuantity.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.submitProduct = this.submitProduct.bind(this);\r\n        this.state = {\r\n            product: {},\r\n            errMsg: '',\r\n            hideAlert: true\r\n        }\r\n    }\r\n\r\n    handleName(event) {\r\n        const name = event.target.value;\r\n        this.setState(prevState => ({\r\n            product: {\r\n                ...prevState.product,\r\n                name   \r\n            }\r\n        }));\r\n    }\r\n\r\n    handleCode(event) {\r\n        const code = event.target.value;\r\n        this.setState(prevState => ({\r\n            product: {\r\n                ...prevState.product,\r\n                code  \r\n            }\r\n        }));\r\n    }\r\n\r\n    handlePrice(event) {\r\n        const price = event.target.value;\r\n        if (price > 0) {\r\n            this.setState(prevState => ({\r\n                product: {\r\n                    ...prevState.product,\r\n                    price\r\n                }\r\n            }));\r\n        }\r\n    }\r\n\r\n    handleQuantity(event) {\r\n        const quantity = event.target.value;\r\n        if (quantity > 0) {\r\n            this.setState(prevState => ({\r\n                product: {\r\n                    ...prevState.product,\r\n                    quantity\r\n                }\r\n            }));\r\n        }\r\n    }\r\n\r\n    submitProduct() {\r\n        let product = this.state.product;\r\n        if (product.name == null || product.code == null || product.price == null || product.quantity == null) {\r\n            this.setState({ errMsg: 'please fill all fields with valid values', hideAlert: false }, () => {\r\n                window.setTimeout(()=>{\r\n                  this.setState({ errMsg: '', hideAlert: true })\r\n                }, 4000)\r\n            });\r\n        } else {\r\n            insertProduct(product).then(res => {\r\n                this.props.getProducts();\r\n                this.props.closeModal();\r\n            }, err => {\r\n                if (err.response.data && !err.response.data.msg) {\r\n                    this.setState({ errMsg: 'The code should be in the form of one capital letter, one number, a dot then a series of numbers (A1.1)', hideAlert: false }, () => {\r\n                        window.setTimeout(()=>{\r\n                          this.setState({ errMsg: '', hideAlert: true })\r\n                        }, 7000)\r\n                    });\r\n                } else {\r\n                    this.setState({ errMsg: err.response.data.msg, hideAlert: false }, () => {\r\n                        window.setTimeout(()=>{\r\n                          this.setState({ errMsg: '', hideAlert: true })\r\n                        }, 4000)\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({ errMsg: '', hideAlert: true });\r\n        this.props.closeModal();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Modal isOpen={this.props.showModalInsert}>\r\n                        <ModalHeader>New Product</ModalHeader>\r\n                        <ModalBody>\r\n                        <div className=\"alert alert-danger\" role=\"alert\" hidden={this.state.hideAlert}>\r\n                            { this.state.errMsg }\r\n                        </div>\r\n                        <form>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Name:</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"productName\" placeholder=\"Name\" onChange={this.handleName} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Code:</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"productCode\" placeholder=\"Code\" onChange={this.handleCode} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Price:</label>\r\n                                    <input type=\"number\" className=\"form-control\" id=\"productPrice\" placeholder=\"Price\" onChange={this.handlePrice} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Quantity:</label>\r\n                                    <input type=\"number\" className=\"form-control\" id=\"productQuantity\" placeholder=\"Quantity\" onChange={this.handleQuantity} />\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <button type=\"submit\" className=\"btn btn-info\" onClick={(event) => this.submitProduct(event)}>Add Product</button>\r\n                            <button type=\"button\" className=\"btn btn-danger\" onClick={this.closeModal}>Cancel</button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport ProductInsert from '../ProductInsert/ProductInsert';\r\nimport Paginator from '../Paginatior/Paginatior';\r\n\r\nimport { getProducts, deleteProducts } from '../../lib/Api';\r\nimport { addDeleteCheckers } from '../../lib/helper_functions';\r\nimport './Product.css';\r\n\r\nexport default class Product extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.changeCheckboxValue = this.changeCheckboxValue.bind(this);\r\n        this.deleteProducts = this.deleteProducts.bind(this);\r\n        this.filterProducts = this.filterProducts.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.insertProduct = this.insertProduct.bind(this);\r\n        this.getAllProducts = this.getAllProducts.bind(this);\r\n        this.handleProductsShown = this.handleProductsShown.bind(this);\r\n        this.state = {\r\n            products: [],\r\n            showModal: false,\r\n            showModalInsert: false,\r\n            productsShown: [],\r\n            itemsPerPage: 7,\r\n            activePage: 1,\r\n            checkAll: false,\r\n            hideAlert: true,\r\n            errMsg: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllProducts();\r\n    }\r\n\r\n    insertProduct() {\r\n        this.setState({ showModalInsert: true });\r\n    }\r\n\r\n    getAllProducts() {\r\n        getProducts().then(res => {\r\n            if (res.data != null && res.data.products.length >= 1) {\r\n                this.setState({ products: addDeleteCheckers(res.data.products) });\r\n                const indexOfLastThing = this.state.activePage * this.state.itemsPerPage;\r\n                const indexOfFirstThing = indexOfLastThing - this.state.itemsPerPage;\r\n                this.setState({ productsShown: this.state.products.slice(indexOfFirstThing, indexOfLastThing) });\r\n            }\r\n        }).catch(err => {\r\n            console.log('err: ', err);\r\n        });\r\n    }\r\n\r\n    deleteProducts() {\r\n        const idsToDelete = [];\r\n        this.state.products.map((product) => {\r\n            if (product['toDelete']) { \r\n                idsToDelete.push(product.code);\r\n            }\r\n        });\r\n        for (let i = 0; i < idsToDelete.length; i++) {\r\n            deleteProducts(idsToDelete[i]).then(res => {\r\n                this.setState({ errMsg: `the product(s) selected are deleted successfully`, hideAlert: false }, () => {\r\n                    window.setTimeout(()=>{\r\n                      this.setState({ errMsg: '', hideAlert: true })\r\n                    }, 4000)\r\n                });\r\n                this.filterProducts();\r\n            }).catch(err => {\r\n                if(err.response.status === 403) {\r\n                    this.setState({ errMsg: 'this product is already associated with an order', hideAlert: false }, () => {\r\n                        window.setTimeout(()=>{\r\n                          this.setState({ errMsg: '', hideAlert: true })\r\n                        }, 4000)\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    filterProducts() {\r\n        let products = this.state.products;\r\n        let filteredProducts = products.filter(product => {\r\n            return !product['toDelete'];\r\n        });\r\n        const indexOfLastThing = this.state.activePage * this.state.itemsPerPage;\r\n        const indexOfFirstThing = indexOfLastThing - this.state.itemsPerPage;\r\n        this.setState({ products: filteredProducts, productsShown: filteredProducts.slice(indexOfFirstThing, indexOfLastThing) });\r\n    }\r\n\r\n    changeCheckboxValue(index, event) {\r\n        if (index === -1) {\r\n            this.setState(prevState => ({\r\n                products: prevState.products.map((stateProduct) => {\r\n                    stateProduct['toDelete'] = prevState.checkAll? false : true;\r\n                    return stateProduct;\r\n                }), checkAll: !prevState.checkAll\r\n            }));\r\n            \r\n            return;\r\n        } else if (this.state.activePage > 1) {\r\n            index += ((this.state.activePage - 1) * this.state.itemsPerPage);\r\n        }\r\n        let products = this.state.products;\r\n        products[index]['toDelete'] = event.target.checked;\r\n        this.setState({ products });\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({ showModal: false, showModalInsert: false });\r\n    }\r\n\r\n    handleProductsShown(products, activePage) {\r\n        this.setState({ productsShown: products, activePage });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"row products__container\">\r\n                <div className=\"col-md-10 offset-md-1\">\r\n                    <div className=\"products__btn-container\">\r\n                        <button className=\"btn btn-info products__btn\" onClick={this.insertProduct}>Insert</button>\r\n                        <button className=\"btn btn-danger products__btn\" onClick={this.deleteProducts}>Delete</button>\r\n                    </div>\r\n                    <div className=\"alert alert-danger\" role=\"alert\" hidden={this.state.hideAlert}>\r\n                        { this.state.errMsg }\r\n                    </div>\r\n                    <div>\r\n                        <table className=\"table table-bordered\">\r\n                            <thead className=\"thead-light\">\r\n                                <tr>\r\n                                    <th>\r\n                                        <div className=\"form-group\">\r\n                                            <div className=\"custom-control custom-checkbox\">\r\n                                                <input className=\"custom-control-input\" id={ \"customCheckAll\" } type=\"checkbox\" checked={this.state.checkAll} onChange={(event) => this.changeCheckboxValue(-1, event)} />\r\n                                                <label className=\"custom-control-label\" htmlFor={ \"customCheckAll\" }></label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </th>\r\n                                    <th>Name</th>\r\n                                    <th>Code</th>\r\n                                    <th>Price</th>\r\n                                    <th>Quantity</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    this.state.productsShown.map((product, index) => {\r\n                                        return(\r\n                                            <tr key={ index }>\r\n                                                <td>\r\n                                                    <div className=\"form-group\">\r\n                                                        <div className=\"custom-control custom-checkbox\">\r\n                                                            <input className=\"custom-control-input\" id={ \"customCheck\" + index } type=\"checkbox\" checked={product['toDelete']} onChange={(event) => this.changeCheckboxValue(index, event)} />\r\n                                                            <label className=\"custom-control-label\" htmlFor={ \"customCheck\" + index }></label>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </td>\r\n                                                <td>{ product.name }</td>\r\n                                                <td>{ product.code }</td>\r\n                                                <td>{ product.price }</td>\r\n                                                <td>{ product.availableToSell + ' / ' + product.quantity }</td>\r\n                                            </tr>\r\n                                        )\r\n                                    }) \r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n\r\n                    <Paginator items={this.state.products} itemsPerPage={this.state.itemsPerPage} handleItems={this.handleProductsShown} />\r\n\r\n                    <ProductInsert showModalInsert={this.state.showModalInsert} closeModal={this.closeModal} getProducts={this.getAllProducts}></ProductInsert>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { insertUser } from '../../lib/Api';\r\n\r\nexport default class UserInsert extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleName = this.handleName.bind(this);\r\n        this.handleInstagram = this.handleInstagram.bind(this);\r\n        this.handleEmail = this.handleEmail.bind(this);\r\n        this.handlePhone = this.handlePhone.bind(this);\r\n        this.handleAddress = this.handleAddress.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.submitUser = this.submitUser.bind(this);\r\n        this.state = {\r\n            user: {},\r\n            errMsg: '',\r\n            hideAlert: true\r\n        }\r\n    }\r\n\r\n    handleName(event) {\r\n        const name = event.target.value;\r\n        this.setState(prevState => ({\r\n            user: {\r\n                ...prevState.user,\r\n                name   \r\n            }\r\n        }));\r\n    }\r\n\r\n    handleInstagram(event) {\r\n        const instagramUsername = event.target.value;\r\n        this.setState(prevState => ({\r\n            user: {\r\n                ...prevState.user,\r\n                instagramUsername  \r\n            }\r\n        }));\r\n    }\r\n\r\n    handleEmail(event) {\r\n        const email = event.target.value;\r\n        this.setState(prevState => ({\r\n            user: {\r\n                ...prevState.user,\r\n                email\r\n            }\r\n        }));\r\n    }\r\n\r\n    handlePhone(event) {\r\n        const phone = event.target.value;\r\n        if (phone.match(/^\\+[0-9]{12,13}$/g) != null) {\r\n            this.setState(prevState => ({\r\n                user: {\r\n                    ...prevState.user,\r\n                    phone\r\n                }\r\n            }));\r\n        } else {\r\n            this.setState({ errMsg: 'phone number must start with \"+\", followed by 12-13 digits', hideAlert: false }, () => {\r\n                window.setTimeout(()=>{\r\n                  this.setState({ errMsg: '', hideAlert: true })\r\n                }, 4000)\r\n            });\r\n        }\r\n    }\r\n\r\n    handleAddress(event) {\r\n        const address = event.target.value;\r\n        this.setState(prevState => ({\r\n            user: {\r\n                ...prevState.user,\r\n                address\r\n            }\r\n        }));\r\n    }\r\n\r\n    submitUser() {\r\n        let user = this.state.user;\r\n        if (this.state.hideAlert === true) {\r\n            insertUser(user).then(res => {\r\n                this.props.getUsers();\r\n                this.props.closeModal();\r\n            }, err => {\r\n                if (typeof err.response.data == 'object') {\r\n                    this.setState({ errMsg: err.response.data.msg, hideAlert: false }, () => {\r\n                        window.setTimeout(()=>{\r\n                          this.setState({ errMsg: '', hideAlert: true })\r\n                        }, 4000)\r\n                    });\r\n                    \r\n                } else {\r\n                    this.setState({ errMsg: err.response.data, hideAlert: false }, () => {\r\n                        window.setTimeout(()=>{\r\n                          this.setState({ errMsg: '', hideAlert: true })\r\n                        }, 4000)\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({ errMsg: '', hideAlert: true });\r\n        this.props.closeModal();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Modal isOpen={this.props.showModalInsert}>\r\n                        <ModalHeader>New User</ModalHeader>\r\n                        <ModalBody>\r\n                        <div className=\"alert alert-danger\" role=\"alert\" hidden={this.state.hideAlert}>\r\n                            { this.state.errMsg }\r\n                        </div>\r\n                        <form>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Name:</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"userName\" placeholder=\"Enter Your Name\" onChange={this.handleName} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Instagram Username:</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"userInstagram\" placeholder=\"Enter Your Instagram Username\" onChange={this.handleInstagram} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Email:</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"userEmail\" placeholder=\"Enter Your Email\" onChange={this.handleEmail} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Phone:</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"userPhone\" placeholder=\"Enter Your Phone\" onChange={this.handlePhone} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Address:</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"userAddress\" placeholder=\"Enter Your Address\" onChange={this.handleAddress} />\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <button type=\"submit\" className=\"btn btn-info\" onClick={(event) => this.submitUser(event)}>Add User</button>\r\n                            <button type=\"button\" className=\"btn btn-danger\" onClick={this.closeModal}>Cancel</button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport UserInsert from '../UserInsert/UserInsert';\r\nimport Paginator from '../Paginatior/Paginatior';\r\n\r\nimport { getUsers, deleteUsers } from '../../lib/Api';\r\nimport { addDeleteCheckers } from '../../lib/helper_functions';\r\n\r\nimport './User.css';\r\n\r\nexport default class User extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.changeCheckboxValue = this.changeCheckboxValue.bind(this);\r\n        this.deleteUsers = this.deleteUsers.bind(this);\r\n        this.filterUsers = this.filterUsers.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.insertUser = this.insertUser.bind(this);\r\n        this.getAllUsers = this.getAllUsers.bind(this);\r\n        this.handleUsersShown = this.handleUsersShown.bind(this);\r\n        this.state = {\r\n            users: [],\r\n            showModalInsert: false,\r\n            itemsPerPage: 7,\r\n            activePage: 1,\r\n            usersShown: [],\r\n            checkAll: false,\r\n            hideAlert: true,\r\n            errMsg: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllUsers();\r\n    }\r\n\r\n    getAllUsers() {\r\n        getUsers().then(res => {\r\n            if (res.data != null && res.data.users.length >= 1) {\r\n                this.setState({ users: addDeleteCheckers(res.data.users) });\r\n                const indexOfLastThing = this.state.activePage * this.state.itemsPerPage;\r\n                const indexOfFirstThing = indexOfLastThing - this.state.itemsPerPage;\r\n                this.setState({ usersShown: this.state.users.slice(indexOfFirstThing, indexOfLastThing) });\r\n            }\r\n        }).catch(err => {\r\n            console.log('err: ', err);\r\n        });\r\n    }\r\n\r\n    changeCheckboxValue(index, event) {\r\n        if (index === -1) {\r\n            this.setState(prevState => ({\r\n                users: prevState.users.map((stateUser) => {\r\n                    stateUser['toDelete'] = prevState.checkAll? false : true;\r\n                    return stateUser;\r\n                }), checkAll: !prevState.checkAll\r\n            }));\r\n            \r\n            return;\r\n        } else if (this.state.activePage > 1) {\r\n            index += ((this.state.activePage - 1) * this.state.itemsPerPage);\r\n        }\r\n        let users = this.state.users;\r\n        users[index]['toDelete'] = event.target.checked;\r\n        this.setState({ users });\r\n    }\r\n\r\n    deleteUsers() {\r\n        const idsToDelete = [];\r\n        this.state.users.map((user) => {\r\n            if (user['toDelete']) { \r\n                idsToDelete.push(user.instagramUsername);\r\n            }\r\n        });\r\n        for (let i = 0; i < idsToDelete.length; i++) {\r\n            deleteUsers(idsToDelete[i]).then(res => {\r\n                this.setState({ errMsg: `the user(s) selected are deleted successfully`, hideAlert: false }, () => {\r\n                    window.setTimeout(()=>{\r\n                      this.setState({ errMsg: '', hideAlert: true })\r\n                    }, 4000)\r\n                });\r\n                this.filterUsers();\r\n            }).catch(err => {\r\n                if(err.response.status === 403) {\r\n                    this.setState({ errMsg: 'this user is already associated with an order', hideAlert: false }, () => {\r\n                        window.setTimeout(()=>{\r\n                          this.setState({ errMsg: '', hideAlert: true })\r\n                        }, 4000)\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    filterUsers() {\r\n        let users = this.state.users;\r\n        let filteredUsers = users.filter(user => {\r\n            return !user['toDelete'];\r\n        });\r\n        const indexOfLastThing = this.state.activePage * this.state.itemsPerPage;\r\n        const indexOfFirstThing = indexOfLastThing - this.state.itemsPerPage;\r\n        this.setState({ users: filteredUsers, usersShown: filteredUsers.slice(indexOfFirstThing, indexOfLastThing) });\r\n    }\r\n\r\n    insertUser() {\r\n        this.setState({ showModalInsert: true });\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({ showModalInsert: false });\r\n    }\r\n\r\n    handleUsersShown(users, activePage) {\r\n        this.setState({ usersShown: users, activePage });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"row users__container\">\r\n                <div className=\"col-md-10 offset-md-1\">\r\n                    <div className=\"users__btn-container\">\r\n                        <button className=\"btn btn-info users__btn\" onClick={this.insertUser}>Insert</button>\r\n                        <button className=\"btn btn-danger users__btn\" onClick={this.deleteUsers}>Delete</button>\r\n                    </div>\r\n                    <div className=\"alert alert-danger\" role=\"alert\" hidden={this.state.hideAlert}>\r\n                        { this.state.errMsg }\r\n                    </div>\r\n                    <div>\r\n                        <table className=\"table table-bordered\">\r\n                            <thead className=\"thead-light\">\r\n                                <tr>\r\n                                    <th>\r\n                                        <div className=\"form-group\">\r\n                                            <div className=\"custom-control custom-checkbox\">\r\n                                                <input className=\"custom-control-input\" id={ \"customCheckAll\" } type=\"checkbox\" checked={this.state.checkAll} onChange={(event) => this.changeCheckboxValue(-1, event)} />\r\n                                                <label className=\"custom-control-label\" htmlFor={ \"customCheckAll\" }></label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </th>\r\n                                    <th>Name</th>\r\n                                    <th>Instagram Username</th>\r\n                                    <th>Email</th>\r\n                                    <th>Phone</th>\r\n                                    <th>Address</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    this.state.usersShown.map((user, index) => {\r\n                                        return(\r\n                                            <tr key={ index }>\r\n                                                <td>\r\n                                                    <div className=\"form-group\">\r\n                                                        <div className=\"custom-control custom-checkbox\">\r\n                                                            <input className=\"custom-control-input\" id={ \"customCheck\" + index } type=\"checkbox\" checked={user['toDelete']} onChange={(event) => this.changeCheckboxValue(index, event)} />\r\n                                                            <label className=\"custom-control-label\" htmlFor={ \"customCheck\" + index }></label>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </td>\r\n                                                <td>{ user.name }</td>\r\n                                                <td>{ user.instagramUsername }</td>\r\n                                                <td>{ user.email }</td>\r\n                                                <td>{ user.phone }</td>\r\n                                                <td>{ user.address }</td>\r\n                                            </tr>\r\n                                        )\r\n                                    }) \r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <Paginator items={this.state.users} itemsPerPage={this.state.itemsPerPage} handleItems={this.handleUsersShown} />\r\n                    <UserInsert showModalInsert={this.state.showModalInsert} closeModal={this.closeModal} getUsers={this.getAllUsers}></UserInsert>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { tokenExpired } from './lib/helper_functions';\r\n\r\nconst AuthenticatedRoute = ({ component: Component, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={props => \r\n            localStorage.getItem('token') && !tokenExpired()? (\r\n                <Component {...props} />\r\n            ) : (\r\n                <Redirect exact \r\n                    to={{\r\n                        pathname: '/',\r\n                        state: { from: props.location }\r\n                    }}\r\n                />\r\n            )\r\n        }\r\n    />\r\n);\r\n\r\nexport default AuthenticatedRoute;","import React from 'react';\r\nimport { getRevenue } from '../../lib/Api';\r\nimport Header from '../Header/Header';\r\n\r\nimport './Revenue.css';\r\n\r\nexport default class Revenue extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            total: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        getRevenue().then(res => {\r\n            this.setState({ total: res.data.result[0].total });\r\n        }).catch(err => {\r\n            console.log('err: ', err);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Header></Header>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-4 offset-md-4 revenue__container\">\r\n                        <div className=\"revenue__content\">\r\n                            Revenue <br/ >\r\n                            {this.state.total} L.E.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Dashboard from './components/Dashboard/Dashboard';\nimport Order from './components/Order/Order';\nimport Product from './components/Product/Product';\nimport User from './components/User/User';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport AuthenticatedRoute from './AuthenticatedRoute';\nimport Revenue from './components/Revenue/Revenue';\n\nimport { Route, BrowserRouter as Router } from 'react-router-dom';\n\n\nconst routing = (\n    <div>\n        <Router>\n            <div>\n                <Route exact path=\"/\" component={App} />\n                <AuthenticatedRoute path=\"/dashboard\" component={() => <Dashboard first=\"/dashboard/orders\" second=\"/dashboard/products\" third=\"/dashboard/users\" />} />\n                <AuthenticatedRoute path=\"/dashboard/orders\" component={Order} />\n                <AuthenticatedRoute path=\"/dashboard/products\" component={Product} />\n                <AuthenticatedRoute path=\"/dashboard/users\" component={User} />\n                {/* <AuthenticatedRoute path=\"/analytics\" component={() => <Dashboard first=\"/analytics/revenue\" second=\"/\" third=\"/\" />} /> */}\n                <AuthenticatedRoute path=\"/analytics/revenue\" component={Revenue} />\n            </div>\n        </Router>\n    </div>\n)\n\nReactDOM.render(routing, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}