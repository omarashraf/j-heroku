{"version":3,"sources":["components/Header/Header.js","constants.js","lib/Api.js","components/Authentication/Authentication.js","App.js","components/Dashboard/Dashboard.js","components/OrderEdit/OrderEdit.js","components/OrderInsert/OrderInsert.js","components/Paginatior/Paginatior.js","lib/helper_functions.js","components/Order/Order.js","components/ProductInsert/ProductInsert.js","components/Product/Product.js","components/UserInsert/UserInsert.js","components/User/User.js","serviceWorker.js","AuthenticatedRoute.js","index.js"],"names":["Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","logout","bind","assertThisInitialized","state","localStorage","removeItem","getItem","react_default","a","createElement","className","href","style","color","react_router_dom","textDecoration","to","onClick","React","Component","API_URL","getHeaders","headers","x-access-token","deleteOrders","idToDelete","axios","delete","Constants","getProducts","get","deleteProducts","getUsers","deleteUsers","Authentication","handleUsername","handlePassword","submitForm","username","password","errMsg","hideAlert","redirectToDashboard","event","setState","target","value","_this2","preventDefault","authBody","post","authenticateAdmin","then","res","setItem","data","catch","err","response","msg","react_router","onSubmit","role","hidden","type","placeholder","onChange","autoComplete","App","Header_Header_Header","Authentication_Authentication_Authentication","Dashboard","activeStyle","backgroundColor","aria-label","OrderEdit","editOrder","handleQuantity","handleCode","initOrderDetails","handleStatus","handleDiscountChange","handleDiscountAmount","handleDiscountRemove","products","orderDetails","status","deliveryDate","dispatchingDate","checked","discountAmount","checkedDiscountRemove","length","console","log","discountPercentage","_this3","editedOrderDetails","i","order","quantity","code","editOrderBody","orderId","_id","patch","price","updateOrder","closeModal","index","id","ordersSize","newOrderDetails","newQuantity","Number","prevState","map","orderDetail","pointer","objectSpread","newCode","handleQuantityHelper","handleCodeHelper","Date","now","_this4","content","removeDiscount","htmlFor","showModal","Modal","isOpen","ModalHeader","ModalBody","key","product","ModalFooter","OrderInsert","addOrderDetail","removeSelect","handleUser","getAllProducts","getAllUsers","filterUsernames","setFilterUsernames","users","selects","selectedUser","usernames","label","instagramUsername","concat","toConsumableArray","newSelects","splice","select","selectedOption","customerId","insertOrder","getOrders","_this5","filterUsername","filter","user","includes","_this6","instagramUsernamel","showModalInsert","react_select_browser_esm","options","index_es","icon","faTimes","submitOrder","Paginatior","handlePageChange","activePage","itemsPerPage","items","pageNumber","indexOfLastThing","indexOfFirstThing","itemsShown","slice","handleItems","Pagination_default","innerClass","totalItemsCount","itemsCountPerPage","itemClass","activeClass","hideNavigation","linkClass","activeLinkClass","addDeleteCheckers","formulateOrderNumber","date","dateSpliited","toLocaleDateString","split","timeSpliited","toLocaleTimeString","Order","changeCheckboxValue","filterOrders","getAllOrders","handleOrdersShown","checkAllDelete","setOrdersShown","orders","orderToEdit","ordersShown","checkAll","filteredOrders","idsToDelete","push","stateOrder","orderNumber","placingDate","toLocaleString","Paginatior_Paginatior_Paginatior","OrderEdit_OrderEdit_OrderEdit","OrderInsert_OrderInsert_OrderInsert","ProductInsert","handleName","handlePrice","submitProduct","name","insertProduct","Product","filterProducts","handleProductsShown","productsShown","filteredProducts","stateProduct","ProductInsert_ProductInsert","UserInsert","handleInstagram","handleEmail","handlePhone","handleAddress","submitUser","email","phone","address","insertUser","User","filterUsers","handleUsersShown","usersShown","stateUser","filteredUsers","UserInsert_UserInsert","Boolean","window","location","hostname","match","AuthenticatedRoute","_ref","component","rest","objectWithoutProperties","assign","render","JWT","exp","exact","pathname","from","routing","path","src_AuthenticatedRoute","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.09539c75.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Header.css';\r\n\r\nexport default class Header extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.logout = this.logout.bind(this);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    logout() {\r\n        localStorage.removeItem('token');\r\n    }\r\n\r\n    render() {\r\n        if (localStorage.getItem('token') === '' || localStorage.getItem('token') === null) {\r\n            return (\r\n                <div className=\"header__main\">\r\n                    <nav className=\"navbar fixed-top navbar-light bg-info\">\r\n                        <a className=\"navbar-brand\" href=\"#!\" style={{ color: '#fff' }}>Jawareb</a>\r\n                    </nav>\r\n                </div>\r\n                \r\n            )\r\n        } else {\r\n            return (\r\n                <div className=\"header__main\">\r\n                    <nav className=\"navbar fixed-top navbar-light bg-info\">\r\n                        <a className=\"navbar-brand\" href=\"#!\" style={{ color: '#fff' }}>Jawareb</a>\r\n                        <Link style={{ color: '#fff', textDecoration: 'none' }} to=\"/\" onClick={this.logout} >\r\n                            Logout\r\n                        </Link>\r\n                    </nav>\r\n                </div>\r\n                \r\n            )\r\n        }\r\n    }\r\n}","// const PORT = process.env.PORT || 3001;\r\n// export const API_URL='http://localhost:3001';\r\nexport const API_URL= 'https://jawareb.herokuapp.com';","import axios from 'axios';\r\nimport * as Constants from '../constants';\r\n\r\nconst getHeaders = () => {\r\n    const headers = {\r\n        headers: {\r\n            'x-access-token': localStorage.getItem('token')\r\n        }\r\n    };\r\n    return headers;  \r\n}\r\n\r\nexport const getOrders = () => {\r\n    const headers = getHeaders();\r\n    return axios.get(Constants.API_URL + '/order', headers);\r\n};\r\n\r\nexport const insertOrder = (order) => {\r\n    const headers = getHeaders();\r\n    return axios.post(Constants.API_URL + '/order', order, headers)\r\n};\r\n\r\nexport const deleteOrders = (idToDelete) => {\r\n    const headers = getHeaders();\r\n    return axios.delete(Constants.API_URL + '/order/' + idToDelete, headers);\r\n}\r\n\r\nexport const editOrder = (editOrderBody) => {\r\n    const headers = getHeaders();\r\n    return axios.patch(Constants.API_URL + '/order', editOrderBody, headers);\r\n}\r\n\r\nexport const getProducts = () => {\r\n    const headers = getHeaders();\r\n    return axios.get(Constants.API_URL + '/product', headers);\r\n}\r\n\r\nexport const insertProduct = (product) => {\r\n    const headers = getHeaders();\r\n    return axios.post(Constants.API_URL + '/product', product, headers)\r\n};\r\n\r\nexport const deleteProducts = (idToDelete) => {\r\n    const headers = getHeaders();\r\n    return axios.delete(Constants.API_URL + '/product/' + idToDelete, headers);\r\n}\r\n\r\nexport const getUsers = () => {\r\n    const headers = getHeaders();\r\n    return axios.get(Constants.API_URL + '/user', headers);\r\n}\r\n\r\nexport const insertUser = (user) => {\r\n    const headers = getHeaders();\r\n    return axios.post(Constants.API_URL + '/user', user, headers)\r\n};\r\n\r\nexport const deleteUsers = (idToDelete) => {\r\n    const headers = getHeaders();\r\n    return axios.delete(Constants.API_URL + '/user/' + idToDelete, headers);\r\n}\r\n\r\nexport const authenticateAdmin = (authBody) => {\r\n    return  axios.post(Constants.API_URL + '/auth', authBody);\r\n}","import React from 'react';\r\nimport { authenticateAdmin } from '../../lib/Api';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport './Authentication.css';\r\n\r\nexport default class Authentication extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleUsername = this.handleUsername.bind(this);\r\n        this.handlePassword = this.handlePassword.bind(this);\r\n        this.submitForm = this.submitForm.bind(this);\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            errMsg: '',\r\n            hideAlert: true,\r\n            redirectToDashboard: false\r\n        };\r\n    }\r\n\r\n    handleUsername(event) {\r\n        this.setState({ username: event.target.value });\r\n    }\r\n\r\n    handlePassword(event) {\r\n        this.setState({ password: event.target.value });\r\n    }\r\n\r\n    submitForm(event) {\r\n        event.preventDefault();\r\n        if (this.state.username !== '' && this.state.password !== '') {\r\n            let authBody = {\r\n                username: this.state.username,\r\n                password: this.state.password\r\n            }\r\n            authenticateAdmin(authBody).then(res => {\r\n                localStorage.setItem('token', res.data);\r\n                this.setState({ errMsg: '', hideAlert: true, redirectToDashboard: true });\r\n            }).catch(err => {\r\n                if (err.response) {\r\n                    if (typeof err.response.data == 'object') {\r\n                        this.setState({ errMsg: err.response.data.msg, hideAlert: false });\r\n                    } else {\r\n                        this.setState({ errMsg: err.response.data, hideAlert: false });\r\n                    }\r\n                } else {\r\n                    this.setState({ errMsg: err.response, hideAlert: false });\r\n                }\r\n            });\r\n        } else {\r\n            this.setState({ errMsg: 'username and password can\\'t be empty', hideAlert: false });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.redirectToDashboard) {\r\n            return <Redirect to=\"/dashboard\" />\r\n        }\r\n        return(\r\n            <div className=\"row auth__main-container\">\r\n                <div className=\"col-md-8 auth__left-container\"></div>\r\n                <div className=\"col-md-4 auth__right-container\">\r\n                    <div className=\"auth__login-form\">\r\n                        <form onSubmit={this.submitForm}>\r\n                            <h4>Jawareb Admin Portal</h4>\r\n                            <div className=\"alert alert-danger\" role=\"alert\" hidden={this.state.hideAlert}>\r\n                                { this.state.errMsg }\r\n                            </div>\r\n                            <div className=\"auth__login-form-control\">\r\n                                <input type=\"text\" className=\"form-control\" placeholder=\"Username\" onChange={this.handleUsername} autoComplete=\"new-password\" />\r\n                            </div>\r\n                            <div className=\"auth__login-form-control\">\r\n                                <input type=\"password\" className=\"form-control\" placeholder=\"Password\" onChange={this.handlePassword} autoComplete=\"new-password\" />\r\n                            </div>\r\n                            <div className=\"auth__login-button\">\r\n                                <input type=\"submit\" className=\"btn btn-info\" value=\"Login\" />\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport Authentication from './components/Authentication/Authentication';\n\nfunction App() {\n\n  return (\n      <div className=\"App\">\n        <Header></Header>\n        <Authentication></Authentication>\n      </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Header from '../Header/Header';\r\n\r\nimport './Dashboard.css';\r\n\r\nexport default class Dashboard extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeStyle: { backgroundColor: '#555', color: '#fff' },\r\n            style: { backgroundColor: '#e9ecef' }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Header></Header>\r\n                <div className=\"dashboard__container\">\r\n                    <div className=\"btn-group btn-group-lg\" role=\"group\" aria-label=\"Basic example\">\r\n                        <NavLink className=\"btn\" to=\"/dashboard/orders\" activeStyle={ this.state.activeStyle } style={ this.state.style }>\r\n                            Orders\r\n                        </NavLink>\r\n                        <NavLink className=\"btn\" to=\"/dashboard/products\" activeStyle={this.state.activeStyle} style={ this.state.style }>\r\n                            Products\r\n                        </NavLink>\r\n                        <NavLink className=\"btn\" to=\"/dashboard/users\" activeStyle={this.state.activeStyle} style={ this.state.style }>\r\n                            Users\r\n                        </NavLink>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { getProducts, editOrder } from '../../lib/Api';\r\n\r\nimport './OrderEdit.css';\r\n\r\nexport default class OrderEdit extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.editOrder = this.editOrder.bind(this);\r\n        this.handleQuantity = this.handleQuantity.bind(this);\r\n        this.handleCode = this.handleCode.bind(this);\r\n        this.initOrderDetails = this.initOrderDetails.bind(this);\r\n        this.handleStatus = this.handleStatus.bind(this);\r\n        this.handleDiscountChange = this.handleDiscountChange.bind(this);\r\n        this.handleDiscountAmount = this.handleDiscountAmount.bind(this);\r\n        this.handleDiscountRemove = this.handleDiscountRemove.bind(this);\r\n        this.state = {\r\n            products: [],\r\n            orderDetails: [],\r\n            status: '',\r\n            deliveryDate: '',\r\n            dispatchingDate: '',\r\n            checked: false,\r\n            discountAmount: '0',\r\n            checkedDiscountRemove: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        getProducts().then(res => {\r\n            if (res.data != null && res.data.products.length >= 1) {\r\n                this.setState({ products: res.data.products });\r\n            }\r\n        }).catch(err => {\r\n            console.log('err: ', err);\r\n        });\r\n    }\r\n\r\n    editOrder() {\r\n        let editedOrderDetails = [];\r\n        if (this.state.orderDetails.length === 0) {\r\n            for (let i = 0; i < this.props.order.orderDetails.length; i++) {\r\n                editedOrderDetails[i] = { quantity: this.props.order.orderDetails[i].quantity, code: this.props.order.orderDetails[i].code }\r\n            }\r\n        } else {\r\n            editedOrderDetails = this.state.orderDetails;\r\n            for (let i = 0; i < editedOrderDetails.length; i++) {\r\n                if (editedOrderDetails[i].quantity === '' || editedOrderDetails[i].quantity == null) {\r\n                    editedOrderDetails[i].quantity = this.props.order.orderDetails[i].quantity;\r\n                }\r\n                if (editedOrderDetails[i].code === '' || editedOrderDetails[i].code == null) {\r\n                    editedOrderDetails[i].code = this.props.order.orderDetails[i].code;\r\n                }\r\n            }\r\n        }\r\n\r\n        let discountPercentage;\r\n        if (this.state.checkedDiscountRemove) {\r\n            discountPercentage = '0';\r\n        } else if (this.state.checked) {\r\n            discountPercentage = this.state.discountAmount;\r\n        } else {\r\n            discountPercentage = this.props.order.discountPercentage;\r\n        }\r\n        console.log(this.props.order);\r\n\r\n        let editOrderBody = {\r\n            orderDetails: editedOrderDetails,\r\n            status: this.state.status === ''? this.props.order.status : this.state.status,\r\n            orderId: this.props.order._id,\r\n            deliveryDate: this.state.deliveryDate,\r\n            dispatchingDate: this.state.dispatchingDate,\r\n            discountPercentage\r\n        }\r\n\r\n        editOrder(editOrderBody).then(res => {\r\n            editOrderBody['price'] = res.data.order.price;\r\n            this.props.updateOrder(editOrderBody);\r\n            this.props.closeModal();\r\n            this.setState({\r\n                orderDetails: [],\r\n                status: '',\r\n                checked: false,\r\n                checkedDiscountRemove: false\r\n            });\r\n        }, err => {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    initOrderDetails(index, event, id) {\r\n        let ordersSize = this.props.order.orderDetails.length;\r\n        let newOrderDetails = []\r\n        for (let i = 0; i < ordersSize; i++) {\r\n            newOrderDetails[i] = { quantity: this.props.order.orderDetails[i].quantity, code: this.props.order.orderDetails[i].code }\r\n        };\r\n        if (id === 'quantity') {\r\n            let newQuantity = Number(event.target.value);\r\n            this.setState(prevState => ({\r\n                orderDetails: newOrderDetails.map((orderDetail, pointer) => {\r\n                    return pointer === index? {...orderDetail, quantity: newQuantity} : orderDetail;\r\n                })\r\n            }));\r\n        } else {\r\n            let newCode = event.target.value;\r\n            this.setState(prevState => ({\r\n                orderDetails: newOrderDetails.map((orderDetail, pointer) => {\r\n                    return pointer === index? {...orderDetail, code: newCode} : orderDetail;\r\n                })\r\n            }));\r\n        }\r\n    }\r\n\r\n    handleQuantity(i, event) {\r\n        if (this.state.orderDetails.length === 0) {\r\n            this.initOrderDetails(i, event, 'quantity');\r\n        } else {\r\n            this.handleQuantityHelper(i, event.target.value);\r\n        }\r\n    }\r\n\r\n    handleQuantityHelper(i, newQuantity) {\r\n        this.setState(prevState => ({\r\n            orderDetails: prevState.orderDetails.map((orderDetail, index) => {\r\n                return index === i? { ...orderDetail, quantity: Number(newQuantity) } : orderDetail;\r\n            })\r\n        }));\r\n    }\r\n\r\n    handleCode(i, event) {\r\n        if (this.state.orderDetails.length === 0) {\r\n            this.initOrderDetails(i, event, 'code');\r\n        } else {\r\n            this.handleCodeHelper(i, event.target.value);\r\n        }\r\n    }\r\n\r\n    handleCodeHelper(i, newCode) {\r\n        this.setState(prevState => ({\r\n            orderDetails: prevState.orderDetails.map((orderDetail, index) => {\r\n                return index === i? { ...orderDetail, code: newCode } : orderDetail;\r\n            })\r\n        }));\r\n    }\r\n\r\n    handleStatus(event) {\r\n        if (event.target.value === 'done') {\r\n            this.setState({ status: event.target.value, deliveryDate: Date(Date.now) });\r\n        } else if (event.target.value === 'dispatched') {\r\n            this.setState({ status: event.target.value, dispatchingDate: Date(Date.now), deliveryDate: '' });\r\n        } else {\r\n            this.setState({ status: event.target.value, dispatchingDate: '', deliveryDate: '' });\r\n        }\r\n    }\r\n\r\n    handleDiscountChange() {\r\n        this.setState({ checked: !this.state.checked, checkedDiscountRemove: false });\r\n    }\r\n\r\n    handleDiscountAmount(event) {\r\n        this.setState({ discountAmount: event.target.value });\r\n    }\r\n\r\n    handleDiscountRemove() {\r\n        this.setState({ checkedDiscountRemove: !this.state.checkedDiscountRemove, checked: false });\r\n    }\r\n\r\n    render() {\r\n        if (this.props.order.orderDetails) {\r\n            const content = this.state.checked \r\n                ? <div className=\"form-group\">\r\n                    <div className=\"form-group\">\r\n                        <label>Discount:</label>\r\n                        <input type=\"number\" className=\"form-control\" id=\"discount\" placeholder=\"Discount Percentage\" onChange={this.handleDiscountAmount} />\r\n                    </div>\r\n                  </div>\r\n                : null;\r\n            const removeDiscount = this.props.order.discountPercentage !== \"0\"\r\n                ? <div className=\"form-group\">\r\n                    <div className=\"custom-control custom-checkbox\">\r\n                        <input className=\"custom-control-input\" id=\"removeDiscountCheck\" type=\"checkbox\" checked={ this.state.checkedDiscountRemove } onChange={ this.handleDiscountRemove } />\r\n                        <label className=\"custom-control-label\" htmlFor=\"removeDiscountCheck\">Remove discount</label>\r\n                    </div>\r\n                </div>\r\n                : null;\r\n            return(\r\n                <div>\r\n                    { (this.props.showModal) ? \r\n                        <Modal isOpen={this.props.showModal}>\r\n                            <ModalHeader>Existing Order</ModalHeader>\r\n                            <ModalBody>\r\n                                <form>\r\n                                    {\r\n                                        this.props.order.orderDetails.map((orderDetail, index) => {\r\n                                            return(\r\n                                                <div className=\"row\" key={index}>\r\n                                                    <div className=\"col-md-3\">Sub-order { index + 1 }:</div>\r\n                                                    <div className=\"form-group col-md-4\">\r\n                                                        <select className=\"custom-select\" value={this.state.orderDetails[index]? this.state.orderDetails[index].quantity : orderDetail.quantity} onChange={(event) => this.handleQuantity(index, event)}>\r\n                                                            <option>1</option>\r\n                                                            <option>2</option>\r\n                                                            <option>3</option>\r\n                                                            <option>4</option>\r\n                                                            <option>5</option>\r\n                                                            <option>6</option>\r\n                                                            <option>7</option>\r\n                                                            <option>8</option>\r\n                                                            <option>9</option>\r\n                                                        </select>\r\n                                                    </div>\r\n                                                    <div className=\"form-group col-md-4\">\r\n                                                        <select className=\"custom-select\" value={this.state.orderDetails[index]? this.state.orderDetails[index].code : orderDetail.code} onChange={(event) => this.handleCode(index, event)}>\r\n                                                            {\r\n                                                                this.state.products.map((product, i) => {\r\n                                                                    return <option key={i}>{product.code}</option>\r\n                                                                })\r\n                                                            }\r\n                                                        </select>\r\n                                                    </div>\r\n                                                </div>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                    <hr />\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-3\">Status:</div>\r\n                                        <div className=\"col-md-4 form-group\">\r\n                                            <select className=\"custom-select\" value={this.state.status === ''? this.props.order.status : this.state.status} onChange={(event) => this.handleStatus(event)}>\r\n                                                <option value=\"pending\">pending</option>\r\n                                                <option value=\"dispatched\">dispatched</option>\r\n                                                <option value=\"done\">done</option>\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n                                    <hr />\r\n                                    <div className=\"form-group\">\r\n                                        <div className=\"custom-control custom-checkbox\">\r\n                                            <input className=\"custom-control-input\" id=\"customCheck\" type=\"checkbox\" checked={ this.state.checked } onChange={ this.handleDiscountChange } />\r\n                                            <label className=\"custom-control-label\" htmlFor=\"customCheck\">Apply discount</label>\r\n                                        </div>\r\n                                    </div>\r\n                                    { content }\r\n                                    <hr />\r\n                                    { removeDiscount }\r\n                                </form>\r\n                            </ModalBody>\r\n                            <ModalFooter>\r\n                                <button type=\"submit\" className=\"btn btn-info\" onClick={this.editOrder}>Edit</button>\r\n                                <button className=\"btn btn-danger\" onClick={(event) => this.props.closeModal(event)}>Cancel</button>\r\n                            </ModalFooter>\r\n                        </Modal>\r\n                    : null }\r\n                </div>\r\n            );\r\n        } else {\r\n            return null;\r\n        }\r\n       \r\n    }\r\n}","import React from 'react';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { getProducts, getUsers, insertOrder } from '../../lib/Api';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport Select from 'react-select';\r\n\r\nimport './OrderInsert.css';\r\n\r\nexport default class OrderInsert extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.addOrderDetail = this.addOrderDetail.bind(this);\r\n        this.removeSelect = this.removeSelect.bind(this);\r\n        this.handleCode = this.handleCode.bind(this);\r\n        this.handleQuantity = this.handleQuantity.bind(this);\r\n        this.handleUser = this.handleUser.bind(this);\r\n        this.getAllProducts = this.getAllProducts.bind(this);\r\n        this.getAllUsers = this.getAllUsers.bind(this);\r\n        this.filterUsernames = this.filterUsernames.bind(this);\r\n        this.setFilterUsernames = this.setFilterUsernames.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.state = {\r\n            users: [],\r\n            products: [],\r\n            order: {},\r\n            selects: [],\r\n            filterUsernames: [],\r\n            selectedUser: null,\r\n            errMsg: '',\r\n            hideAlert: true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllProducts();\r\n        this.getAllUsers();\r\n    }\r\n\r\n    getAllUsers() {\r\n        getUsers().then(res => {\r\n            if (res.data != null && res.data.users.length >= 1) {\r\n                this.setState({ users: res.data.users });\r\n                this.setState({ selectedUser: res.data.users[0] })\r\n                let usernames = [];\r\n                for (let i = 0; i < res.data.users.length; i++) {\r\n                    usernames[i] = {\r\n                        label: res.data.users[i].instagramUsername,\r\n                        value: res.data.users[i].instagramUsername\r\n                    }\r\n                }\r\n                this.setFilterUsernames(usernames);\r\n            }\r\n        }).catch(err => {\r\n            console.log('err: ', err);\r\n        });\r\n    }\r\n\r\n    setFilterUsernames(users) {\r\n        this.setState({ filterUsernames: users });\r\n    }\r\n\r\n    getAllProducts() {\r\n        getProducts().then(res => {\r\n            if (res.data != null && res.data.products.length >= 1) {\r\n                this.setState({ products: res.data.products, selects: [{ quantity: 1, code: res.data.products[0].code }] });\r\n            }\r\n        }).catch(err => {\r\n            console.log('err: ', err);\r\n        });\r\n    }\r\n\r\n    addOrderDetail(event) {\r\n        event.preventDefault();\r\n        this.setState({ selects: [...this.state.selects, { quantity: 1, code: this.state.products[0].code }] });\r\n    }\r\n\r\n    removeSelect(event, index) {\r\n        event.preventDefault();\r\n        let newSelects = [...this.state.selects];\r\n        newSelects.splice(index, 1);\r\n        this.setState({ selects: newSelects });\r\n    }\r\n\r\n    handleQuantity(index, event) {\r\n        let newQuantity = event.target.value;\r\n        if (this.state.selects[index]) {\r\n            this.setState(prevState => ({\r\n                selects: prevState.selects.map((select, i) => {\r\n                    return index === i? { ...select, quantity: Number(newQuantity) } : select;\r\n                })\r\n            }));\r\n        } else {\r\n            this.setState({ selects: [...this.state.selects, { quantity: Number(newQuantity) } ] });\r\n        }\r\n    }\r\n\r\n    handleCode(index, event) {\r\n        let newCode = event.target.value;\r\n        if (this.state.selects[index]) {\r\n            this.setState(prevState => ({\r\n                selects: prevState.selects.map((select, i) => {\r\n                    return index === i? { ...select, code: newCode } : select;\r\n                })\r\n            }));\r\n        } else {\r\n            this.setState({ selects: [...this.state.selects, { code: newCode } ] });\r\n        }\r\n    }\r\n\r\n    handleUser(selectedOption) {\r\n        this.setState({ order: { customerId: selectedOption.value }, selectedUser: selectedOption.value });\r\n    }\r\n\r\n    submitOrder() {\r\n        let order = this.state.order;\r\n        order['deliveryDate'] = '';\r\n        order['dispatchingDate'] = '';\r\n        order['orderDetails'] = this.state.selects;\r\n        if (order.customerId === '' || order.customerId == null) {\r\n            this.setState({ errMsg: 'no Instagram username is supplied', hideAlert: false });\r\n        } else {\r\n            insertOrder(order).then(res => {\r\n                this.setState({ errMsg: '', hideAlert: true });\r\n                this.props.getOrders();\r\n                this.props.closeModal();\r\n            }, err => {\r\n                this.setState({ errMsg: err.response.data.msg, hideAlert: false });\r\n            });\r\n        }\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({ errMsg: '', hideAlert: true });\r\n        this.props.closeModal();\r\n    }\r\n\r\n    filterUsernames(event) {\r\n        const filterUsername = event.target.value;\r\n        this.setState(prevState => ({\r\n            filterUsernames: this.state.users.filter((user, i) => {\r\n                return user.instagramUsername.includes(filterUsername);\r\n            })\r\n        }));\r\n    }\r\n\r\n    render() {\r\n        let { selectedUser } = this.state;\r\n        if (selectedUser !== null) {\r\n            selectedUser = selectedUser.instagramUsernamel;\r\n        }\r\n        return(\r\n            <div>\r\n                <Modal isOpen={this.props.showModalInsert}>\r\n                        <ModalHeader>New Order</ModalHeader>\r\n                        <ModalBody>\r\n                        <form>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"alert alert-danger\" role=\"alert\" hidden={this.state.hideAlert}>\r\n                                    { this.state.errMsg }\r\n                                </div>\r\n                                <label>Instagram Username:</label>\r\n                                <Select\r\n                                    value={selectedUser}\r\n                                    onChange={this.handleUser}\r\n                                    options={this.state.filterUsernames}\r\n                                />\r\n                            </div>\r\n                            <hr />\r\n                            <div className=\"add-btn-container\">\r\n                                <button className=\"btn btn-info\" onClick={ (event) => this.addOrderDetail(event) }>Add Suborder</button>\r\n                            </div>\r\n\r\n                            {\r\n                                this.state.selects.map((select, index) => {\r\n                                    return(\r\n                                        <div className=\"row\" key={ index }>\r\n                                            <div className=\"col-md-3\">Sub-order {index + 1}</div>\r\n                                            <div className=\"col-md-3 form-group\">\r\n                                                <select className=\"custom-select\" value={this.state.selects[index].quantity} onChange={(event) => this.handleQuantity(index, event)}>\r\n                                                    <option>1</option>\r\n                                                    <option>2</option>\r\n                                                    <option>3</option>\r\n                                                    <option>4</option>\r\n                                                    <option>5</option>\r\n                                                    <option>6</option>\r\n                                                    <option>7</option>\r\n                                                    <option>8</option>\r\n                                                    <option>9</option>\r\n                                                </select>\r\n                                            </div>\r\n                                            <div className=\"col-md-3 form-group\">\r\n                                                <select className=\"custom-select\" value={this.state.selects[index].code} onChange={(event) => this.handleCode(index, event)}>\r\n                                                    {\r\n                                                        this.state.products.map((product, index) => {\r\n                                                            return <option key={ index }>{ product.code }</option>\r\n                                                        })\r\n                                                    }\r\n                                                </select>\r\n                                            </div>\r\n                                            <div className=\"col-md-3\">\r\n                                                <FontAwesomeIcon className=\"fa-times-delete\" hidden={ this.state.selects.length === 1 } onClick={ (event) => this.removeSelect(event, index) } icon={faTimes} />\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </form>\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <button type=\"submit\" className=\"btn btn-info\" onClick={(event) => this.submitOrder(event)}>Add Order</button>\r\n                            <button type=\"button\" className=\"btn btn-danger\" onClick={this.closeModal}>Cancel</button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport Pagination from \"react-js-pagination\";\r\n\r\nimport './Paginatior.css';\r\n\r\nexport default class Paginatior extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handlePageChange = this.handlePageChange.bind(this);\r\n        this.state = {\r\n            activePage: 1,\r\n            itemsPerPage: this.props.itemsPerPage,\r\n            items: this.props.items\r\n        }\r\n    }\r\n    \r\n    handlePageChange(pageNumber) {\r\n        this.setState({ activePage: pageNumber }, () => {\r\n            const indexOfLastThing = this.state.activePage * this.state.itemsPerPage;\r\n            const indexOfFirstThing = indexOfLastThing - this.state.itemsPerPage;\r\n            const itemsShown = this.props.items.slice(indexOfFirstThing, indexOfLastThing);\r\n            this.props.handleItems(itemsShown, pageNumber);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"pagination__container\">\r\n                <Pagination\r\n                innerClass=\"pagination-overriden\"\r\n                onChange={this.handlePageChange}\r\n                activePage={this.state.activePage}\r\n                totalItemsCount={this.props.items.length}\r\n                itemsCountPerPage={this.state.itemsPerPage}\r\n                itemClass=\"item-page\"\r\n                activeClass=\"item-active-page\"\r\n                hideNavigation={true}\r\n                linkClass=\"link-page\"\r\n                activeLinkClass=\"link-active-page\"\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}","export const addDeleteCheckers = (items) => {\r\n    for (let i = 0; i < items.length; i++) {\r\n        items[i]['orderNumber'] = formulateOrderNumber(items[i]['placingDate']);\r\n        items[i]['toDelete'] = false;\r\n    }\r\n    return items;\r\n}\r\n\r\nconst formulateOrderNumber = (date) => {\r\n    const dateSpliited = new Date(date).toLocaleDateString().split('/');\r\n    const timeSpliited = new Date(date).toLocaleTimeString().split(' ')[0].split(\":\");\r\n    let orderNumber = dateSpliited[0] + dateSpliited[1] + \"-\" + dateSpliited[2] + \"-\" + timeSpliited[0] + timeSpliited[1] + timeSpliited[2];\r\n    return orderNumber;\r\n}","import React from 'react';\r\nimport OrderEdit from '../OrderEdit/OrderEdit';\r\nimport OrderInsert from '../OrderInsert/OrderInsert';\r\nimport Paginator from '../Paginatior/Paginatior';\r\n\r\nimport { getOrders, deleteOrders } from '../../lib/Api';\r\nimport { addDeleteCheckers } from '../../lib/helper_functions';\r\n\r\nimport './Order.css';\r\n\r\nexport default class Order extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.changeCheckboxValue = this.changeCheckboxValue.bind(this);\r\n        this.deleteOrders = this.deleteOrders.bind(this);\r\n        this.filterOrders = this.filterOrders.bind(this);\r\n        this.editOrder = this.editOrder.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.insertOrder = this.insertOrder.bind(this);\r\n        this.getAllOrders = this.getAllOrders.bind(this);\r\n        this.handleOrdersShown = this.handleOrdersShown.bind(this);\r\n        this.updateOrder = this.updateOrder.bind(this);\r\n        this.checkAllDelete = this.checkAllDelete.bind(this);\r\n        this.setOrdersShown = this.setOrdersShown.bind(this);\r\n        this.state = {\r\n            orders: [],\r\n            showModal: false,\r\n            showModalInsert: false,\r\n            orderToEdit: {},\r\n            itemsPerPage: 7,\r\n            activePage: 1,\r\n            ordersShown: [],\r\n            checkAll: false\r\n        }\r\n    }\r\n\r\n    getAllOrders() {\r\n        getOrders().then(res => {\r\n            if (res.data != null && res.data.orders.length >= 1) {\r\n                this.setState({ orders: addDeleteCheckers(res.data.orders) });\r\n                this.setOrdersShown();\r\n            }\r\n        }).catch(err => {\r\n            console.log('err: ', err);\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllOrders();\r\n    }\r\n\r\n    setOrdersShown() {\r\n        const indexOfLastThing = this.state.activePage * this.state.itemsPerPage;\r\n        const indexOfFirstThing = indexOfLastThing - this.state.itemsPerPage;\r\n        this.setState({ ordersShown: this.state.orders.slice(indexOfFirstThing, indexOfLastThing) });\r\n    }\r\n\r\n    filterOrders() {\r\n        let orders = this.state.orders;\r\n        let filteredOrders = orders.filter(order => {\r\n            return !order['toDelete'];\r\n        });\r\n        const indexOfLastThing = this.state.activePage * this.state.itemsPerPage;\r\n        const indexOfFirstThing = indexOfLastThing - this.state.itemsPerPage;\r\n        this.setState({ orders: filteredOrders, ordersShown: filteredOrders.slice(indexOfFirstThing, indexOfLastThing) });\r\n    }\r\n\r\n    insertOrder() {\r\n        this.setState({ showModalInsert: true });\r\n    }\r\n\r\n    deleteOrders() {\r\n        const idsToDelete = [];\r\n        this.state.orders.map((order) => {\r\n            if (order['toDelete']) { \r\n                idsToDelete.push(order._id);\r\n            }\r\n        });\r\n        for (let i = 0; i < idsToDelete.length; i++) {\r\n            deleteOrders(idsToDelete[i]).then(res => {\r\n                this.filterOrders();\r\n            }).catch(err => {\r\n                console.log(err);\r\n            });\r\n        }\r\n    }\r\n\r\n    editOrder(order) {\r\n        console.log(order);\r\n        this.setState({ orderToEdit: order, showModal: true});\r\n    }\r\n\r\n    updateOrder(order) {\r\n        this.setState(prevState => ({\r\n            orders: prevState.orders.map((stateOrder) => {\r\n                return order.orderId === stateOrder._id? {...stateOrder, orderDetails: order.orderDetails, price: order.price, status: order.status, deliveryDate: order.deliveryDate, dispatchingDate: order.dispatchingDate, discountPercentage: order.discountPercentage} : stateOrder;\r\n            })\r\n        }), () => {\r\n            this.setOrdersShown()\r\n        });\r\n    }\r\n\r\n    changeCheckboxValue(index, event) {\r\n        if (index === -1) {\r\n            this.setState(prevState => ({\r\n                orders: prevState.orders.map((stateOrder) => {\r\n                    stateOrder['toDelete'] = prevState.checkAll? false : true;\r\n                    return stateOrder;\r\n                }), checkAll: !prevState.checkAll\r\n            }));\r\n            \r\n            return;\r\n        } else if (this.state.activePage > 1) {\r\n            index += ((this.state.activePage - 1) * this.state.itemsPerPage);\r\n        }\r\n        let orders = this.state.orders;\r\n        orders[index]['toDelete'] = event.target.checked;\r\n        this.setState({ orders });\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({ showModal: false, showModalInsert: false });\r\n    }\r\n\r\n    handleOrdersShown(orders, activePage) {\r\n        this.setState({ ordersShown: orders, activePage });\r\n    }\r\n\r\n    checkAllDelete() {\r\n        let orders = this.state.orders;\r\n        for (let i = 0; i < orders; i++) {\r\n            if (!orders[i]['toDelete']) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"row orders__container\">\r\n                <div className=\"col-md-10 offset-md-1\">\r\n                    <div className=\"orders__btn-container\">\r\n                        <button className=\"btn btn-info orders__btn\" onClick={this.insertOrder}>Insert</button>\r\n                        <button className=\"btn btn-danger orders__btn\" onClick={this.deleteOrders}>Delete</button>\r\n                    </div>\r\n                    <table className=\"table table-bordered\">\r\n                        <thead className=\"thead-light\">\r\n                            <tr>\r\n                                <th>\r\n                                    <div className=\"form-group\">\r\n                                        <div className=\"custom-control custom-checkbox\">\r\n                                            <input className=\"custom-control-input\" id={ \"customCheckAll\" } type=\"checkbox\" checked={this.state.checkAll} onChange={(event) => this.changeCheckboxValue(-1, event)} />\r\n                                            <label className=\"custom-control-label\" htmlFor={ \"customCheckAll\" }></label>\r\n                                        </div>\r\n                                    </div>\r\n                                </th>\r\n                                <th>Customer</th>\r\n                                <th>Order #</th>\r\n                                <th>Order</th>\r\n                                <th>Price</th>\r\n                                <th>Placement Date</th>\r\n                                <th>Dispatching Date</th>\r\n                                <th>Delivery Date</th>\r\n                                <th>Status</th>\r\n                                <th>Edit</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                this.state.ordersShown.map((order, index) => {\r\n                                    return(\r\n                                        <tr key={ index } style={{ backgroundColor:  Number(order.discountPercentage) > 0? '#dc3545' : \"#fff\", color: Number(order.discountPercentage) > 0? '#fff' : '#000' }}>\r\n                                            <td>\r\n                                                <div className=\"form-group\">\r\n                                                    <div className=\"custom-control custom-checkbox\">\r\n                                                        <input className=\"custom-control-input\" id={ \"customCheck\" + index } type=\"checkbox\" checked={order['toDelete']} onChange={(event) => this.changeCheckboxValue(index, event)} />\r\n                                                        <label className=\"custom-control-label\" htmlFor={ \"customCheck\" + index }></label>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </td>\r\n                                            <td>{ order.customerId }</td>\r\n                                            <td>{ order.orderNumber }</td>\r\n                                            <td>\r\n                                                {\r\n                                                    order.orderDetails.map((orderDetail, i) => {\r\n                                                        return(\r\n                                                            <div key={ i }>{ orderDetail.quantity } x { orderDetail.code }</div>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                            </td>\r\n                                            <td>{ order.price } { Number(order.discountPercentage) > 0? '(' + (order.discountPercentage) + '%)' : '' }</td>\r\n                                            <td>{ new Date(order.placingDate).toLocaleString() }</td>\r\n                                            <td>{ order.dispatchingDate === null || order.dispatchingDate === ''? '' : new Date(order.dispatchingDate).toLocaleString() }</td>\r\n                                            <td>{ order.deliveryDate === null || order.deliveryDate === ''? '' : new Date(order.deliveryDate).toLocaleString() }</td>\r\n                                            <td>{ order.status }</td>\r\n                                            <td>\r\n                                                <button className=\"btn btn-info\"  onClick={() => this.editOrder(order)}>Edit</button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                }) \r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                    <Paginator items={this.state.orders} itemsPerPage={this.state.itemsPerPage} handleItems={this.handleOrdersShown} />\r\n                    <OrderEdit showModal={this.state.showModal} order={this.state.orderToEdit} closeModal={this.closeModal} updateOrder={this.updateOrder}></OrderEdit>\r\n                    <OrderInsert showModalInsert={this.state.showModalInsert} closeModal={this.closeModal} getOrders={this.getAllOrders}></OrderInsert>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { insertProduct } from '../../lib/Api';\r\n\r\nexport default class ProductInsert extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleName = this.handleName.bind(this);\r\n        this.handleCode = this.handleCode.bind(this);\r\n        this.handlePrice = this.handlePrice.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.submitProduct = this.submitProduct.bind(this);\r\n        this.state = {\r\n            product: {},\r\n            errMsg: '',\r\n            hideAlert: true\r\n        }\r\n    }\r\n\r\n    handleName(event) {\r\n        const name = event.target.value;\r\n        this.setState(prevState => ({\r\n            product: {\r\n                ...prevState.product,\r\n                name   \r\n            }\r\n        }));\r\n    }\r\n\r\n    handleCode(event) {\r\n        const code = event.target.value;\r\n        this.setState(prevState => ({\r\n            product: {\r\n                ...prevState.product,\r\n                code  \r\n            }\r\n        }));\r\n    }\r\n\r\n    handlePrice(event) {\r\n        const price = event.target.value;\r\n        this.setState(prevState => ({\r\n            product: {\r\n                ...prevState.product,\r\n                price\r\n            }\r\n        }));\r\n    }\r\n\r\n    submitProduct() {\r\n        let product = this.state.product;\r\n        if (product.name == null || product.code == null || product.price == null) {\r\n            this.setState({ errMsg: 'please fill all fields', hideAlert: false });\r\n        } else {\r\n            insertProduct(product).then(res => {\r\n                this.setState({ errMsg: 'please fill all fields', hideAlert: true });\r\n                this.props.getProducts();\r\n                this.props.closeModal();\r\n            }, err => {\r\n                if (err.response.data.includes('[A-Z]')) {\r\n                    this.setState({ errMsg: 'The code should be in the form of one capital letter, one number, a dot then a series of numbers (A1.1)', hideAlert: false });\r\n                } else {\r\n                    this.setState({ errMsg: err.response.data.msg, hideAlert: false });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({ errMsg: '', hideAlert: true });\r\n        this.props.closeModal();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Modal isOpen={this.props.showModalInsert}>\r\n                        <ModalHeader>New Product</ModalHeader>\r\n                        <ModalBody>\r\n                        <div className=\"alert alert-danger\" role=\"alert\" hidden={this.state.hideAlert}>\r\n                            { this.state.errMsg }\r\n                        </div>\r\n                        <form>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Name:</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"productName\" placeholder=\"Name\" onChange={this.handleName} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Code:</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"productCode\" placeholder=\"Code\" onChange={this.handleCode} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Price:</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"productPrice\" placeholder=\"Price\" onChange={this.handlePrice} />\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <button type=\"submit\" className=\"btn btn-info\" onClick={(event) => this.submitProduct(event)}>Add Product</button>\r\n                            <button type=\"button\" className=\"btn btn-danger\" onClick={this.closeModal}>Cancel</button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport ProductInsert from '../ProductInsert/ProductInsert';\r\nimport Paginator from '../Paginatior/Paginatior';\r\n\r\nimport { getProducts, deleteProducts } from '../../lib/Api';\r\nimport { addDeleteCheckers } from '../../lib/helper_functions';\r\nimport './Product.css';\r\n\r\nexport default class Product extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.changeCheckboxValue = this.changeCheckboxValue.bind(this);\r\n        this.deleteProducts = this.deleteProducts.bind(this);\r\n        this.filterProducts = this.filterProducts.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.insertProduct = this.insertProduct.bind(this);\r\n        this.getAllProducts = this.getAllProducts.bind(this);\r\n        this.handleProductsShown = this.handleProductsShown.bind(this);\r\n        this.state = {\r\n            products: [],\r\n            showModal: false,\r\n            showModalInsert: false,\r\n            productsShown: [],\r\n            itemsPerPage: 7,\r\n            activePage: 1,\r\n            checkAll: false,\r\n            hideAlert: true,\r\n            errMsg: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllProducts();\r\n    }\r\n\r\n    insertProduct() {\r\n        this.setState({ showModalInsert: true });\r\n    }\r\n\r\n    getAllProducts() {\r\n        getProducts().then(res => {\r\n            if (res.data != null && res.data.products.length >= 1) {\r\n                this.setState({ products: addDeleteCheckers(res.data.products) });\r\n                const indexOfLastThing = this.state.activePage * this.state.itemsPerPage;\r\n                const indexOfFirstThing = indexOfLastThing - this.state.itemsPerPage;\r\n                this.setState({ productsShown: this.state.products.slice(indexOfFirstThing, indexOfLastThing) });\r\n            }\r\n        }).catch(err => {\r\n            console.log('err: ', err);\r\n        });\r\n    }\r\n\r\n    deleteProducts() {\r\n        const idsToDelete = [];\r\n        this.state.products.map((product) => {\r\n            if (product['toDelete']) { \r\n                idsToDelete.push(product.code);\r\n            }\r\n        });\r\n        for (let i = 0; i < idsToDelete.length; i++) {\r\n            deleteProducts(idsToDelete[i]).then(res => {\r\n                this.setState({ errMsg: '', hideAlert: true });\r\n                this.filterProducts();\r\n            }).catch(err => {\r\n                if(err.response.status === 403) {\r\n                    this.setState({ errMsg: 'this product is already associated with an order', hideAlert: false });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    filterProducts() {\r\n        let products = this.state.products;\r\n        let filteredProducts = products.filter(product => {\r\n            return !product['toDelete'];\r\n        });\r\n        const indexOfLastThing = this.state.activePage * this.state.itemsPerPage;\r\n        const indexOfFirstThing = indexOfLastThing - this.state.itemsPerPage;\r\n        this.setState({ products: filteredProducts, productsShown: filteredProducts.slice(indexOfFirstThing, indexOfLastThing) });\r\n    }\r\n\r\n    changeCheckboxValue(index, event) {\r\n        if (index === -1) {\r\n            this.setState(prevState => ({\r\n                products: prevState.products.map((stateProduct) => {\r\n                    stateProduct['toDelete'] = prevState.checkAll? false : true;\r\n                    return stateProduct;\r\n                }), checkAll: !prevState.checkAll\r\n            }));\r\n            \r\n            return;\r\n        } else if (this.state.activePage > 1) {\r\n            index += ((this.state.activePage - 1) * this.state.itemsPerPage);\r\n        }\r\n        let products = this.state.products;\r\n        products[index]['toDelete'] = event.target.checked;\r\n        this.setState({ products });\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({ showModal: false, showModalInsert: false });\r\n    }\r\n\r\n    handleProductsShown(products, activePage) {\r\n        this.setState({ productsShown: products, activePage });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"row products__container\">\r\n                <div className=\"col-md-10 offset-md-1\">\r\n                    <div className=\"products__btn-container\">\r\n                        <button className=\"btn btn-info products__btn\" onClick={this.insertProduct}>Insert</button>\r\n                        <button className=\"btn btn-danger products__btn\" onClick={this.deleteProducts}>Delete</button>\r\n                    </div>\r\n                    <div className=\"alert alert-danger\" role=\"alert\" hidden={this.state.hideAlert}>\r\n                        { this.state.errMsg }\r\n                    </div>\r\n                    <div>\r\n                        <table className=\"table table-bordered\">\r\n                            <thead className=\"thead-light\">\r\n                                <tr>\r\n                                    <th>\r\n                                        <div className=\"form-group\">\r\n                                            <div className=\"custom-control custom-checkbox\">\r\n                                                <input className=\"custom-control-input\" id={ \"customCheckAll\" } type=\"checkbox\" checked={this.state.checkAll} onChange={(event) => this.changeCheckboxValue(-1, event)} />\r\n                                                <label className=\"custom-control-label\" htmlFor={ \"customCheckAll\" }></label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </th>\r\n                                    <th>Name</th>\r\n                                    <th>Code</th>\r\n                                    <th>Price</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    this.state.productsShown.map((product, index) => {\r\n                                        return(\r\n                                            <tr key={ index }>\r\n                                                <td>\r\n                                                    <div className=\"form-group\">\r\n                                                        <div className=\"custom-control custom-checkbox\">\r\n                                                            <input className=\"custom-control-input\" id={ \"customCheck\" + index } type=\"checkbox\" checked={product['toDelete']} onChange={(event) => this.changeCheckboxValue(index, event)} />\r\n                                                            <label className=\"custom-control-label\" htmlFor={ \"customCheck\" + index }></label>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </td>\r\n                                                <td>{ product.name }</td>\r\n                                                <td>{ product.code }</td>\r\n                                                <td>{ product.price }</td>\r\n                                            </tr>\r\n                                        )\r\n                                    }) \r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n\r\n                    <Paginator items={this.state.products} itemsPerPage={this.state.itemsPerPage} handleItems={this.handleProductsShown} />\r\n\r\n                    <ProductInsert showModalInsert={this.state.showModalInsert} closeModal={this.closeModal} getProducts={this.getAllProducts}></ProductInsert>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { insertUser } from '../../lib/Api';\r\n\r\nexport default class UserInsert extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleName = this.handleName.bind(this);\r\n        this.handleInstagram = this.handleInstagram.bind(this);\r\n        this.handleEmail = this.handleEmail.bind(this);\r\n        this.handlePhone = this.handlePhone.bind(this);\r\n        this.handleAddress = this.handleAddress.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.submitUser = this.submitUser.bind(this);\r\n        this.state = {\r\n            user: {},\r\n            errMsg: '',\r\n            hideAlert: true\r\n        }\r\n    }\r\n\r\n    handleName(event) {\r\n        const name = event.target.value;\r\n        this.setState(prevState => ({\r\n            user: {\r\n                ...prevState.user,\r\n                name   \r\n            }\r\n        }));\r\n    }\r\n\r\n    handleInstagram(event) {\r\n        const instagramUsername = event.target.value;\r\n        this.setState(prevState => ({\r\n            user: {\r\n                ...prevState.user,\r\n                instagramUsername  \r\n            }\r\n        }));\r\n    }\r\n\r\n    handleEmail(event) {\r\n        const email = event.target.value;\r\n        this.setState(prevState => ({\r\n            user: {\r\n                ...prevState.user,\r\n                email\r\n            }\r\n        }));\r\n    }\r\n\r\n    handlePhone(event) {\r\n        const phone = event.target.value;\r\n        this.setState(prevState => ({\r\n            user: {\r\n                ...prevState.user,\r\n                phone\r\n            }\r\n        }));\r\n    }\r\n\r\n    handleAddress(event) {\r\n        const address = event.target.value;\r\n        this.setState(prevState => ({\r\n            user: {\r\n                ...prevState.user,\r\n                address\r\n            }\r\n        }));\r\n    }\r\n\r\n    submitUser() {\r\n        let user = this.state.user;\r\n        insertUser(user).then(res => {\r\n            this.setState({ errMsg: '', hideAlert: true });\r\n            this.props.getUsers();\r\n            this.props.closeModal();\r\n        }, err => {\r\n            if (typeof err.response.data == 'object') {\r\n                this.setState({ errMsg: err.response.data.msg, hideAlert: false });\r\n            } else {\r\n                this.setState({ errMsg: err.response.data, hideAlert: false });\r\n            }\r\n        })\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({ errMsg: '', hideAlert: true });\r\n        this.props.closeModal();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Modal isOpen={this.props.showModalInsert}>\r\n                        <ModalHeader>New User</ModalHeader>\r\n                        <ModalBody>\r\n                        <div className=\"alert alert-danger\" role=\"alert\" hidden={this.state.hideAlert}>\r\n                            { this.state.errMsg }\r\n                        </div>\r\n                        <form>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Name:</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"userName\" placeholder=\"Enter Your Name\" onChange={this.handleName} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Instagram Username:</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"userInstagram\" placeholder=\"Enter Your Instagram Username\" onChange={this.handleInstagram} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Email:</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"userEmail\" placeholder=\"Enter Your Email\" onChange={this.handleEmail} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Phone:</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"userPhone\" placeholder=\"Enter Your Phone\" onChange={this.handlePhone} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Address:</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"userAddress\" placeholder=\"Enter Your Address\" onChange={this.handleAddress} />\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <button type=\"submit\" className=\"btn btn-info\" onClick={(event) => this.submitUser(event)}>Add User</button>\r\n                            <button type=\"button\" className=\"btn btn-danger\" onClick={this.closeModal}>Cancel</button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport UserInsert from '../UserInsert/UserInsert';\r\nimport Paginator from '../Paginatior/Paginatior';\r\n\r\nimport { getUsers, deleteUsers } from '../../lib/Api';\r\nimport { addDeleteCheckers } from '../../lib/helper_functions';\r\n\r\nimport './User.css';\r\n\r\nexport default class User extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.changeCheckboxValue = this.changeCheckboxValue.bind(this);\r\n        this.deleteUsers = this.deleteUsers.bind(this);\r\n        this.filterUsers = this.filterUsers.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.insertUser = this.insertUser.bind(this);\r\n        this.getAllUsers = this.getAllUsers.bind(this);\r\n        this.handleUsersShown = this.handleUsersShown.bind(this);\r\n        this.state = {\r\n            users: [],\r\n            showModalInsert: false,\r\n            itemsPerPage: 7,\r\n            activePage: 1,\r\n            usersShown: [],\r\n            checkAll: false,\r\n            hideAlert: true,\r\n            errMsg: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllUsers();\r\n    }\r\n\r\n    getAllUsers() {\r\n        getUsers().then(res => {\r\n            if (res.data != null && res.data.users.length >= 1) {\r\n                this.setState({ users: addDeleteCheckers(res.data.users) });\r\n                const indexOfLastThing = this.state.activePage * this.state.itemsPerPage;\r\n                const indexOfFirstThing = indexOfLastThing - this.state.itemsPerPage;\r\n                this.setState({ usersShown: this.state.users.slice(indexOfFirstThing, indexOfLastThing) });\r\n            }\r\n        }).catch(err => {\r\n            console.log('err: ', err);\r\n        });\r\n    }\r\n\r\n    changeCheckboxValue(index, event) {\r\n        if (index === -1) {\r\n            this.setState(prevState => ({\r\n                users: prevState.users.map((stateUser) => {\r\n                    stateUser['toDelete'] = prevState.checkAll? false : true;\r\n                    return stateUser;\r\n                }), checkAll: !prevState.checkAll\r\n            }));\r\n            \r\n            return;\r\n        } else if (this.state.activePage > 1) {\r\n            index += ((this.state.activePage - 1) * this.state.itemsPerPage);\r\n        }\r\n        let users = this.state.users;\r\n        users[index]['toDelete'] = event.target.checked;\r\n        this.setState({ users });\r\n    }\r\n\r\n    deleteUsers() {\r\n        const idsToDelete = [];\r\n        this.state.users.map((user) => {\r\n            if (user['toDelete']) { \r\n                idsToDelete.push(user.instagramUsername);\r\n            }\r\n        });\r\n        for (let i = 0; i < idsToDelete.length; i++) {\r\n            deleteUsers(idsToDelete[i]).then(res => {\r\n                this.setState({ errMsg: '', hideAlert: true });\r\n                this.filterUsers();\r\n            }).catch(err => {\r\n                if(err.response.status === 403) {\r\n                    this.setState({ errMsg: 'this user is already associated with an order', hideAlert: false });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    filterUsers() {\r\n        let users = this.state.users;\r\n        let filteredUsers = users.filter(user => {\r\n            return !user['toDelete'];\r\n        });\r\n        const indexOfLastThing = this.state.activePage * this.state.itemsPerPage;\r\n        const indexOfFirstThing = indexOfLastThing - this.state.itemsPerPage;\r\n        this.setState({ users: filteredUsers, usersShown: filteredUsers.slice(indexOfFirstThing, indexOfLastThing) });\r\n    }\r\n\r\n    insertUser() {\r\n        this.setState({ showModalInsert: true });\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({ showModalInsert: false });\r\n    }\r\n\r\n    handleUsersShown(users, activePage) {\r\n        this.setState({ usersShown: users, activePage });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"row users__container\">\r\n                <div className=\"col-md-10 offset-md-1\">\r\n                    <div className=\"users__btn-container\">\r\n                        <button className=\"btn btn-info users__btn\" onClick={this.insertUser}>Insert</button>\r\n                        <button className=\"btn btn-danger users__btn\" onClick={this.deleteUsers}>Delete</button>\r\n                    </div>\r\n                    <div className=\"alert alert-danger\" role=\"alert\" hidden={this.state.hideAlert}>\r\n                        { this.state.errMsg }\r\n                    </div>\r\n                    <div>\r\n                        <table className=\"table table-bordered\">\r\n                            <thead className=\"thead-light\">\r\n                                <tr>\r\n                                    <th>\r\n                                        <div className=\"form-group\">\r\n                                            <div className=\"custom-control custom-checkbox\">\r\n                                                <input className=\"custom-control-input\" id={ \"customCheckAll\" } type=\"checkbox\" checked={this.state.checkAll} onChange={(event) => this.changeCheckboxValue(-1, event)} />\r\n                                                <label className=\"custom-control-label\" htmlFor={ \"customCheckAll\" }></label>\r\n                                            </div>\r\n                                        </div>\r\n                                    </th>\r\n                                    <th>Name</th>\r\n                                    <th>Instagram Username</th>\r\n                                    <th>Email</th>\r\n                                    <th>Phone</th>\r\n                                    <th>Address</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    this.state.usersShown.map((user, index) => {\r\n                                        return(\r\n                                            <tr key={ index }>\r\n                                                <td>\r\n                                                    <div className=\"form-group\">\r\n                                                        <div className=\"custom-control custom-checkbox\">\r\n                                                            <input className=\"custom-control-input\" id={ \"customCheck\" + index } type=\"checkbox\" checked={user['toDelete']} onChange={(event) => this.changeCheckboxValue(index, event)} />\r\n                                                            <label className=\"custom-control-label\" htmlFor={ \"customCheck\" + index }></label>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </td>\r\n                                                <td>{ user.name }</td>\r\n                                                <td>{ user.instagramUsername }</td>\r\n                                                <td>{ user.email }</td>\r\n                                                <td>{ user.phone }</td>\r\n                                                <td>{ user.address }</td>\r\n                                            </tr>\r\n                                        )\r\n                                    }) \r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <Paginator items={this.state.users} itemsPerPage={this.state.itemsPerPage} handleItems={this.handleUsersShown} />\r\n                    <UserInsert showModalInsert={this.state.showModalInsert} closeModal={this.closeModal} getUsers={this.getAllUsers}></UserInsert>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport * as JWT from 'jwt-decode';\r\n\r\nconst AuthenticatedRoute = ({ component: Component, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={props => \r\n            localStorage.getItem('token') && !verifyTokenExpiration()? (\r\n                <Component {...props} />\r\n            ) : (\r\n                <Redirect exact \r\n                    to={{\r\n                        pathname: '/',\r\n                        state: { from: props.location }\r\n                    }}\r\n                />\r\n            )\r\n        }\r\n    />\r\n);\r\n\r\nfunction verifyTokenExpiration() {\r\n    let decoded = JWT(localStorage.getItem('token'));\r\n    if (decoded.exp * 1000 <= Date.now()) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nexport default AuthenticatedRoute;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Dashboard from './components/Dashboard/Dashboard';\nimport Order from './components/Order/Order';\nimport Product from './components/Product/Product';\nimport User from './components/User/User';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport AuthenticatedRoute from './AuthenticatedRoute';\n\nimport { Route, BrowserRouter as Router } from 'react-router-dom';\n\n\nconst routing = (\n    <div>\n        <Router>\n            <div>\n                <Route exact path=\"/\" component={App} />\n                <AuthenticatedRoute path=\"/dashboard\" component={Dashboard} />\n                <AuthenticatedRoute path=\"/dashboard/orders\" component={Order} />\n                <AuthenticatedRoute path=\"/dashboard/products\" component={Product} />\n                <AuthenticatedRoute path=\"/dashboard/users\" component={User} />\n            </div>\n        </Router>\n    </div>\n)\n\nReactDOM.render(routing, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}